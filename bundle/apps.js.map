{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","webpack:///./node_modules/sdp/sdp.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/common_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/utils.js","webpack:///./src/apps/apphelpers.ts","webpack:///./src/apps/callapp.ts","webpack:///./src/apps/entry.ts","webpack:///./src/apps/examples.ts","webpack:///./src/apps/index.ts","webpack:///./src/apps/testapps.ts","webpack:///./src/awrtc/index.ts","webpack:///./src/awrtc/media/AWebRtcCall.ts","webpack:///./src/awrtc/media/CallEventArgs.ts","webpack:///./src/awrtc/media/IMediaNetwork.ts","webpack:///./src/awrtc/media/MediaConfig.ts","webpack:///./src/awrtc/media/NetworkConfig.ts","webpack:///./src/awrtc/media/RawFrame.ts","webpack:///./src/awrtc/media/index.ts","webpack:///./src/awrtc/media_browser/BrowserMediaNetwork.ts","webpack:///./src/awrtc/media_browser/BrowserMediaStream.ts","webpack:///./src/awrtc/media_browser/BrowserWebRtcCall.ts","webpack:///./src/awrtc/media_browser/DeviceApi.ts","webpack:///./src/awrtc/media_browser/MediaPeer.ts","webpack:///./src/awrtc/media_browser/index.ts","webpack:///./src/awrtc/network/Helper.ts","webpack:///./src/awrtc/network/INetwork.ts","webpack:///./src/awrtc/network/LocalNetwork.ts","webpack:///./src/awrtc/network/WebRtcNetwork.ts","webpack:///./src/awrtc/network/WebRtcPeer.ts","webpack:///./src/awrtc/network/WebsocketNetwork.ts","webpack:///./src/awrtc/network/index.ts","webpack:///./src/awrtc/unity/CAPI.ts","webpack:///./src/awrtc/unity/index.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,eAAe,mBAAO,CAAC,sCAAK;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa;AACtB;;AAEA;AACA;AACA;AACA,SAAS,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,+BAA+B;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;ACh0DA;AACa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,0BAA0B;AAC1B;AACA;AACA;AACA,yDAAyD;AACzD,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,IAA0B;AAC9B;AACA;;;;;;;;;;;;ACtsBA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,qBAAqB,mBAAO,CAAC,qFAAsB;AACnD,iCAAiC,sBAAsB;;;;;;;;;;;;;;ACZvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,YAAY,mBAAO,CAAC,8DAAS;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAO,CAAC,wFAAsB;AACjD,iBAAiB,mBAAO,CAAC,gFAAkB;AAC3C,oBAAoB,mBAAO,CAAC,4FAAwB;AACpD,mBAAmB,mBAAO,CAAC,wFAAsB;AACjD,mBAAmB,mBAAO,CAAC,0EAAezJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY,mBAAO,CAAC,kEAAa;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA,oBAAoB,mBAAO,CAAC,mFAAgB;AAC5C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ,sBAAsB;AAC3C;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,+DAA+D;AAC/D;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACx6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY,mBAAO,CAAC,kEAAa;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA,gDAAgD;AAChD;AACA;AACA,yDAAyD,oBAAoB;AAC7E,yDAAyD;AACzD;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,eAAe,mBAAO,CAAC,sCAAK;AAC5B,YAAY,mBAAO,CAAC,8DAAS;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACjSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,+DAAU;AAC9B,uBAAuB,mBAAO,CAAC,yFAAoB;AACnD,4BAA4B,mBAAO,CAAC,0FAAwB;;AAE5D;AACA,oBAAoB,mBAAO,CAAC,iFAAgB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,+DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,+DAAU;;AAE9B;AACA,oBAAoB,mBAAO,CAAC,oFAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,mCAAmC;AACnC;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,+DAAU;AAC9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,8BAA8B;AAC9B,oCAAoC,EAAE;AACtC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAgE;AAC7E,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,YAAY,maAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,0DAA0D;AAC1D;AACA;AACA;AACA,KAAK;AACL,4DAA4D;AAC5D;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACpJA;AAAA;AAAA;AAAA;AAAA;;;;;GAKG;AACI,MAAM,aAAa;IAMd,MAAM,KAAK,aAAa;QAE5B,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,EAAE;YACrC,OAAO,aAAa,CAAC,YAAY,CAAC;SACtC;aACD;YACI,OAAO,aAAa,CAAC,kBAAkB,CAAC;SAC3C;IACL,CAAC;IACD;;;;OAIG;IACI,MAAM,KAAK,SAAS;QAEvB,OAAO,aAAa,CAAC,aAAa,GAAG,OAAO,CAAC;IACjD,CAAC;IAGD;;;;;;OAMG;IACI,MAAM,KAAK,eAAe;QAE7B,OAAO,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC;IACvD,CAAC;IAGO,MAAM,KAAK,UAAU;QAEzB,IAAI,GAAG,GAAkB;YACrB,IAAI,EAAE,8BAA8B;SACvC,CAAC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","file":"apps.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/apps/entry.ts\");\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n"," /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.substr(17).split(' ');\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar adapterFactory = require('./adapter_factory.js');\nmodule.exports = adapterFactory({window: global.window});\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar utils = require('./utils');\n// Shimming starts here.\nmodule.exports = function(dependencies, opts) {\n  var window = dependencies && dependencies.window;\n\n  var options = {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true,\n  };\n\n  for (var key in opts) {\n    if (hasOwnProperty.call(opts, key)) {\n      options[key] = opts[key];\n    }\n  }\n\n  // Utils.\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window);\n\n  // Uncomment the line below if you want logging to occur, including logging\n  // for the switch statement below. Can also be turned on in the browser via\n  // adapter.disableLog(false), but then logging from the switch statement below\n  // will not appear.\n  // require('./utils').disableLog(false);\n\n  // Browser shims.\n  var chromeShim = require('./chrome/chrome_shim') || null;\n  var edgeShim = require('./edge/edge_shim') || null;\n  var firefoxShim = require('./firefox/firefox_shim') || null;\n  var safariShim = require('./safari/safari_shim') || null;\n  var commonShim = require('./common_shim') || null;\n\n  // Export to the adapter global object visible in the browser.\n  var adapter = {\n    browserDetails: browserDetails,\n    commonShim: commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimSourceObject(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n      commonShim.shimCreateObjectURL(window);\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimSourceObject(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n      edgeShim.shimGetDisplayMedia(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n      commonShim.shimCreateObjectURL(window);\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n};\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n/* iterates the stats graph recursively. */\nfunction walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(function(name) {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(function(id) {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nfunction filterStats(result, track, outbound) {\n  var streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  var filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  var trackStats = [];\n  result.forEach(function(value) {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(function(trackStat) {\n    result.forEach(function(stats) {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimMediaStream: function(window) {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n  },\n\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n          }\n          this.addEventListener('track', this._ontrack = f);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!pc._ontrackpoly) {\n          pc._ontrackpoly = function(e) {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', function(te) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === te.track.id;\n                });\n              } else {\n                receiver = {track: te.track};\n              }\n\n              var event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(function(track) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === track.id;\n                });\n              } else {\n                receiver = {track: track};\n              }\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n          };\n          pc.addEventListener('addstream', pc._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    } else {\n      // even if RTCRtpTransceiver is in window, it is only used and\n      // emitted in unified-plan. Unfortunately this means we need\n      // to unconditionally wrap the event.\n      utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n        if (!e.transceiver) {\n          Object.defineProperty(e, 'transceiver',\n            {value: {receiver: e.receiver}});\n        }\n        return e;\n      });\n    }\n  },\n\n  shimGetSendersWithDtmf: function(window) {\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        !('getSenders' in window.RTCPeerConnection.prototype) &&\n        'createDTMFSender' in window.RTCPeerConnection.prototype) {\n      var shimSenderWithDtmf = function(pc, track) {\n        return {\n          track: track,\n          get dtmf() {\n            if (this._dtmf === undefined) {\n              if (track.kind === 'audio') {\n                this._dtmf = pc.createDTMFSender(track);\n              } else {\n                this._dtmf = null;\n              }\n            }\n            return this._dtmf;\n          },\n          _pc: pc\n        };\n      };\n\n      // augment addTrack when getSenders is not available.\n      if (!window.RTCPeerConnection.prototype.getSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          this._senders = this._senders || [];\n          return this._senders.slice(); // return a copy of the internal state.\n        };\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n        window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n          var pc = this;\n          var sender = origAddTrack.apply(pc, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(pc, track);\n            pc._senders.push(sender);\n          }\n          return sender;\n        };\n\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n        window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n          var pc = this;\n          origRemoveTrack.apply(pc, arguments);\n          var idx = pc._senders.indexOf(sender);\n          if (idx !== -1) {\n            pc._senders.splice(idx, 1);\n          }\n        };\n      }\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origAddStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function(track) {\n          pc._senders.push(shimSenderWithDtmf(pc, track));\n        });\n      };\n\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origRemoveStream.apply(pc, [stream]);\n\n        stream.getTracks().forEach(function(track) {\n          var sender = pc._senders.find(function(s) {\n            return s.track === track;\n          });\n          if (sender) {\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\n          }\n        });\n      };\n    } else if (typeof window === 'object' && window.RTCPeerConnection &&\n               'getSenders' in window.RTCPeerConnection.prototype &&\n               'createDTMFSender' in window.RTCPeerConnection.prototype &&\n               window.RTCRtpSender &&\n               !('dtmf' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = this._pc.createDTMFSender(this.track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n  },\n\n  shimSenderReceiverGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender && window.RTCRtpReceiver)) {\n      return;\n    }\n\n    // shim sender stats.\n    if (!('getStats' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      if (origGetSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          var pc = this;\n          var senders = origGetSenders.apply(pc, []);\n          senders.forEach(function(sender) {\n            sender._pc = pc;\n          });\n          return senders;\n        };\n      }\n\n      var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      if (origAddTrack) {\n        window.RTCPeerConnection.prototype.addTrack = function() {\n          var sender = origAddTrack.apply(this, arguments);\n          sender._pc = this;\n          return sender;\n        };\n      }\n      window.RTCRtpSender.prototype.getStats = function() {\n        var sender = this;\n        return this._pc.getStats().then(function(result) {\n          /* Note: this will include stats of all senders that\n           *   send a track with the same id as sender.track as\n           *   it is not possible to identify the RTCRtpSender.\n           */\n          return filterStats(result, sender.track, true);\n        });\n      };\n    }\n\n    // shim receiver stats.\n    if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n      var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n      if (origGetReceivers) {\n        window.RTCPeerConnection.prototype.getReceivers = function() {\n          var pc = this;\n          var receivers = origGetReceivers.apply(pc, []);\n          receivers.forEach(function(receiver) {\n            receiver._pc = pc;\n          });\n          return receivers;\n        };\n      }\n      utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n        e.receiver._pc = e.srcElement;\n        return e;\n      });\n      window.RTCRtpReceiver.prototype.getStats = function() {\n        var receiver = this;\n        return this._pc.getStats().then(function(result) {\n          return filterStats(result, receiver.track, false);\n        });\n      };\n    }\n\n    if (!('getStats' in window.RTCRtpSender.prototype &&\n        'getStats' in window.RTCRtpReceiver.prototype)) {\n      return;\n    }\n\n    // shim RTCPeerConnection.getStats(track).\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function() {\n      var pc = this;\n      if (arguments.length > 0 &&\n          arguments[0] instanceof window.MediaStreamTrack) {\n        var track = arguments[0];\n        var sender;\n        var receiver;\n        var err;\n        pc.getSenders().forEach(function(s) {\n          if (s.track === track) {\n            if (sender) {\n              err = true;\n            } else {\n              sender = s;\n            }\n          }\n        });\n        pc.getReceivers().forEach(function(r) {\n          if (r.track === track) {\n            if (receiver) {\n              err = true;\n            } else {\n              receiver = r;\n            }\n          }\n          return r.track === track;\n        });\n        if (err || (sender && receiver)) {\n          return Promise.reject(new DOMException(\n            'There are more than one sender or receiver for the track.',\n            'InvalidAccessError'));\n        } else if (sender) {\n          return sender.getStats();\n        } else if (receiver) {\n          return receiver.getStats();\n        }\n        return Promise.reject(new DOMException(\n          'There is no sender or receiver for the track.',\n          'InvalidAccessError'));\n      }\n      return origGetStats.apply(pc, arguments);\n    };\n  },\n\n  shimSourceObject: function(window) {\n    var URL = window && window.URL;\n\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this._srcObject;\n          },\n          set: function(stream) {\n            var self = this;\n            // Use _srcObject as a private property for this shim\n            this._srcObject = stream;\n            if (this.src) {\n              URL.revokeObjectURL(this.src);\n            }\n\n            if (!stream) {\n              this.src = '';\n              return undefined;\n            }\n            this.src = URL.createObjectURL(stream);\n            // We need to recreate the blob url when a track is added or\n            // removed. Doing it manually since we want to avoid a recursion.\n            stream.addEventListener('addtrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n            stream.addEventListener('removetrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n          }\n        });\n      }\n    }\n  },\n\n  shimAddTrackRemoveTrackWithNative: function(window) {\n    // shim addTrack/removeTrack with native variants in order to make\n    // the interactions with legacy getLocalStreams behave as in other browsers.\n    // Keeps a mapping stream.id => [stream, rtpsenders...]\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams).map(function(streamId) {\n        return pc._shimmedLocalStreams[streamId][0];\n      });\n    };\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      var sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      var existingSenders = pc.getSenders();\n      origAddStream.apply(this, arguments);\n      var newSenders = pc.getSenders().filter(function(newSender) {\n        return existingSenders.indexOf(newSender) === -1;\n      });\n      this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n    var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(function(streamId) {\n          var idx = pc._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            pc._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (pc._shimmedLocalStreams[streamId].length === 1) {\n            delete pc._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n  },\n\n  shimAddTrackRemoveTrack: function(window) {\n    if (!window.RTCPeerConnection) {\n      return;\n    }\n    var browserDetails = utils.detectBrowser(window);\n    // shim addTrack and removeTrack.\n    if (window.RTCPeerConnection.prototype.addTrack &&\n        browserDetails.version >= 65) {\n      return this.shimAddTrackRemoveTrackWithNative(window);\n    }\n\n    // also shim pc.getLocalStreams when addTrack is shimmed\n    // to return the original streams.\n    var origGetLocalStreams = window.RTCPeerConnection.prototype\n        .getLocalStreams;\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var pc = this;\n      var nativeStreams = origGetLocalStreams.apply(this);\n      pc._reverseStreams = pc._reverseStreams || {};\n      return nativeStreams.map(function(stream) {\n        return pc._reverseStreams[stream.id];\n      });\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      // Add identity mapping for consistency with addTrack.\n      // Unless this is being used with a stream from addTrack.\n      if (!pc._reverseStreams[stream.id]) {\n        var newStream = new window.MediaStream(stream.getTracks());\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        stream = newStream;\n      }\n      origAddStream.apply(pc, [stream]);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\n      delete pc._reverseStreams[(pc._streams[stream.id] ?\n          pc._streams[stream.id].id : stream.id)];\n      delete pc._streams[stream.id];\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      var streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(function(t) {\n            return t === track;\n          })) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      var alreadyExists = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n      var oldStream = pc._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(function() {\n          pc.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        var newStream = new window.MediaStream([track]);\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        pc.addStream(newStream);\n      }\n      return pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n    };\n\n    // replace the internal stream id with the external one and\n    // vice versa.\n    function replaceInternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n            externalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    function replaceExternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n            internalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    ['createOffer', 'createAnswer'].forEach(function(method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      window.RTCPeerConnection.prototype[method] = function() {\n        var pc = this;\n        var args = arguments;\n        var isLegacyCall = arguments.length &&\n            typeof arguments[0] === 'function';\n        if (isLegacyCall) {\n          return nativeMethod.apply(pc, [\n            function(description) {\n              var desc = replaceInternalStreamId(pc, description);\n              args[0].apply(null, [desc]);\n            },\n            function(err) {\n              if (args[1]) {\n                args[1].apply(null, err);\n              }\n            }, arguments[2]\n          ]);\n        }\n        return nativeMethod.apply(pc, arguments)\n        .then(function(description) {\n          return replaceInternalStreamId(pc, description);\n        });\n      };\n    });\n\n    var origSetLocalDescription =\n        window.RTCPeerConnection.prototype.setLocalDescription;\n    window.RTCPeerConnection.prototype.setLocalDescription = function() {\n      var pc = this;\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(pc, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(pc, arguments[0]);\n      return origSetLocalDescription.apply(pc, arguments);\n    };\n\n    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n    var origLocalDescription = Object.getOwnPropertyDescriptor(\n        window.RTCPeerConnection.prototype, 'localDescription');\n    Object.defineProperty(window.RTCPeerConnection.prototype,\n        'localDescription', {\n          get: function() {\n            var pc = this;\n            var description = origLocalDescription.get.apply(this);\n            if (description.type === '') {\n              return description;\n            }\n            return replaceInternalStreamId(pc, description);\n          }\n        });\n\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      var isLocal = sender._pc === pc;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      pc._streams = pc._streams || {};\n      var stream;\n      Object.keys(pc._streams).forEach(function(streamid) {\n        var hasTrack = pc._streams[streamid].getTracks().find(function(track) {\n          return sender.track === track;\n        });\n        if (hasTrack) {\n          stream = pc._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          pc.removeStream(pc._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        pc.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\n        logging('PeerConnection');\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.webkitRTCPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      if (window.webkitRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.webkitRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n    }\n    if (!window.RTCPeerConnection) {\n      return;\n    }\n\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(selector,\n        successCallback, errorCallback) {\n      var pc = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats.apply(this, arguments);\n      }\n\n      // When spec-style getStats is supported, return those when called with\n      // either no arguments or the selector argument is null.\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\n          typeof arguments[0] !== 'function')) {\n        return origGetStats.apply(this, []);\n      }\n\n      var fixChromeStats_ = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: {\n              localcandidate: 'local-candidate',\n              remotecandidate: 'remote-candidate'\n            }[report.type] || report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      // shim getStats with maplike support\n      var makeMapStats = function(stats) {\n        return new Map(Object.keys(stats).map(function(key) {\n          return [key, stats[key]];\n        }));\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper_ = function(response) {\n          args[1](makeMapStats(fixChromeStats_(response)));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper_,\n          arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        origGetStats.apply(pc, [\n          function(response) {\n            resolve(makeMapStats(fixChromeStats_(response)));\n          }, reject]);\n      }).then(successCallback, errorCallback);\n    };\n\n    // add promise support -- natively available in Chrome 51\n    if (browserDetails.version < 51) {\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = window.RTCPeerConnection.prototype[method];\n            window.RTCPeerConnection.prototype[method] = function() {\n              var args = arguments;\n              var pc = this;\n              var promise = new Promise(function(resolve, reject) {\n                nativeMethod.apply(pc, [args[0], resolve, reject]);\n              });\n              if (args.length < 2) {\n                return promise;\n              }\n              return promise.then(function() {\n                args[1].apply(null, []);\n              },\n              function(err) {\n                if (args.length >= 3) {\n                  args[2].apply(null, [err]);\n                }\n              });\n            };\n          });\n    }\n\n    // promise support for createOffer and createAnswer. Available (without\n    // bugs) since M52: crbug/619289\n    if (browserDetails.version < 52) {\n      ['createOffer', 'createAnswer'].forEach(function(method) {\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          var pc = this;\n          if (arguments.length < 1 || (arguments.length === 1 &&\n              typeof arguments[0] === 'object')) {\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\n            return new Promise(function(resolve, reject) {\n              nativeMethod.apply(pc, [resolve, reject, opts]);\n            });\n          }\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n    }\n\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  },\n\n  fixNegotiationNeeded: function(window) {\n    utils.wrapPeerConnectionEvent(window, 'negotiationneeded', function(e) {\n      var pc = e.target;\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n      return e;\n    });\n  },\n\n  shimGetDisplayMedia: function(window, getSourceId) {\n    if (!window.navigator || !window.navigator.mediaDevices ||\n        'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n    // getSourceId is a function that returns a promise resolving with\n    // the sourceId of the screen/window/tab to be shared.\n    if (typeof getSourceId !== 'function') {\n      console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n          'a function');\n      return;\n    }\n    window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n      return getSourceId(constraints)\n        .then(function(sourceId) {\n          var widthSpecified = constraints.video && constraints.video.width;\n          var heightSpecified = constraints.video && constraints.video.height;\n          var frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n    window.navigator.getDisplayMedia = function(constraints) {\n      utils.deprecated('navigator.getDisplayMedia',\n          'navigator.mediaDevices.getDisplayMedia');\n      return window.navigator.mediaDevices.getDisplayMedia(constraints);\n    };\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n\n  var constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      var remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      var getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(function(devices) {\n            devices = devices.filter(function(d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function(d) {\n              return matches.some(function(match) {\n                return d.label.toLowerCase().indexOf(match) !== -1;\n              });\n            });\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function(c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_;\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  };\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      enumerateDevices: function() {\n        return new Promise(function(resolve) {\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\n          return window.MediaStreamTrack.getSources(function(devices) {\n            resolve(devices.map(function(device) {\n              return {label: device.label,\n                kind: kinds[device.kind],\n                deviceId: device.id,\n                groupId: ''};\n            }));\n          });\n        });\n      },\n      getSupportedConstraints: function() {\n        return {\n          deviceId: true, echoCancellation: true, facingMode: true,\n          frameRate: true, height: true, width: true\n        };\n      }\n    };\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return getUserMediaPromise_(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, function(c) {\n        return origGetUserMedia(c).then(function(stream) {\n          if (c.audio && !stream.getAudioTracks().length ||\n              c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function(track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function(e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      logging('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      logging('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n};\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nvar utils = require('./utils');\n\nmodule.exports = {\n  shimRTCIceCandidate: function(window) {\n    // foundation is arbitrarily chosen as an indicator for full support for\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n    if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n        window.RTCIceCandidate.prototype)) {\n      return;\n    }\n\n    var NativeRTCIceCandidate = window.RTCIceCandidate;\n    window.RTCIceCandidate = function(args) {\n      // Remove the a= which shouldn't be part of the candidate string.\n      if (typeof args === 'object' && args.candidate &&\n          args.candidate.indexOf('a=') === 0) {\n        args = JSON.parse(JSON.stringify(args));\n        args.candidate = args.candidate.substr(2);\n      }\n\n      if (args.candidate && args.candidate.length) {\n        // Augment the native candidate with the parsed fields.\n        var nativeCandidate = new NativeRTCIceCandidate(args);\n        var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n        var augmentedCandidate = Object.assign(nativeCandidate,\n            parsedCandidate);\n\n        // Add a serializer that does not serialize the extra attributes.\n        augmentedCandidate.toJSON = function() {\n          return {\n            candidate: augmentedCandidate.candidate,\n            sdpMid: augmentedCandidate.sdpMid,\n            sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n            usernameFragment: augmentedCandidate.usernameFragment,\n          };\n        };\n        return augmentedCandidate;\n      }\n      return new NativeRTCIceCandidate(args);\n    };\n    window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n    // Hook up the augmented candidate in onicecandidate and\n    // addEventListener('icecandidate', ...)\n    utils.wrapPeerConnectionEvent(window, 'icecandidate', function(e) {\n      if (e.candidate) {\n        Object.defineProperty(e, 'candidate', {\n          value: new window.RTCIceCandidate(e.candidate),\n          writable: 'false'\n        });\n      }\n      return e;\n    });\n  },\n\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\n\n  shimCreateObjectURL: function(window) {\n    var URL = window && window.URL;\n\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\n          'srcObject' in window.HTMLMediaElement.prototype &&\n        URL.createObjectURL && URL.revokeObjectURL)) {\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\n      return undefined;\n    }\n\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\n    var streams = new Map(), newId = 0;\n\n    URL.createObjectURL = function(stream) {\n      if ('getTracks' in stream) {\n        var url = 'polyblob:' + (++newId);\n        streams.set(url, stream);\n        utils.deprecated('URL.createObjectURL(stream)',\n            'elem.srcObject = stream');\n        return url;\n      }\n      return nativeCreateObjectURL(stream);\n    };\n    URL.revokeObjectURL = function(url) {\n      nativeRevokeObjectURL(url);\n      streams.delete(url);\n    };\n\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\n                                              'src');\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\n      get: function() {\n        return dsc.get.apply(this);\n      },\n      set: function(url) {\n        this.srcObject = streams.get(url) || null;\n        return dsc.set.apply(this, [url]);\n      }\n    });\n\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\n    window.HTMLMediaElement.prototype.setAttribute = function() {\n      if (arguments.length === 2 &&\n          ('' + arguments[0]).toLowerCase() === 'src') {\n        this.srcObject = streams.get(arguments[1]) || null;\n      }\n      return nativeSetAttribute.apply(this, arguments);\n    };\n  },\n\n  shimMaxMessageSize: function(window) {\n    if (window.RTCSctpTransport || !window.RTCPeerConnection) {\n      return;\n    }\n    var browserDetails = utils.detectBrowser(window);\n\n    if (!('sctp' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n        get: function() {\n          return typeof this._sctp === 'undefined' ? null : this._sctp;\n        }\n      });\n    }\n\n    var sctpInDescription = function(description) {\n      var sections = SDPUtils.splitSections(description.sdp);\n      sections.shift();\n      return sections.some(function(mediaSection) {\n        var mLine = SDPUtils.parseMLine(mediaSection);\n        return mLine && mLine.kind === 'application'\n            && mLine.protocol.indexOf('SCTP') !== -1;\n      });\n    };\n\n    var getRemoteFirefoxVersion = function(description) {\n      // TODO: Is there a better solution for detecting Firefox?\n      var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n      if (match === null || match.length < 2) {\n        return -1;\n      }\n      var version = parseInt(match[1], 10);\n      // Test for NaN (yes, this is ugly)\n      return version !== version ? -1 : version;\n    };\n\n    var getCanSendMaxMessageSize = function(remoteIsFirefox) {\n      // Every implementation we know can send at least 64 KiB.\n      // Note: Although Chrome is technically able to send up to 256 KiB, the\n      //       data does not reach the other peer reliably.\n      //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n      var canSendMaxMessageSize = 65536;\n      if (browserDetails.browser === 'firefox') {\n        if (browserDetails.version < 57) {\n          if (remoteIsFirefox === -1) {\n            // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n            // fragmentation.\n            canSendMaxMessageSize = 16384;\n          } else {\n            // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n            // messages. Thus, supporting ~2 GiB when sending.\n            canSendMaxMessageSize = 2147483637;\n          }\n        } else if (browserDetails.version < 60) {\n          // Currently, all FF >= 57 will reset the remote maximum message size\n          // to the default value when a data channel is created at a later\n          // stage. :(\n          // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n          canSendMaxMessageSize =\n            browserDetails.version === 57 ? 65535 : 65536;\n        } else {\n          // FF >= 60 supports sending ~2 GiB\n          canSendMaxMessageSize = 2147483637;\n        }\n      }\n      return canSendMaxMessageSize;\n    };\n\n    var getMaxMessageSize = function(description, remoteIsFirefox) {\n      // Note: 65536 bytes is the default value from the SDP spec. Also,\n      //       every implementation we know supports receiving 65536 bytes.\n      var maxMessageSize = 65536;\n\n      // FF 57 has a slightly incorrect default remote max message size, so\n      // we need to adjust it here to avoid a failure when sending.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n      if (browserDetails.browser === 'firefox'\n           && browserDetails.version === 57) {\n        maxMessageSize = 65535;\n      }\n\n      var match = SDPUtils.matchPrefix(description.sdp, 'a=max-message-size:');\n      if (match.length > 0) {\n        maxMessageSize = parseInt(match[0].substr(19), 10);\n      } else if (browserDetails.browser === 'firefox' &&\n                  remoteIsFirefox !== -1) {\n        // If the maximum message size is not present in the remote SDP and\n        // both local and remote are Firefox, the remote peer can receive\n        // ~2 GiB.\n        maxMessageSize = 2147483637;\n      }\n      return maxMessageSize;\n    };\n\n    var origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      var pc = this;\n      pc._sctp = null;\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        var isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        var canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        var remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        var maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        var sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get: function() {\n            return maxMessageSize;\n          }\n        });\n        pc._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  },\n\n  shimSendThrowTypeError: function(window) {\n    if (!(window.RTCPeerConnection &&\n        'createDataChannel' in window.RTCPeerConnection.prototype)) {\n      return;\n    }\n\n    // Note: Although Firefox >= 57 has a native implementation, the maximum\n    //       message size can be reset for all data channels at a later stage.\n    //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n    function wrapDcSend(dc, pc) {\n      var origDataChannelSend = dc.send;\n      dc.send = function() {\n        var data = arguments[0];\n        var length = data.length || data.size || data.byteLength;\n        if (dc.readyState === 'open' &&\n            pc.sctp && length > pc.sctp.maxMessageSize) {\n          throw new TypeError('Message too large (can send a maximum of ' +\n            pc.sctp.maxMessageSize + ' bytes)');\n        }\n        return origDataChannelSend.apply(dc, arguments);\n      };\n    }\n    var origCreateDataChannel =\n      window.RTCPeerConnection.prototype.createDataChannel;\n    window.RTCPeerConnection.prototype.createDataChannel = function() {\n      var pc = this;\n      var dataChannel = origCreateDataChannel.apply(pc, arguments);\n      wrapDcSend(dataChannel, pc);\n      return dataChannel;\n    };\n    utils.wrapPeerConnectionEvent(window, 'datachannel', function(e) {\n      wrapDcSend(e.channel, e.target);\n      return e;\n    });\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar filterIceServers = require('./filtericeservers');\nvar shimRTCPeerConnection = require('rtcpeerconnection-shim');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (window.RTCIceGatherer) {\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n      // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed. Workaround for a bug in\n      // addStream, see below. No longer required in 15025+\n      if (browserDetails.version < 15025) {\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\n            window.MediaStreamTrack.prototype, 'enabled');\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n          set: function(value) {\n            origMSTEnabled.set.call(this, value);\n            var ev = new Event('enabled');\n            ev.enabled = value;\n            this.dispatchEvent(ev);\n          }\n        });\n      }\n    }\n\n    // ORTC defines the DTMF sender a bit different.\n    // https://github.com/w3c/ortc/issues/714\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = new window.RTCDtmfSender(this);\n            } else if (this.track.kind === 'video') {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n    // Edge currently only implements the RTCDtmfSender, not the\n    // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n    if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n      window.RTCDTMFSender = window.RTCDtmfSender;\n    }\n\n    var RTCPeerConnectionShim = shimRTCPeerConnection(window,\n        browserDetails.version);\n    window.RTCPeerConnection = function(config) {\n      if (config && config.iceServers) {\n        config.iceServers = filterIceServers(config.iceServers);\n      }\n      return new RTCPeerConnectionShim(config);\n    };\n    window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n  },\n  shimReplaceTrack: function(window) {\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n    if (window.RTCRtpSender &&\n        !('replaceTrack' in window.RTCRtpSender.prototype)) {\n      window.RTCRtpSender.prototype.replaceTrack =\n          window.RTCRtpSender.prototype.setTrack;\n    }\n  },\n  shimGetDisplayMedia: function(window, preferredMediaSource) {\n    if (!('getDisplayMedia' in window.navigator) ||\n        !window.navigator.mediaDevices ||\n        'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n    var origGetDisplayMedia = window.navigator.getDisplayMedia;\n    window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n      return origGetDisplayMedia.call(window.navigator, constraints);\n    };\n    window.navigator.getDisplayMedia = function(constraints) {\n      utils.deprecated('navigator.getDisplayMedia',\n          'navigator.mediaDevices.getDisplayMedia');\n      return origGetDisplayMedia.call(window.navigator, constraints);\n    };\n  }\n};\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nmodule.exports = function(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var navigator = window && window.navigator;\n\n  var shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(function(e) {\n      return Promise.reject(shimError_(e));\n    });\n  };\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.transceiver = {receiver: event.receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n    if (typeof window === 'object' && window.RTCTrackEvent &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        !('transceiver' in window.RTCTrackEvent.prototype)) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function(window) {\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this.mozSrcObject;\n          },\n          set: function(stream) {\n            this.mozSrcObject = stream;\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n        window.mozRTCPeerConnection)) {\n      return; // probably media.peerconnection.enabled=false in about:config\n    }\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (browserDetails.version < 38) {\n          // .urls is not supported in FF < 38.\n          // create RTCIceServers with a single url.\n          if (pcConfig && pcConfig.iceServers) {\n            var newIceServers = [];\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n              var server = pcConfig.iceServers[i];\n              if (server.hasOwnProperty('urls')) {\n                for (var j = 0; j < server.urls.length; j++) {\n                  var newServer = {\n                    url: server.urls[j]\n                  };\n                  if (server.urls[j].indexOf('turn') === 0) {\n                    newServer.username = server.username;\n                    newServer.credential = server.credential;\n                  }\n                  newIceServers.push(newServer);\n                }\n              } else {\n                newIceServers.push(pcConfig.iceServers[i]);\n              }\n            }\n            pcConfig.iceServers = newIceServers;\n          }\n        }\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.mozRTCPeerConnection.prototype;\n\n      // wrap static methods. Currently just generateCertificate.\n      if (window.mozRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.mozRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\n    }\n\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function(stats) {\n      var map = new Map();\n      Object.keys(stats).forEach(function(key) {\n        map.set(key, stats[key]);\n        map[key] = stats[key];\n      });\n      return map;\n    };\n\n    var modernStatsTypes = {\n      inboundrtp: 'inbound-rtp',\n      outboundrtp: 'outbound-rtp',\n      candidatepair: 'candidate-pair',\n      localcandidate: 'local-candidate',\n      remotecandidate: 'remote-candidate'\n    };\n\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(\n      selector,\n      onSucc,\n      onErr\n    ) {\n      return nativeGetStats.apply(this, [selector || null])\n        .then(function(stats) {\n          if (browserDetails.version < 48) {\n            stats = makeMapStats(stats);\n          }\n          if (browserDetails.version < 53 && !onSucc) {\n            // Shim only promise getStats with spec-hyphens in type names\n            // Leave callback version alone; misc old uses of forEach before Map\n            try {\n              stats.forEach(function(stat) {\n                stat.type = modernStatsTypes[stat.type] || stat.type;\n              });\n            } catch (e) {\n              if (e.name !== 'TypeError') {\n                throw e;\n              }\n              // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n              stats.forEach(function(stat, i) {\n                stats.set(i, Object.assign({}, stat, {\n                  type: modernStatsTypes[stat.type] || stat.type\n                }));\n              });\n            }\n          }\n          return stats;\n        })\n        .then(onSucc, onErr);\n    };\n  },\n\n  shimSenderGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender)) {\n      return;\n    }\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n      return;\n    }\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n    }\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function() {\n        var sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function() {\n      return this.track ? this._pc.getStats(this.track) :\n          Promise.resolve(new Map());\n    };\n  },\n\n  shimReceiverGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender)) {\n      return;\n    }\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n      return;\n    }\n    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function() {\n        var pc = this;\n        var receivers = origGetReceivers.apply(pc, []);\n        receivers.forEach(function(receiver) {\n          receiver._pc = pc;\n        });\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function() {\n      return this._pc.getStats(this.track);\n    };\n  },\n\n  shimRemoveStream: function(window) {\n    if (!window.RTCPeerConnection ||\n        'removeStream' in window.RTCPeerConnection.prototype) {\n      return;\n    }\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(function(sender) {\n        if (sender.track && stream.getTracks().indexOf(sender.track) !== -1) {\n          pc.removeTrack(sender);\n        }\n      });\n    };\n  },\n\n  shimRTCDataChannel: function(window) {\n    // rename DataChannel to RTCDataChannel (native fix in FF60):\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n    if (window.DataChannel && !window.RTCDataChannel) {\n      window.RTCDataChannel = window.DataChannel;\n    }\n  },\n\n  shimGetDisplayMedia: function(window, preferredMediaSource) {\n    if (!window.navigator || !window.navigator.mediaDevices ||\n        'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n    window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n      if (!(constraints && constraints.video)) {\n        var err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n    window.navigator.getDisplayMedia = function(constraints) {\n      utils.deprecated('navigator.getDisplayMedia',\n          'navigator.mediaDevices.getDisplayMedia');\n      return window.navigator.mediaDevices.getDisplayMedia(constraints);\n    };\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        InternalError: 'NotReadableError',\n        NotSupportedError: 'TypeError',\n        PermissionDeniedError: 'NotAllowedError',\n        SecurityError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: {\n        'The operation is insecure.': 'The request is not allowed by the ' +\n        'user agent or the platform in the current context.'\n      }[e.message] || e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  // getUserMedia constraints shim.\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    var constraintsToFF37_ = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r. min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (browserDetails.version < 38) {\n      logging('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37_(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37_(constraints.video);\n      }\n      logging('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\n      onError(shimError_(e));\n    });\n  };\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      getUserMedia_(constraints, resolve, reject);\n    });\n  };\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n        return new Promise(function(resolve) {\n          var infos = [\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n          ];\n          resolve(infos);\n        });\n      };\n\n  if (browserDetails.version < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n  if (browserDetails.version < 49) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      return origGetUserMedia(c).then(function(stream) {\n        // Work around https://bugzil.la/802326\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(function(track) {\n            track.stop();\n          });\n          throw new DOMException('The object can not be found here.',\n                                 'NotFoundError');\n        }\n        return stream;\n      }, function(e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  }\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    if (browserDetails.version < 44) {\n      return getUserMedia_(constraints, onSuccess, onError);\n    }\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nvar utils = require('../utils');\n\nmodule.exports = {\n  shimLocalStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getLocalStreams = function() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n    }\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getStreamById = function(id) {\n        var result = null;\n        if (this._localStreams) {\n          this._localStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        if (this._remoteStreams) {\n          this._remoteStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        return result;\n      };\n    }\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        if (this._localStreams.indexOf(stream) === -1) {\n          this._localStreams.push(stream);\n        }\n        var pc = this;\n        stream.getTracks().forEach(function(track) {\n          _addTrack.call(pc, track, stream);\n        });\n      };\n\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (this._localStreams.indexOf(stream) === -1) {\n            this._localStreams.push(stream);\n          }\n        }\n        return _addTrack.call(this, track, stream);\n      };\n    }\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        var index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        var pc = this;\n        var tracks = stream.getTracks();\n        this.getSenders().forEach(function(sender) {\n          if (tracks.indexOf(sender.track) !== -1) {\n            pc.removeTrack(sender);\n          }\n        });\n      };\n    }\n  },\n  shimRemoteStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n    }\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n        get: function() {\n          return this._onaddstream;\n        },\n        set: function(f) {\n          if (this._onaddstream) {\n            this.removeEventListener('addstream', this._onaddstream);\n          }\n          this.addEventListener('addstream', this._onaddstream = f);\n        }\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(function(stream) {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              var event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    }\n  },\n  shimCallbacksAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    var prototype = window.RTCPeerConnection.prototype;\n    var createOffer = prototype.createOffer;\n    var createAnswer = prototype.createAnswer;\n    var setLocalDescription = prototype.setLocalDescription;\n    var setRemoteDescription = prototype.setRemoteDescription;\n    var addIceCandidate = prototype.addIceCandidate;\n\n    prototype.createOffer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.createAnswer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    var withCallback = function(description, successCallback, failureCallback) {\n      var promise = setLocalDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setLocalDescription = withCallback;\n\n    withCallback = function(description, successCallback, failureCallback) {\n      var promise = setRemoteDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setRemoteDescription = withCallback;\n\n    withCallback = function(candidate, successCallback, failureCallback) {\n      var promise = addIceCandidate.apply(this, [candidate]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.addIceCandidate = withCallback;\n  },\n  shimGetUserMedia: function(window) {\n    var navigator = window && window.navigator;\n\n    if (!navigator.getUserMedia) {\n      if (navigator.webkitGetUserMedia) {\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n      } else if (navigator.mediaDevices &&\n          navigator.mediaDevices.getUserMedia) {\n        navigator.getUserMedia = function(constraints, cb, errcb) {\n          navigator.mediaDevices.getUserMedia(constraints)\n          .then(cb, errcb);\n        }.bind(navigator);\n      }\n    }\n  },\n  shimRTCIceServerUrls: function(window) {\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n    var OrigPeerConnection = window.RTCPeerConnection;\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n    // wrap static methods. Currently just generateCertificate.\n    if ('generateCertificate' in window.RTCPeerConnection) {\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n  },\n  shimTrackEventTransceiver: function(window) {\n    // Add event.transceiver member over deprecated event.receiver\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n        // defined for some reason even when window.RTCTransceiver is not.\n        !window.RTCTransceiver) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimCreateOfferLegacy: function(window) {\n    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n    window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\n      var pc = this;\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n        }\n        var audioTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'audio';\n        });\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          pc.addTransceiver('audio');\n        }\n\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n        }\n        var videoTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'video';\n        });\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            videoTransceiver.setDirection('sendonly');\n          } else if (videoTransceiver.direction === 'recvonly') {\n            videoTransceiver.setDirection('inactive');\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          pc.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(pc, arguments);\n    };\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nfunction extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    var wrappedCallback = function(e) {\n      var modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    var unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\n// Utility methods.\nmodule.exports = {\n  extractVersion: extractVersion,\n  wrapPeerConnectionEvent: wrapPeerConnectionEvent,\n  disableLog: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    logDisabled_ = bool;\n    return (bool) ? 'adapter.js logging disabled' :\n        'adapter.js logging enabled';\n  },\n\n  /**\n   * Disable or enable deprecation warnings\n   * @param {!boolean} bool set to true to disable warnings.\n   */\n  disableWarnings: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n  },\n\n  log: function() {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\n   */\n  deprecated: function(oldMethod, newMethod) {\n    if (!deprecationWarnings_) {\n      return;\n    }\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n        ' instead.');\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function(window) {\n    var navigator = window && window.navigator;\n\n    // Returned result object.\n    var result = {};\n    result.browser = null;\n    result.version = null;\n\n    // Fail early if it's not a browser\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    if (navigator.mozGetUserMedia) { // Firefox.\n      result.browser = 'firefox';\n      result.version = extractVersion(navigator.userAgent,\n          /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera.\n      // Version matches Chrome/WebRTC version.\n      result.browser = 'chrome';\n      result.version = extractVersion(navigator.userAgent,\n          /Chrom(e|ium)\\/(\\d+)\\./, 2);\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n      result.browser = 'edge';\n      result.version = extractVersion(navigator.userAgent,\n          /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (window.RTCPeerConnection &&\n        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n      result.browser = 'safari';\n      result.version = extractVersion(navigator.userAgent,\n          /AppleWebKit\\/(\\d+)\\./, 1);\n    } else { // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  }\n};\n","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport * as awrtc from \"../awrtc\";\n\n/**\n * Contains default values / servers used for example and test apps.\n * \n * Note that these servers might not be online forever. Feel free to\n * run your own servers and update the url's below.\n */\nexport class DefaultValues\n{\n    private static SignalingUrl= \"ws://signaling.because-why-not.com\";\n    private static SecureSignalingUrl= \"wss://signaling.because-why-not.com\";\n\n\n    private static get SignalingBase():string\n    {\n        if (window.location.protocol != \"https:\") {\n             return DefaultValues.SignalingUrl;\n        } else\n        {\n            return DefaultValues.SecureSignalingUrl;\n        }\n    }\n    /**\n     * Returns the signaling server URL using ws for http pages and \n     * wss for https. The server url here ends with \"test\" to avoid\n     * clashes with existing callapp. \n     */\n    public static get Signaling():string\n    {\n        return DefaultValues.SignalingBase + \"/test\";\n    }\n\n\n    /**\n     * Returns the signaling server URL using ws for http pages and \n     * wss for https. The server url here ends with \"testshared\" to avoid\n     * clashes with existing conference app.\n     * This url of the server usually allows shared addresses for \n     * n to n connections / conference calls. \n     */\n    public static get SignalingShared():string\n    {\n        return DefaultValues.SignalingBase + \"/testshared\";\n    }\n\n\n    private static get StunServer() : RTCIceServer\n    {\n        let res : RTCIceServer = {\n            urls: \"stun:stun.l.google.com:19302\"\n        };\n        return res;\n    }\n\n    /**\n     * Returns ice servers used for testing.\n     * Might only return the free google stun server. Without an\n     * additional turn server connections might fail due to firewall.\n     * Server might be unavailable in China. \n     */\n    public static get IceServers(): RTCIceServer[]\n    {\n        return [DefaultValues.StunServer];\n    }\n}\n\n\n\n//\nexport function GetParameterByName(name : string, url?:string) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n//Returns a random string\nexport function GetRandomKey(): string {\n\n    var result = \"\";\n    for (var i = 0; i < 7; i++) {\n        result += String.fromCharCode(65 + Math.round(Math.random() * 25));\n    }\n    return result;\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nimport * as awrtc from \"../awrtc/index\"\nimport { ConnectionId } from \"../awrtc/index\";\n\n/**\n * Main (and most complicated) example for using BrowserWebRtcCall.\n * Have a look at examples.html for easier scenarios.\n *\n *\n *\n * Features:\n * - Build a \"Join\" system on top of the regular Listen / Call model to make it easier to use.\n * - basic user interface (This is for easy testing not for use as a final application!!! Write your own using the API)\n * - setup to be compatible with the Unity Asset's CallApp (but without TURN server!)\n * - Get parameters from the address line to configure the call\n * - autostart the call (this might not work in all browsers. Mostly used for testing)\n * Todo:\n * - text message system (so far it sends back the same message)\n * - conference call support\n *\n *\n */\nexport class CallApp\n{\n    private mAddress;\n    private mNetConfig = new awrtc.NetworkConfig();\n    private mCall : awrtc.BrowserWebRtcCall = null;\n\n    //update loop\n    private mIntervalId:any = -1;\n\n    private mLocalVideo: HTMLVideoElement = null;\n    private mRemoteVideo = {};\n\n    private mIsRunning = false;\n\n    public constructor()\n    {\n        this.mNetConfig.IceServers = [\n            {urls: \"stun:stun.because-why-not.com:443\"},\n            {urls: \"stun:stun.l.google.com:19302\"}\n        ];\n        //use for testing conferences\n        //this.mNetConfig.IsConference = true;\n        //this.mNetConfig.SignalingUrl = \"wss://signaling.because-why-not.com/testshared\";\n        this.mNetConfig.IsConference = false;\n        // this.mNetConfig.SignalingUrl = \"wss://signaling.because-why-not.com/callapp\";\n        this.mNetConfig.SignalingUrl = \"ws://localhost:12776/callapp\";\n    }\n\n\n\n    private GetParameterByName(name) {\n        var url = window.location.href;\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\n        if (!results)\n            return null;\n        if (!results[2])\n            return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n    }\n    private tobool(value, defaultval)\n    {\n        if(value === true || value === \"true\")\n            return true;\n        if(value === false || value === \"false\")\n            return false;\n\n        return defaultval;\n    }\n\n\n\n\n\n    public Start(address, audio, video) : void\n    {\n        if(this.mCall != null)\n            this.Stop();\n\n        this.mIsRunning = true;\n        this.Ui_OnStart()\n        console.log(\"start\");\n        console.log(\"Using signaling server url: \" + this.mNetConfig.SignalingUrl);\n\n        //create media configuration\n        var config = new awrtc.MediaConfig();\n        config.Audio = audio;\n        config.Video = video;\n        config.IdealWidth = 1920;\n        config.IdealHeight = 960;\n        config.IdealFps = 30;\n\n        //For usage in HTML set FrameUpdates to false and wait for  MediaUpdate to\n        //get the VideoElement. By default awrtc would deliver frames individually\n        //for use in Unity WebGL\n        console.log(\"requested config:\" + JSON.stringify(config));\n        //setup our high level call class.\n        this.mCall = new awrtc.BrowserWebRtcCall(this.mNetConfig);\n\n        //handle events (get triggered after Configure / Listen call)\n        //+ugly lambda to avoid loosing \"this\" reference\n        this.mCall.addEventListener((sender, args)=>{\n            this.OnNetworkEvent(sender, args);\n        });\n\n\n\n        //As the system is designed for realtime graphics we have to call the Update method. Events are only\n        //triggered during this Update call!\n        this.mIntervalId = setInterval(()=>{\n            this.Update();\n        }, 50);\n\n\n        //configure media. This will request access to media and can fail if the user doesn't have a proper device or\n        //blocks access\n        this.mCall.Configure(config);\n\n        //Try to listen to the address\n        //Conference mode = everyone listening will connect to each other\n        //Call mode -> If the address is free it will wait for someone else to connect\n        //          -> If the address is used then it will fail to listen and then try to connect via Call(address);\n        this.mCall.Listen(address);\n\n    }\n\n\n\n    public Stop(): void\n    {\n        this.Cleanup();\n    }\n\n    private Cleanup():void{\n\n        if(this.mCall != null)\n        {\n            this.mCall.Dispose();\n            this.mCall = null;\n            clearInterval(this.mIntervalId);\n            this.mIntervalId = -1;\n            this.mIsRunning = false;\n            this.mLocalVideo = null;\n            this.mRemoteVideo = {};\n        }\n        this.Ui_OnCleanup();\n    }\n\n    private Update():void\n    {\n        if(this.mCall != null)\n            this.mCall.Update();\n    }\n\n    private OnNetworkEvent(sender: any, args: awrtc.CallEventArgs):void{\n\n        //User gave access to requested camera/ microphone\n        if (args.Type == awrtc.CallEventType.ConfigurationComplete){\n            console.log(\"configuration complete\");\n        }\n        else if (args.Type == awrtc.CallEventType.MediaUpdate) {\n\n            let margs = args as awrtc.MediaUpdatedEventArgs;\n            if (this.mLocalVideo == null && margs.ConnectionId == awrtc.ConnectionId.INVALID) {\n\n                var videoElement = margs.VideoElement;\n                this.mLocalVideo = videoElement;\n                this.Ui_OnLocalVideo(videoElement);\n                console.log(\"local video added resolution:\" + videoElement.videoWidth  + videoElement.videoHeight + \" fps: ??\");\n            }\n            else if (margs.ConnectionId != awrtc.ConnectionId.INVALID && this.mRemoteVideo[margs.ConnectionId.id] == null) {\n\n                var videoElement = margs.VideoElement;\n                this.mRemoteVideo[margs.ConnectionId.id] = videoElement;\n                this.Ui_OnRemoteVideo(videoElement, margs.ConnectionId);\n                console.log(\"remote video added resolution:\" + videoElement.videoWidth  + videoElement.videoHeight + \" fps: ??\");\n            }\n        }\n        else if (args.Type == awrtc.CallEventType.ListeningFailed) {\n            //First attempt of this example is to try to listen on a certain address\n            //for conference calls this should always work (expect the internet is dead)\n            if (this.mNetConfig.IsConference == false) {\n                //no conference call and listening failed? someone might have claimed the address.\n                //Try to connect to existing call\n                this.mCall.Call(this.mAddress);\n            }\n            else {\n                let errorMsg = \"Listening failed. Offline? Server dead?\";\n                console.error(errorMsg);\n                this.Ui_OnError(errorMsg);\n                this.Cleanup();\n                return;\n            }\n        }\n        else if (args.Type == awrtc.CallEventType.ConnectionFailed) {\n            //Outgoing call failed entirely. This can mean there is no address to connect to,\n            //server is offline, internet is dead, firewall blocked access, ...\n            let errorMsg = \"Connection failed. Offline? Server dead? \";\n            console.error(errorMsg);\n            this.Ui_OnError(errorMsg);\n            this.Cleanup();\n            return;\n        }\n        else if (args.Type == awrtc.CallEventType.CallEnded) {\n            //call ended or was disconnected\n            var callEndedEvent = args as awrtc.CallEndedEventArgs;\n            console.log(\"call ended with id \" + callEndedEvent.ConnectionId.id);\n            delete this.mRemoteVideo[callEndedEvent.ConnectionId.id];\n            this.Ui_OnLog(\"Disconnected from user with id \" + callEndedEvent.ConnectionId.id);\n            //check if this was the last user\n            if(this.mNetConfig.IsConference == false && Object.keys(this.mRemoteVideo).length == 0)\n            {\n                //1 to 1 call and only user left -> quit\n                this.Cleanup();\n                return;\n            }\n        }\n        else if (args.Type == awrtc.CallEventType.Message) {\n            //no ui for this yet. simply echo messages for testing\n            let messageArgs = args as awrtc.MessageEventArgs;\n            this.mCall.Send(messageArgs.Content, messageArgs.Reliable, messageArgs.ConnectionId);\n        }\n        else if (args.Type == awrtc.CallEventType.DataMessage) {\n            //no ui for this yet. simply echo messages for testing\n            let messageArgs = args as awrtc.DataMessageEventArgs;\n            this.mCall.SendData(messageArgs.Content, messageArgs.Reliable, messageArgs.ConnectionId);\n        }\n        else {\n            console.log(\"Unhandled event: \" + args.Type);\n        }\n    }\n\n\n    //UI calls. should be moved out into its own class later\n    private mAudio;\n    private mVideo;\n    private mAutostart;\n    private mUiAddress: HTMLInputElement;\n    private mUiAudio: HTMLInputElement;\n    private mUiVideo: HTMLInputElement;\n    private mUiButton: HTMLButtonElement;\n    private mUiUrl: HTMLElement;\n    private mUiLocalVideoParent: HTMLElement;\n    private mUiRemoteVideoParent: HTMLElement;\n\n    public setupUi(parent : HTMLElement)\n    {\n        this.mUiAddress = parent.querySelector<HTMLInputElement>(\".callapp_address\");\n        this.mUiAudio = parent.querySelector<HTMLInputElement>(\".callapp_send_audio\");\n        this.mUiVideo = parent.querySelector<HTMLInputElement>(\".callapp_send_video\");\n        this.mUiUrl = parent.querySelector<HTMLParagraphElement>(\".callapp_url\");\n        this.mUiButton = parent.querySelector<HTMLInputElement>(\".callapp_button\");\n        this.mUiLocalVideoParent =  parent.querySelector<HTMLParagraphElement>(\".callapp_local_video\");\n        this.mUiRemoteVideoParent =  parent.querySelector<HTMLParagraphElement>(\".callapp_remote_video\");\n        this.mUiAudio.onclick = this.Ui_OnUpdate;\n        this.mUiVideo.onclick = this.Ui_OnUpdate;\n        this.mUiAddress.onkeyup = this.Ui_OnUpdate;\n        this.mUiButton.onclick = this.Ui_OnStartStopButtonClicked;\n\n        //set default value + make string \"true\"/\"false\" to proper booleans\n        this.mAudio = this.GetParameterByName(\"audio\");\n        this.mAudio  = this.tobool(this.mAudio , true)\n\n        this.mVideo  = this.GetParameterByName(\"video\");\n        this.mVideo  = this.tobool(this.mVideo , true);\n\n        this.mAutostart = this.GetParameterByName(\"autostart\");\n        this.mAutostart = this.tobool(this.mAutostart, false);\n        this.mAddress = this.GetParameterByName(\"a\");\n\n\n        //if autostart is set but no address is given -> create one and reopen the page\n        if (this.mAddress === null && this.mAutostart == true) {\n            this.mAddress = this.GenerateRandomKey();\n            window.location.href = this.GetUrlParams();\n        }\n        else\n        {\n            if(this.mAddress === null)\n                this.mAddress = this.GenerateRandomKey();\n                this.Ui_Update();\n        }\n\n        //used for interacting with the Unity CallApp\n\n        //current hack to get the html element delivered. by default this\n        //just the image is copied and given as array\n        //Lazy frames will be the default soon though\n\n\n        if(this.mAutostart)\n        {\n            console.log(\"Starting automatically ... \")\n            this.Start(this.mAddress, this.mAudio , this.mVideo );\n        }\n\n        console.log(\"address: \" + this.mAddress + \" audio: \" + this.mAudio  + \" video: \" + this.mVideo  + \" autostart: \" + this.mAutostart);\n    }\n    private Ui_OnStart(){\n        this.mUiButton.textContent = \"Stop\";\n    }\n    private Ui_OnCleanup()\n    {\n        this.mUiButton.textContent = \"Join\";\n        while (this.mUiLocalVideoParent.hasChildNodes()) {\n            this.mUiLocalVideoParent.removeChild(this.mUiLocalVideoParent.firstChild);\n        }\n        while (this.mUiRemoteVideoParent.hasChildNodes()) {\n            this.mUiRemoteVideoParent.removeChild(this.mUiRemoteVideoParent.firstChild);\n        }\n    }\n    private Ui_OnLog(msg:string){\n\n    }\n    private Ui_OnError(msg:string){\n\n    }\n    private Ui_OnLocalVideo(video : HTMLVideoElement){\n        this.mUiLocalVideoParent.appendChild( document.createElement(\"br\"));\n        this.mUiLocalVideoParent.appendChild(video);\n    }\n\n    private Ui_OnRemoteVideo(video : HTMLVideoElement, id: ConnectionId){\n\n        this.mUiRemoteVideoParent.appendChild( document.createElement(\"br\"));\n        this.mUiRemoteVideoParent.appendChild(new Text(\"connection \" + id.id));\n        this.mUiRemoteVideoParent.appendChild( document.createElement(\"br\"));\n        this.mUiRemoteVideoParent.appendChild(video);\n    }\n\n    public Ui_OnStartStopButtonClicked = ()=>{\n        if(this.mIsRunning) {\n\n            this.Stop();\n        }else{\n            this.Start(this.mAddress, this.mAudio, this.mVideo);\n        }\n\n    }\n    public Ui_OnUpdate = ()=>\n    {\n        console.debug(\"OnUiUpdate\");\n        this.mAddress = this.mUiAddress.value;\n        this.mAudio  = this.mUiAudio.checked;\n        this.mVideo  = this.mUiVideo.checked;\n        this.mUiUrl.innerHTML = this.GetUrl();\n    }\n\n    public Ui_Update() : void\n    {\n        console.log(\"UpdateUi\");\n        this.mUiAddress.value = this.mAddress;\n        this.mUiAudio.checked = this.mAudio ;\n        this.mUiVideo.checked = this.mVideo ;\n        this.mUiUrl.innerHTML = this.GetUrl();\n    }\n\n\n    private GenerateRandomKey() {\n        var result = \"\";\n        for (var i = 0; i < 7; i++) {\n            result += String.fromCharCode(65 + Math.round(Math.random() * 25));\n        }\n        return result;\n    }\n    private GetUrlParams() {\n        return \"?a=\" + this.mAddress + \"&audio=\" + this.mAudio  + \"&video=\" + this.mVideo  + \"&\" + \"autostart=\" + true;\n    }\n    private GetUrl() {\n        return location.protocol + '//' + location.host + location.pathname + this.GetUrlParams();\n    }\n}\n\n\n\nexport function callapp(parent: HTMLElement)\n{\n    let callApp : CallApp;\n    console.log(\"init callapp\");\n    if(parent == null)\n    {\n        console.log(\"parent was null\");\n        parent = document.body;\n    }\n    awrtc.SLog.SetLogLevel(awrtc.SLogLevel.Info);\n    callApp = new CallApp();\n    callApp.setupUi(parent);\n\n}\n","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport * as apps from \"./index\"\nimport * as awrtc from \"../awrtc/index\"\n\n(window as any).awrtc = awrtc;\n(window as any).apps = apps;","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport * as awrtc from \"../awrtc/index\"\nimport { DefaultValues, GetRandomKey, GetParameterByName } from \"./apphelpers\";\nimport { WebsocketNetwork } from \"../awrtc/index\";\n\n//Creates two WebRtcNetwork objects and connects them\n//directly + sends test messages\nexport function WebRtcNetwork_minimal() {\n    console.log(\"test1\");\n\n    var testMessage = \"test1234\";\n\n    var websocketurl: string = DefaultValues.Signaling;\n\n    let rtcConfig: RTCConfiguration = { iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] } as RTCIceServer] };\n\n\n    var srv = new awrtc.WebRtcNetwork(new awrtc.SignalingConfig(new WebsocketNetwork(websocketurl)), rtcConfig);\n    srv.StartServer();\n\n    var clt = new awrtc.WebRtcNetwork(new awrtc.SignalingConfig(new WebsocketNetwork(websocketurl)), rtcConfig);\n\n\n    setInterval(() => {\n\n        srv.Update();\n        var evt: awrtc.NetworkEvent = null;\n        while (evt = srv.Dequeue()) {\n\n            console.log(\"server inc: \" + evt.toString());\n\n            if (evt.Type == awrtc.NetEventType.ServerInitialized) {\n                console.log(\"server started. Address \" + evt.Info);\n\n                clt.Connect(evt.Info);\n            } else if (evt.Type == awrtc.NetEventType.ServerInitFailed) {\n                console.error(\"server start failed\");\n            } else if (evt.Type == awrtc.NetEventType.NewConnection) {\n                console.log(\"server new incoming connection\");\n            } else if (evt.Type == awrtc.NetEventType.Disconnected) {\n                console.log(\"server peer disconnected\");\n                console.log(\"server shutdown\");\n                srv.Shutdown();\n            } else if (evt.Type == awrtc.NetEventType.ReliableMessageReceived) {\n                srv.SendData(evt.ConnectionId, evt.MessageData, true);\n            } else if (evt.Type == awrtc.NetEventType.UnreliableMessageReceived) {\n                srv.SendData(evt.ConnectionId, evt.MessageData, false);\n            }\n        }\n        srv.Flush();\n\n\n        clt.Update();\n        while (evt = clt.Dequeue()) {\n\n            console.log(\"client inc: \" + evt.toString());\n\n            if (evt.Type == awrtc.NetEventType.NewConnection) {\n                console.log(\"client connection established\");\n                \n                let buff = awrtc.Encoding.UTF16.GetBytes(testMessage);\n                clt.SendData(evt.ConnectionId, buff, true);\n            } else if (evt.Type == awrtc.NetEventType.ReliableMessageReceived) {\n\n                \n                //check last message\n                let str = awrtc.Encoding.UTF16.GetString(evt.MessageData);\n                if (str != testMessage) {\n                    console.error(\"Test failed sent string %s but received string %s\", testMessage, str);\n                }\n\n\n\n                let buff = awrtc.Encoding.UTF16.GetBytes(testMessage);\n                clt.SendData(evt.ConnectionId, buff, false);\n            } else if (evt.Type == awrtc.NetEventType.UnreliableMessageReceived) {\n                let str = awrtc.Encoding.UTF16.GetString(evt.MessageData);\n                if (str != testMessage) {\n                    console.error(\"Test failed sent string %s but received string %s\", testMessage, str);\n                }\n\n                console.log(\"client disconnecting\");\n                clt.Disconnect(evt.ConnectionId);\n                console.log(\"client shutting down\");\n                clt.Shutdown();\n            }\n        }\n        clt.Flush();\n    }, 100);\n}\n\n\n\ninterface IRemoteVideoDict {\n    [connectionId: number]: HTMLVideoElement;\n}\nclass MinimalCall\n{\n    //just a number we give each local call to\n    //identify the output of each individual call\n    mId:number = -1;\n    mCall: awrtc.BrowserWebRtcCall = null;\n    mLocalVideo: HTMLVideoElement = null;\n    mRemoteVideo: IRemoteVideoDict = {};\n\n    mNetConfig: awrtc.NetworkConfig;\n    mMediaConfig: awrtc.MediaConfig;\n\n    mAddress: string;\n\n    mDiv:HTMLElement;\n\n    constructor( id, netConfig:awrtc.NetworkConfig, mediaConfig: awrtc.MediaConfig)\n    {\n        this.mId = id;\n        this.mNetConfig = netConfig;\n        this.mMediaConfig = mediaConfig;\n    }\n\n    public Start(address:string): void\n    {   \n        this.mDiv = document.createElement(\"div\");\n        document.body.appendChild(this.mDiv);\n        this.mDiv.innerHTML += \"<h1>Call \" + this.mId + \"</h1>\";\n        this.mAddress = address;\n        this.mCall = new awrtc.BrowserWebRtcCall(this.mNetConfig);\n\n    \n        this.mCall.addEventListener((sender: any, args: awrtc.CallEventArgs) => {\n            this.OnCallEvent(sender, args);\n        });\n\n        setInterval(() => {\n            this.Update();\n        }, 50);\n\n\n        this.mCall.Configure(this.mMediaConfig);\n    }\n\n    private OnCallEvent(sender: any, args: awrtc.CallEventArgs)\n    {\n        \n        if (args.Type == awrtc.CallEventType.ConfigurationComplete) {\n            console.log(\"configuration complete\");\n            this.mCall.Listen(this.mAddress);\n        }/* Old system. not used anymore\n         else if (args.Type == awrtc.CallEventType.FrameUpdate) {\n\n            let frameUpdateArgs = args as awrtc.FrameUpdateEventArgs;\n            if (this.mLocalVideo == null && frameUpdateArgs.ConnectionId == awrtc.ConnectionId.INVALID) {\n                this.mDiv.innerHTML += \"local video: \" + \"<br>\";\n                console.log(this.mId  + \":local video added\");\n                let lazyFrame = frameUpdateArgs.Frame as awrtc.LazyFrame;\n                this.mLocalVideo = lazyFrame.FrameGenerator.VideoElement;\n                this.mDiv.appendChild(this.mLocalVideo);\n\n\n            } else if (frameUpdateArgs.ConnectionId != awrtc.ConnectionId.INVALID && this.mRemoteVideo[frameUpdateArgs.ConnectionId.id] == null) {\n                console.log(this.mId  + \":remote video added\");\n                let lazyFrame = frameUpdateArgs.Frame as awrtc.LazyFrame;\n                this.mDiv.innerHTML += \"remote \" + this.mId + \"<br>\";\n                this.mRemoteVideo[frameUpdateArgs.ConnectionId.id] = lazyFrame.FrameGenerator.VideoElement;\n                this.mDiv.appendChild(this.mRemoteVideo[frameUpdateArgs.ConnectionId.id]);\n            }\n        }*/\n        else if (args.Type == awrtc.CallEventType.MediaUpdate) {\n            \n            let margs = args as awrtc.MediaUpdatedEventArgs;\n            if (this.mLocalVideo == null && margs.ConnectionId == awrtc.ConnectionId.INVALID) {\n\n                var videoElement = margs.VideoElement;\n                this.mLocalVideo = videoElement;\n                this.mDiv.innerHTML += \"local video: \" + \"<br>\";\n                this.mDiv.appendChild(videoElement);\n                console.log(\"local video added resolution:\" + videoElement.videoWidth  + videoElement.videoHeight + \" fps: ??\");\n\n            }\n            else if (margs.ConnectionId != awrtc.ConnectionId.INVALID && this.mRemoteVideo[margs.ConnectionId.id] == null) {\n                \n                var videoElement = margs.VideoElement;\n                this.mRemoteVideo[margs.ConnectionId.id] = videoElement;\n                this.mDiv.innerHTML += \"remote \" + this.mId + \"<br>\";\n                this.mDiv.appendChild(videoElement);\n                console.log(\"remote video added resolution:\" + videoElement.videoWidth  + videoElement.videoHeight + \" fps: ??\");\n            }\n        }else if (args.Type == awrtc.CallEventType.ListeningFailed) {\n            if (this.mNetConfig.IsConference == false) {\n\n                //in 1 to 1 calls there is a listener and a caller\n                //if we try to listen first and it fails it likely means\n                //the other side is waiting for an incoming call\n                this.mCall.Call(this.mAddress);\n            } else {\n                //in conference mode there is no \"caller\" as everyone\n                //just joins a single call via Listen call. if it fails\n                //there is likely a network fault / configuration error\n                console.error(this.mId  + \":Listening failed. Server dead?\");\n            }\n        } else if (args.Type == awrtc.CallEventType.ConnectionFailed) {\n            alert(this.mId  + \":connection failed\");\n        } else if (args.Type == awrtc.CallEventType.CallEnded) {\n\n            let callEndedEvent = args as awrtc.CallEndedEventArgs;\n            console.log(this.mId  + \":call ended with id \" + callEndedEvent.ConnectionId.id);\n            //document.body.removeChild(mRemoteVideo[callEndedEvent.ConnectionId.id]);\n\n            //remove properly\n            this.mRemoteVideo[callEndedEvent.ConnectionId.id] = null;\n\n        } else {\n\n            console.log(args.Type);\n        }\n\n\n    }\n\n    private Update(): void\n    {\n        this.mCall.Update();\n    }\n\n}\n\n//Example that creates two calls within the same\n//browser window and streams from one end to the\n//other. \nexport function BrowserWebRtcCall_minimal() {\n\n    awrtc.BrowserMediaStream.sUseLazyFrames = true;\n    let netConfig = new awrtc.NetworkConfig();\n    netConfig.IsConference = false;\n    netConfig.SignalingUrl = DefaultValues.Signaling;\n\n    let mediaConfigSender = new awrtc.MediaConfig();\n    mediaConfigSender.Video = true;\n    mediaConfigSender.Audio = true;\n    mediaConfigSender.FrameUpdates = false;\n    let mediaConfigReceiver = new awrtc.MediaConfig();\n    mediaConfigReceiver.Video = false;\n    mediaConfigReceiver.Audio = false;\n    mediaConfigReceiver.FrameUpdates = false;\n\n    //random key so we don't mistakenly connect\n    //to another user\n    //replace with fixed passphrase to connect multiple browser windows\n    var address = GetRandomKey();\n\n\n    let numberOfCalls = 2;\n\n    //creates a call that sends audio and video to the other side\n    let sender = new MinimalCall(1, netConfig, mediaConfigSender);\n    sender.Start(address);\n    \n    //will create a call that is just receiving\n    let receiver = new MinimalCall(2, netConfig, mediaConfigReceiver);\n    receiver.Start(address);\n\n\n\n\n}\n\n","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nexport * from \"./apphelpers\"\nexport * from \"./testapps\"\nexport * from \"./examples\"\nexport * from \"./callapp\"","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport * as awrtc from \"../awrtc/index\"\nimport {DefaultValues, GetRandomKey} from \"./apphelpers\"\nimport { DeviceApi, DeviceInfo } from \"../awrtc/index\";\n\n//This file only contains badly maintained\n//test apps. Use only experimentation. \n//For proper examples look at examples.ts\n\n//testapp to run a full connection test using the CAPI\n//which is used by the unity WebGL plugin\nexport function CAPI_WebRtcNetwork_testapp() {\n    console.log(\"test1\");\n\n    var testMessage = \"test1234\";\n\n\n    //var configuration = \"{ \\\"signaling\\\" :  { \\\"class\\\": \\\"WebsocketNetwork\\\", \\\"param\\\" : \\\"ws://localhost:12776\\\"}, \\\"iceServers\\\":[\\\"stun:stun.l.google.com:19302\\\"]}\";\n    var configuration = \"{ \\\"signaling\\\" :  { \\\"class\\\": \\\"LocalNetwork\\\", \\\"param\\\" : null}, \\\"iceServers\\\":[{\\\"urls\\\": \\\"stun:stun.l.google.com:19302\\\"}]}\";\n\n    var srv = awrtc.CAPI_WebRtcNetwork_Create(configuration);\n    awrtc.CAPI_WebRtcNetwork_StartServer(srv, \"Room1\");\n\n    var clt = awrtc.CAPI_WebRtcNetwork_Create(configuration);\n\n\n    setInterval(() => {\n\n        awrtc.CAPI_WebRtcNetwork_Update(srv);\n\n\n\n        var evt = null;\n        while (evt = awrtc.CAPI_WebRtcNetwork_Dequeue(srv)) {\n\n            console.log(\"server inc: \" + evt.toString());\n\n            if (evt.Type == awrtc.NetEventType.ServerInitialized) {\n                console.log(\"server started. Address \" + evt.Info);\n                awrtc.CAPI_WebRtcNetwork_Connect(clt, evt.Info);\n\n            } else if (evt.Type == awrtc.NetEventType.ServerInitFailed) {\n                console.error(\"server start failed\");\n            } else if (evt.Type == awrtc.NetEventType.NewConnection) {\n                console.log(\"server new incoming connection\");\n            } else if (evt.Type == awrtc.NetEventType.Disconnected) {\n                console.log(\"server peer disconnected\");\n                console.log(\"server shutdown\");\n                awrtc.CAPI_WebRtcNetwork_Shutdown(srv);\n            } else if (evt.Type == awrtc.NetEventType.ReliableMessageReceived) {\n                //srv.SendData(evt.ConnectionId, evt.MessageData, true);\n                awrtc.CAPI_WebRtcNetwork_SendData(srv, evt.ConnectionId.id, evt.MessageData, true);\n            } else if (evt.Type == awrtc.NetEventType.UnreliableMessageReceived) {\n                //srv.SendData(evt.ConnectionId, evt.MessageData, false);\n                awrtc.CAPI_WebRtcNetwork_SendData(srv, evt.ConnectionId.id, evt.MessageData, false);\n            }\n        }\n        //srv.Flush();\n        awrtc.CAPI_WebRtcNetwork_Flush(srv);\n\n        //clt.Update();\n        awrtc.CAPI_WebRtcNetwork_Update(clt);\n        while (evt = awrtc.CAPI_WebRtcNetwork_Dequeue(clt)) {\n\n            console.log(\"client inc: \" + evt.toString());\n\n            if (evt.Type == awrtc.NetEventType.NewConnection) {\n                console.log(\"client connection established\");\n\n                let buff = awrtc.Encoding.UTF16.GetBytes(testMessage);\n                //clt.SendData(evt.ConnectionId, buff, true);\n                awrtc.CAPI_WebRtcNetwork_SendData(clt, evt.ConnectionId.id, buff, true);\n            } else if (evt.Type == awrtc.NetEventType.ReliableMessageReceived) {\n\n                //check last message\n                let str = awrtc.Encoding.UTF16.GetString(evt.MessageData);\n                if (str != testMessage) {\n                    console.error(\"Test failed sent string %s but received string %s\", testMessage, str);\n                }\n\n\n\n                let buff = awrtc.Encoding.UTF16.GetBytes(testMessage);\n                //clt.SendData(evt.ConnectionId, buff, false);\n                awrtc.CAPI_WebRtcNetwork_SendData(clt, evt.ConnectionId.id, buff, false);\n            } else if (evt.Type == awrtc.NetEventType.UnreliableMessageReceived) {\n                let str = awrtc.Encoding.UTF16.GetString(evt.MessageData);\n                if (str != testMessage) {\n                    console.error(\"Test failed sent string %s but received string %s\", testMessage, str);\n                }\n\n                console.log(\"client disconnecting\");\n                //clt.Disconnect(evt.ConnectionId);\n                awrtc.CAPI_WebRtcNetwork_Disconnect(clt, evt.ConnectionId.id);\n                console.log(\"client shutting down\");\n                //clt.Shutdown();\n                awrtc.CAPI_WebRtcNetwork_Shutdown(clt);\n            }\n        }\n        //clt.Flush();\n        awrtc.CAPI_WebRtcNetwork_Flush(clt);\n    }, 100);\n}\n//for testing the media API used by the unity plugin\nexport function CAPI_MediaNetwork_testapp()\n{\n    awrtc.BrowserMediaStream.DEBUG_SHOW_ELEMENTS = true;\n    \n    var signalingUrl : string = DefaultValues.Signaling;\n    let lIndex = awrtc.CAPI_MediaNetwork_Create(\"{\\\"IceUrls\\\":[\\\"stun:stun.l.google.com:19302\\\"], \\\"SignalingUrl\\\":\\\"ws://because-why-not.com:12776\\\"}\");\n\n    let configDone = false;\n    awrtc.CAPI_MediaNetwork_Configure(lIndex, true, true, 160, 120, 640, 480, 640, 480, -1, -1, -1);\n    console.log(awrtc.CAPI_MediaNetwork_GetConfigurationState(lIndex));\n\n    let startTime = new Date().getTime();\n\n    let mainLoop = function () {\n\n        awrtc.CAPI_WebRtcNetwork_Update(lIndex);\n        if (awrtc.CAPI_MediaNetwork_GetConfigurationState(lIndex) == (awrtc.MediaConfigurationState.Successful as number) && configDone == false) {\n            configDone = true;\n            console.log(\"configuration done\");\n        }\n\n        if (awrtc.CAPI_MediaNetwork_GetConfigurationState(lIndex) == (awrtc.MediaConfigurationState.Failed as number)) {\n            alert(\"configuration failed\");\n        }\n        if (configDone == false)\n            console.log(awrtc.CAPI_MediaNetwork_GetConfigurationState(lIndex));\n\n        if ((new Date().getTime() - startTime) < 15000) {\n            window.requestAnimationFrame(mainLoop);\n        } else {\n            console.log(\"shutting down\");\n            awrtc.CAPI_WebRtcNetwork_Release(lIndex);\n        }\n    }\n    window.requestAnimationFrame(mainLoop);\n}\n\n\n//Tests shared address feature of the WebsocketNetwork\nexport function WebsocketNetwork_sharedaddress() {\n    console.log(\"WebsocketNetwork shared address test\");\n\n    var testMessage = \"test1234\";\n\n    var local = true;\n    var allowUnsafe = true;\n\n    var url : string = DefaultValues.SignalingShared;\n\n    let address = \"sharedaddresstest\";\n    var network1 = new awrtc.WebsocketNetwork(url);\n    var network2 = new awrtc.WebsocketNetwork(url);\n    var network3 = new awrtc.WebsocketNetwork(url);\n\n\n    let network1Greeting = awrtc.Encoding.UTF16.GetBytes(\"network1 says hi\");\n    let network2Greeting = awrtc.Encoding.UTF16.GetBytes(\"network2 says hi\");\n    let network3Greeting = awrtc.Encoding.UTF16.GetBytes(\"network3 says hi\");\n\n    //\n\n    network1.StartServer(address);\n    network2.StartServer(address);\n    network3.StartServer(address);\n\n\n\n    function UpdateNetwork(network: awrtc.IBasicNetwork, name: string) {\n\n\n        network.Update();\n\n        var evt: awrtc.NetworkEvent = null;\n        while (evt = network.Dequeue()) {\n\n            if (evt.Type == awrtc.NetEventType.ServerInitFailed\n                || evt.Type == awrtc.NetEventType.ConnectionFailed\n                || evt.Type == awrtc.NetEventType.ServerClosed) {\n                console.error(name + \"inc: \" + evt.toString());\n            }\n            else {\n                console.log(name + \"inc: \" + evt.toString());\n            }\n\n            if (evt.Type == awrtc.NetEventType.ServerInitialized) {\n\n\n            } else if (evt.Type == awrtc.NetEventType.ServerInitFailed) {\n\n            } else if (evt.Type == awrtc.NetEventType.NewConnection) {\n\n                let greeting = awrtc.Encoding.UTF16.GetBytes(name + \"says hi!\");\n                network.SendData(evt.ConnectionId, greeting, true);\n\n            } else if (evt.Type == awrtc.NetEventType.Disconnected) {\n\n            } else if (evt.Type == awrtc.NetEventType.ReliableMessageReceived) {\n\n                let str = awrtc.Encoding.UTF16.GetString(evt.MessageData)\n                console.log(name + \" received: \" + str)\n            } else if (evt.Type == awrtc.NetEventType.UnreliableMessageReceived) {\n\n            }\n        }\n        network.Flush();\n    }\n\n\n\n    let time = 0;\n    setInterval(() => {\n\n        UpdateNetwork(network1, \"network1 \");\n        UpdateNetwork(network2, \"network2 \");\n        UpdateNetwork(network3, \"network3 \");\n        time += 100;\n\n        if (time == 10000) {\n            console.log(\"network1 shutdown\");\n            network1.Shutdown();\n        }\n        if (time == 15000) {\n            console.log(\"network2 shutdown\");\n            network2.Shutdown();\n        }\n        if (time == 20000) {\n            console.log(\"network3 shutdown\");\n            network3.Shutdown();\n        }\n    }, 100);\n}\n\nexport function WebsocketNetwork_test1() \n{\n    var testMessage = \"test1234\";\n\n    \n    var url : string = DefaultValues.Signaling;\n    var srv = new awrtc.WebsocketNetwork(url);\n    srv.StartServer();\n\n    var clt = new awrtc.WebsocketNetwork(url);\n\n    \n    setInterval(() => {\n\n        srv.Update();\n        var evt : awrtc.NetworkEvent= null;\n        while (evt = srv.Dequeue()) {\n\n            console.log(\"server inc: \" + evt.toString());\n\n            if (evt.Type == awrtc.NetEventType.ServerInitialized) {\n                console.log(\"server started. Address \" + evt.Info);\n\n                clt.Connect(evt.Info);\n            } else if (evt.Type == awrtc.NetEventType.ServerInitFailed) {\n                console.error(\"server start failed\");\n            } else if (evt.Type == awrtc.NetEventType.NewConnection) {\n                console.log(\"server new incoming connection\");\n            } else if (evt.Type == awrtc.NetEventType.Disconnected) {\n                console.log(\"server peer disconnected\");\n                console.log(\"server shutdown\");\n                srv.Shutdown();\n            } else if (evt.Type == awrtc.NetEventType.ReliableMessageReceived) {\n                srv.SendData(evt.ConnectionId, evt.MessageData, true);\n            } else if (evt.Type == awrtc.NetEventType.UnreliableMessageReceived) {\n                srv.SendData(evt.ConnectionId, evt.MessageData, false);\n            }\n        }\n        srv.Flush();\n\n\n        clt.Update();\n        while (evt = clt.Dequeue()) {\n\n            console.log(\"client inc: \" + evt.toString());\n\n            if (evt.Type == awrtc.NetEventType.NewConnection) {\n                console.log(\"client connection established\");\n\n                let buff = awrtc.Encoding.UTF16.GetBytes(testMessage);\n                clt.SendData(evt.ConnectionId, buff, true);\n            } else if (evt.Type == awrtc.NetEventType.ReliableMessageReceived) {\n                \n                //check last message\n                let str = awrtc.Encoding.UTF16.GetString(evt.MessageData);\n                if (str != testMessage) {\n                    console.error(\"Test failed sent string %s but received string %s\", testMessage, str);\n                }\n            \n                \n\n                let buff = awrtc.Encoding.UTF16.GetBytes(testMessage);\n                clt.SendData(evt.ConnectionId, buff, false);\n            } else if (evt.Type == awrtc.NetEventType.UnreliableMessageReceived) {\n                let str = awrtc.Encoding.UTF16.GetString(evt.MessageData);\n                if (str != testMessage) {\n                    console.error(\"Test failed sent string %s but received string %s\", testMessage, str);\n                }\n\n                console.log(\"client disconnecting\");\n                clt.Disconnect(evt.ConnectionId);\n                console.log(\"client shutting down\");\n                clt.Shutdown();\n            }\n        }\n        clt.Flush();\n    }, 100);\n}\n\nexport function BrowserMediaNetwork_TestLocalCamera() {\n    //first get the device names\n    let handler : awrtc.DeviceApiOnChanged;\n    handler = ()=>{\n        awrtc.DeviceApi.RemOnChangedHandler(handler);\n        BrowserMediaNetwork_TestLocalCameraInternal();\n    };\n    awrtc.DeviceApi.AddOnChangedHandler(handler);\n    awrtc.DeviceApi.Update();\n}\nfunction BrowserMediaNetwork_TestLocalCameraInternal() {\n\n    awrtc.BrowserMediaStream.DEBUG_SHOW_ELEMENTS = true;\n    let networkConfig = new awrtc.NetworkConfig();\n    networkConfig.SignalingUrl = null;\n\n    let network = new awrtc.BrowserMediaNetwork(networkConfig);\n\n    let mediaConfig = new awrtc.MediaConfig();\n    mediaConfig.Audio = true;\n    mediaConfig.Video = true;\n\n    //test setting a specifid device here\n    let keys = Object.keys(awrtc.DeviceApi.Devices);\n    mediaConfig.VideoDeviceName = \"\";//awrtc.DeviceApi.Devices[keys[0]].label;\n\n\n    network.Configure(mediaConfig);\n\n\n    setInterval(() => {\n        network.Update();\n\n        let frame = network.TryGetFrame(awrtc.ConnectionId.INVALID);\n        if(frame != null)\n            console.log(\"width\" + frame.Width + \" height:\" + frame.Height + \" data:\" + frame.Buffer[0]);\n        network.Flush();\n    }, 50);\n}\n\n\nclass FpsCounter\n{\n    lastRefresh = 0;\n    fps = 0;\n    counter = 0;\n\n    public get Fps()\n    {\n        return Math.round(this.fps);\n    }\n\n    public get Counter()\n    {\n        return this.counter;\n    }\n\n    Update():void\n    {\n        this.counter++;\n        let diff = new Date().getTime() - this.lastRefresh;\n        if(diff > 1000)\n        {\n            this.fps = this.counter / (diff / 1000);\n            this.counter = 0;\n            this.lastRefresh = new Date().getTime();\n        }\n    }\n}\n\n//Sends video data between two peers within the same browser window\n//and accesses the resulting frame data directly\nexport function BrowserMediaNetwork_frameaccess() {\n\n\n    //awrtc.BrowserMediaStream.DEBUG_SHOW_ELEMENTS = true;\n\n    let address = GetRandomKey();\n    let networkConfig = new awrtc.NetworkConfig();\n    networkConfig.SignalingUrl = DefaultValues.Signaling;\n\n    let network1 = new awrtc.BrowserMediaNetwork(networkConfig);\n\n    let network2 = new awrtc.BrowserMediaNetwork(networkConfig);\n\n    let mediaConfig1 = new awrtc.MediaConfig();\n    mediaConfig1.Audio = true;\n    mediaConfig1.Video = true;\n    let mediaConfig2 = new awrtc.MediaConfig();\n    mediaConfig2.Audio = false;\n    mediaConfig2.Video = false;\n\n\n    let localFps = new FpsCounter();\n    let remoteFps = new FpsCounter();\n\n\n\n\n    setTimeout(() => {\n\n        network1.Configure(mediaConfig1);\n    }, 5000);\n\n    setTimeout(() => {\n\n        console.log(\"connecting network1\");\n        network1.StartServer(address);\n        //if (network2 != null)\n            //network2.Configure(mediaConfig);\n    }, 10000);\n\n\n    setTimeout(() => {\n        if (network2 != null) {\n            console.log(\"connecting network2\");\n            network2.Connect(address);\n        }\n    }, 15000);\n\n    var remoteConId1: awrtc.ConnectionId = null;\n    var remoteConId2: awrtc.ConnectionId = null;\n\n    setInterval(() => {\n        network1.Update();\n\n        let frame1: awrtc.IFrameData = null;\n        let frame2: awrtc.IFrameData = null;\n\n        frame1 = network1.TryGetFrame(awrtc.ConnectionId.INVALID);\n        if (frame1 != null)\n        {\n            localFps.Update();\n            if(localFps.Counter % 30 == 0)\n                console.log(\"local1  width\" + frame1.Width + \" height:\" + frame1.Height + \"fps: \" + localFps.Fps + \" data:\" + frame1.Buffer[0]);\n            \n        }\n\n        var evt: awrtc.NetworkEvent;\n        while ((evt = network1.Dequeue()) != null) {\n            console.log(\"network1: \" + evt.toString());\n            if (evt.Type == awrtc.NetEventType.NewConnection) {\n                remoteConId1 = evt.ConnectionId;\n            }\n        }\n\n        if (remoteConId1 != null) {\n            frame1 = network1.TryGetFrame(remoteConId1);\n            if (frame1 != null)\n                console.log(\"remote1 width\" + frame1.Width + \" height:\" + frame1.Height + \" data:\" + frame1.Buffer[0]);\n        }\n\n        network1.Flush();\n\n        if (network2 == null)\n            return;\n        network2.Update();\n        frame2 = network2.TryGetFrame(awrtc.ConnectionId.INVALID);\n\n        if (frame2 != null)\n            console.log(\"local2  width\" + frame2.Width + \" height:\" + frame2.Height + \" data:\" + frame2.Buffer[0]);\n\n\n        while ((evt = network2.Dequeue()) != null) {\n            console.log(\"network2: \" + evt.toString());\n            if (evt.Type == awrtc.NetEventType.NewConnection) {\n                remoteConId2 = evt.ConnectionId;\n            }\n        }\n        if (remoteConId2 != null) {\n            frame2 = network2.TryGetFrame(remoteConId2);\n            if (frame2 != null)\n            {\n                remoteFps.Update();\n                if(remoteFps.Counter % 30 == 0)\n                    console.log(\"remote2 width\" + frame2.Width + \" height:\" + frame2.Height + \"fps: \" + remoteFps.Fps + \" data:\" + frame2.Buffer[0]);\n            }\n        }\n\n        network2.Flush();\n    }, 10);\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nconsole.debug(\"loading awrtc modules ...\");\n//this should trigger webpack to include\n//the webrtc adapter.js. It changes the \n//global WebRTC calls and adds backwards\n//and browser compatibility.\ndeclare function require(moduleName: string)\nlet adapter  = require(\"webrtc-adapter\");\n\nexport * from \"./network/index\"\nexport * from \"./media/index\"\n//for simplicity browser and unity are merged here\n//it could as well be built and deployed separately\nexport * from \"./media_browser/index\"\nexport * from \"./unity/index\"\nconsole.debug(\"loading awrtc modules completed\");","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport { ICall } from \"./ICall\";\nimport { IMediaNetwork, MediaConfigurationState, MediaEvent } from \"./IMediaNetwork\";\nimport { CallEventHandler, CallAcceptedEventArgs, CallEndedEventArgs, ErrorEventArgs, CallEventType, WaitForIncomingCallEventArgs, CallErrorType, DataMessageEventArgs, FrameUpdateEventArgs, CallEventArgs, MessageEventArgs, MediaUpdatedEventArgs } from \"./CallEventArgs\";\nimport { SLog, Encoding } from \"../network/Helper\";\nimport { NetworkConfig } from \"./NetworkConfig\";\nimport { MediaConfig } from \"./MediaConfig\";\nimport { ConnectionId, NetworkEvent, NetEventType } from \"../network/index\";\nimport { BrowserMediaNetwork } from \"../media_browser/BrowserMediaNetwork\";\nimport { IFrameData } from \"./RawFrame\";\n\nclass CallException {\n    private mErrorMsg: string;\n    public ErrorMsg() {\n    }\n    public constructor(errorMsg: string) {\n        this.mErrorMsg = errorMsg;\n    }\n}\nclass InvalidOperationException extends CallException\n{\n}\n/// <summary>\n/// State of the call. Mainly used to check for bugs / invalid states.\n/// </summary>\nenum CallState {\n    /// <summary>\n    /// Not yet initialized / bug\n    /// </summary>\n    Invalid = 0,\n    /// <summary>\n    /// Object is initialized but local media not yet configured\n    /// </summary>\n    Initialized = 1,\n\n    /// <summary>\n    /// In process of accessing the local media devices.\n    /// </summary>\n    Configuring = 2,\n    /// <summary>\n    /// Configured. Video/Audio can be accessed and call is ready to start\n    /// </summary>\n    Configured = 3,\n    /// <summary>\n    /// In process of requesting an address from the server to then listen and wait for\n    /// an incoming call.\n    /// </summary>\n    RequestingAddress = 4,\n\n    /// <summary>\n    /// Call is listening on an address and waiting for an incoming call\n    /// </summary>\n    WaitingForIncomingCall = 5,\n\n    /// <summary>\n    /// Call is in the process of connecting to another call object.\n    /// </summary>\n    WaitingForOutgoingCall = 6,\n\n    /// <summary>\n    /// Indicating that the call object is at least connected to another object\n    /// </summary>\n    InCall = 7,\n    //CallAcceptedIncoming,\n    //CallAcceptedOutgoing,\n    /// <summary>\n    /// Call ended / conference room closed\n    /// </summary>\n    Closed = 8\n}\n\n/*\nclass ConnectionMetaData\n{\n}\n*/\nclass ConnectionInfo{\n\n    private mConnectionIds = new Array<number>();\n    //private mConnectionMeta: { [id: number]: ConnectionMetaData } = {};\n\n\n    public AddConnection(id: ConnectionId, incoming:boolean)\n    {\n        this.mConnectionIds.push(id.id);\n        //this.mConnectionMeta[id.id] = new ConnectionMetaData();\n    }\n\n    public RemConnection(id:ConnectionId)\n    {\n        let index = this.mConnectionIds.indexOf(id.id);\n        if(index >= 0){\n            this.mConnectionIds.splice(index, 1);\n        }\n        else{\n            SLog.LE(\"tried to remove an unknown connection with id \" + id.id);\n        }\n        //delete this.mConnectionMeta[id.id];\n    }\n\n    public HasConnection(id:ConnectionId)\n    {\n        return this.mConnectionIds.indexOf(id.id) != -1;\n    }\n\n    public GetIds()\n    {\n        return this.mConnectionIds;\n    }\n\n\n    //public GetMeta(id:ConnectionId) : ConnectionMetaData\n    //{\n    //    return this.mConnectionMeta[id.id];\n    //}\n}\n\n/**This class wraps an implementation of\n * IMediaStream and converts its polling system\n * to an easier to use event based system. \n * \n * Ideally use only features defined by \n * ICall to avoid having to deal with internal changes\n * in future updates.\n */\nexport class AWebRtcCall implements ICall {\n\n    private MESSAGE_TYPE_INVALID : number = 0;\n    private MESSAGE_TYPE_DATA : number = 1;\n    private MESSAGE_TYPE_STRING : number = 2;\n    private MESSAGE_TYPE_CONTROL : number = 3;\n\n    protected mNetworkConfig = new NetworkConfig();\n    private mMediaConfig: MediaConfig = null;\n\n    private mCallEventHandlers: Array<CallEventHandler> = [];\n    public addEventListener(listener: CallEventHandler): void {\n        this.mCallEventHandlers.push(listener);\n    }\n    public removeEventListener(listener: CallEventHandler): void {\n        this.mCallEventHandlers = this.mCallEventHandlers.filter(h => h !== listener);\n    }\n\n    protected mNetwork: IMediaNetwork = null\n    private mConnectionInfo = new ConnectionInfo();\n\n    private mConferenceMode = false;\n\n    private mState = CallState.Invalid;\n    public get State(): CallState {\n        return this.mState;\n    }\n\n    private mIsDisposed = false;\n\n    private mServerInactive = true;\n\n\n\n\n    private mPendingListenCall = false;\n    private mPendingCallCall = false;\n    private mPendingAddress = null;\n\n    constructor(config: NetworkConfig = null) {\n        if (config != null) {\n            this.mNetworkConfig = config;\n            this.mConferenceMode = config.IsConference;\n        }\n    }\n\n    protected Initialize(network: IMediaNetwork): void {\n        this.mNetwork = network;\n        this.mState = CallState.Initialized;\n    }\n    \n    public Configure(config: MediaConfig): void {\n        this.CheckDisposed();\n        if (this.mState != CallState.Initialized) {\n            throw new InvalidOperationException(\"Method can't be used in state \" + this.mState);\n        }\n        this.mState = CallState.Configuring;\n        SLog.Log(\"Enter state CallState.Configuring\");\n        this.mMediaConfig = config;\n        this.mNetwork.Configure(this.mMediaConfig);\n    }\n\n    public Call(address: string): void {\n        this.CheckDisposed();\n        if (this.mState != CallState.Initialized\n            && this.mState != CallState.Configuring\n            && this.mState != CallState.Configured) {\n            throw new InvalidOperationException(\"Method can't be used in state \" + this.mState);\n        }\n\n        if (this.mConferenceMode) {\n            throw new InvalidOperationException(\"Method can't be used in conference calls.\");\n        }\n        SLog.Log(\"Call to \" + address);\n\n        this.EnsureConfiguration();\n\n        if (this.mState == CallState.Configured) {\n            this.ProcessCall(address);\n        }\n        else {\n            this.PendingCall(address);\n        }\n    }\n    public Listen(address: string): void {\n        this.CheckDisposed();\n        if (this.mState != CallState.Initialized\n            && this.mState != CallState.Configuring\n            && this.mState != CallState.Configured) {\n            throw new InvalidOperationException(\"Method can't be used in state \" + this.mState);\n        }\n\n\n        this.EnsureConfiguration();\n\n        if (this.mState == CallState.Configured) {\n            this.ProcessListen(address);\n        }\n        else {\n            this.PendingListen(address);\n        }\n    }\n\n    public Send(message: string, reliable?:boolean, id? :ConnectionId): void\n    {\n        this.CheckDisposed();\n        if(reliable == null)\n            reliable = true;\n        if(id) {\n            this.InternalSendTo(message, reliable, id);\n        } else{\n            this.InternalSendToAll(message, reliable);\n        }\n    }\n\n    private InternalSendToAll(message: string, reliable:boolean): void {\n\n\n        let data = this.PackStringMsg(message);;\n\n        for (let id of this.mConnectionInfo.GetIds()) {\n            SLog.L(\"Send message to \" + id + \"! \" + message);\n            this.InternalSendRawTo(data, new ConnectionId(id), reliable);\n        }\n    }\n    private InternalSendTo(message: string, reliable:boolean, id :ConnectionId): void {\n\n        let data = this.PackStringMsg(message);\n        this.InternalSendRawTo(data, id, reliable);\n    }\n\n\n    public SendData(message: Uint8Array, reliable:boolean, id :ConnectionId): void {\n\n        this.CheckDisposed();\n        let data = this.PackDataMsg(message);\n        this.InternalSendRawTo(data, id, reliable);\n    }\n\n    private PackStringMsg(message: string): Uint8Array {\n\n        let data = Encoding.UTF16.GetBytes(message);\n        \n        let buff = new Uint8Array(data.length + 1);\n        buff[0] = this.MESSAGE_TYPE_STRING;\n        for(let i = 0; i < data.length; i++){\n            buff[i + 1] = data[i];\n        }\n        return buff;\n    }\n\n    private UnpackStringMsg(message: Uint8Array): string\n    {\n        let buff = new Uint8Array(message.length - 1);\n        \n        for(let i = 0; i < buff.length; i++){\n            buff[i] = message[i + 1];\n        }\n        let res = Encoding.UTF16.GetString(buff);\n\n        return res;\n    }\n\n    private PackDataMsg(data: Uint8Array): Uint8Array {\n\n        let buff = new Uint8Array(data.length + 1);\n        buff[0] = this.MESSAGE_TYPE_DATA;\n        for(let i = 0; i < data.length; i++){\n            buff[i + 1] = data[i];\n        }\n        return buff;\n    }\n\n    private UnpackDataMsg(message: Uint8Array): Uint8Array\n    {\n        let buff = new Uint8Array(message.length - 1);\n        \n        for(let i = 0; i < buff.length; i++){\n            buff[i] = message[i + 1];\n        }\n        return buff;\n    }\n\n    private InternalSendRawTo(rawdata: Uint8Array, id :ConnectionId, reliable: boolean) {\n        this.mNetwork.SendData(id, rawdata, reliable);\n    }\n\n\n\n    \n\n    public Update(): void {\n\n        if (this.mIsDisposed)\n            return;\n        if (this.mNetwork == null)\n            return;\n\n        this.mNetwork.Update();\n\n        //waiting for the media configuration?\n        if (this.mState == CallState.Configuring) {\n            var configState = this.mNetwork.GetConfigurationState();\n            if (configState == MediaConfigurationState.Failed) {\n                this.OnConfigurationFailed(this.mNetwork.GetConfigurationError());\n                //bugfix: user might dispose the call during the event above\n                if (this.mIsDisposed)\n                    return;\n                if (this.mNetwork != null)\n                    this.mNetwork.ResetConfiguration();\n            }\n            else if (configState == MediaConfigurationState.Successful) {\n                this.OnConfigurationComplete();\n                if (this.mIsDisposed)\n                    return;\n            }\n        }\n\n\n        let evt: NetworkEvent;\n        while ((evt = this.mNetwork.Dequeue()) != null) {\n            switch (evt.Type) {\n                case NetEventType.NewConnection:\n\n                    if (this.mState == CallState.WaitingForIncomingCall\n                        || (this.mConferenceMode && this.mState == CallState.InCall)) //keep accepting connections after \n                    {\n                        //remove ability to accept incoming connections\n                        if (this.mConferenceMode == false)\n                            this.mNetwork.StopServer();\n\n                        this.mState = CallState.InCall;\n                        this.mConnectionInfo.AddConnection(evt.ConnectionId, true);\n                        this.TriggerCallEvent(new CallAcceptedEventArgs(evt.ConnectionId));\n                        if (this.mIsDisposed)\n                            return;\n                    }\n                    else if (this.mState == CallState.WaitingForOutgoingCall) {\n                        this.mConnectionInfo.AddConnection(evt.ConnectionId, false);\n                        //only possible in 1 on 1 calls\n                        this.mState = CallState.InCall;\n                        this.TriggerCallEvent(new CallAcceptedEventArgs(evt.ConnectionId));\n                        if (this.mIsDisposed)\n                            return;\n                    }\n                    else {\n                        //Debug.Assert(mState == CallState.WaitingForIncomingCall || mState == CallState.WaitingForOutgoingCall);\n\n                        SLog.LogWarning(\"Received incoming connection during invalid state \" + this.mState);\n\n                    }\n\n                    break;\n                case NetEventType.ConnectionFailed:\n                    //call failed\n                    if (this.mState == CallState.WaitingForOutgoingCall) {\n                        this.TriggerCallEvent(new ErrorEventArgs(CallEventType.ConnectionFailed));\n                        if (this.mIsDisposed)\n                            return;\n                        this.mState = CallState.Configured;\n                    }\n                    else {\n                        //Debug.Assert(mState == CallState.WaitingForOutgoingCall);\n                        SLog.LogError(\"Received ConnectionFailed during \" + this.mState);\n                    }\n                    break;\n                case NetEventType.Disconnected:\n\n                    if (this.mConnectionInfo.HasConnection(evt.ConnectionId)) {\n                        this.mConnectionInfo.RemConnection(evt.ConnectionId);\n                        //call ended\n                        if (this.mConferenceMode == false && this.mConnectionInfo.GetIds().length == 0) {\n                            this.mState = CallState.Closed;\n                        }\n                        this.TriggerCallEvent(new CallEndedEventArgs(evt.ConnectionId));\n                        if (this.mIsDisposed)\n                            return;\n\n                    }\n                    break;\n                case NetEventType.ServerInitialized:\n                    //incoming calls possible\n                    this.mServerInactive = false;\n\n                    this.mState = CallState.WaitingForIncomingCall;\n                    this.TriggerCallEvent(new WaitForIncomingCallEventArgs(evt.Info));\n                    if (this.mIsDisposed)\n                        return;\n                    break;\n                case NetEventType.ServerInitFailed:\n\n                    this.mServerInactive = true;\n\n\n                    //reset state to the earlier state which is Configured (as without configuration no\n                    //listening possible). Local camera/audio will keep running\n                    this.mState = CallState.Configured;\n                    this.TriggerCallEvent(new ErrorEventArgs(CallEventType.ListeningFailed));\n                    if (this.mIsDisposed)\n                        return;\n                    break;\n                case NetEventType.ServerClosed:\n                    this.mServerInactive = true;\n                    //no incoming calls possible anymore\n                    if (this.mState == CallState.WaitingForIncomingCall || this.mState == CallState.RequestingAddress) {\n                        this.mState = CallState.Configured;\n                        //might need to be handled as a special timeout event?\n                        this.TriggerCallEvent(new ErrorEventArgs(CallEventType.ListeningFailed, CallErrorType.Unknown, \"Server closed the connection while waiting for incoming calls.\"));\n                        if (this.mIsDisposed)\n                            return;\n                    }\n                    else {\n                        //event is normal during other states as the server connection will be closed after receiving a call\n                    }\n                    break;\n                    case NetEventType.ReliableMessageReceived:\n                    case NetEventType.UnreliableMessageReceived:\n                        let reliable = evt.Type === NetEventType.ReliableMessageReceived;\n                        //chat message received\n                        if(evt.MessageData.length >= 2)\n                        {\n                            if(evt.MessageData[0] == this.MESSAGE_TYPE_STRING)\n                            {\n                                let message = this.UnpackStringMsg(evt.MessageData);\n                                this.TriggerCallEvent(new MessageEventArgs(evt.ConnectionId, message, reliable));\n                            }else if(evt.MessageData[0] == this.MESSAGE_TYPE_DATA)\n                            {\n                                let message = this.UnpackDataMsg(evt.MessageData);\n                                this.TriggerCallEvent(new DataMessageEventArgs(evt.ConnectionId, message, reliable));\n                            }else{\n                                //invalid message?\n                            }\n    \n                        }else{\n                            //invalid message?\n                        }\n                        if (this.mIsDisposed)\n                            return;\n                        break;\n            }\n        }\n        let handleLocalFrames = true;\n        let handleRemoteFrames = true;\n\n        if (this.mMediaConfig.FrameUpdates && handleLocalFrames)\n        {\n            let localFrame = this.mNetwork.TryGetFrame(ConnectionId.INVALID);\n            if (localFrame != null) {\n                this.FrameToCallEvent(ConnectionId.INVALID, localFrame);\n                if (this.mIsDisposed)\n                    return;\n            }\n        }\n        if (this.mMediaConfig.FrameUpdates && handleRemoteFrames)\n        {\n            for (var id of this.mConnectionInfo.GetIds())\n            {\n                let conId = new ConnectionId(id);\n                let remoteFrame = this.mNetwork.TryGetFrame(conId);\n                if (remoteFrame != null) {\n                    this.FrameToCallEvent(conId, remoteFrame);\n                    if (this.mIsDisposed)\n                        return;\n                }\n            }\n        }\n\n        let mediaEvent : MediaEvent= null;\n        while((mediaEvent = this.mNetwork.DequeueMediaEvent()) != null)\n        {\n            this.MediaEventToCallEvent(mediaEvent);\n        }\n\n        this.mNetwork.Flush();\n    }\n\n    private FrameToCallEvent(id:ConnectionId, frame:IFrameData)\n    {\n        let args = new FrameUpdateEventArgs(id, frame);\n        this.TriggerCallEvent(args);\n    }\n    private MediaEventToCallEvent(evt: MediaEvent)\n    {\n        let videoElement : HTMLVideoElement = null;\n        if(evt.EventType == evt.EventType)\n        {\n            let args = new MediaUpdatedEventArgs(evt.ConnectionId, evt.Args as HTMLVideoElement);\n            this.TriggerCallEvent(args);\n        }\n    }\n\n    private PendingCall(address: string): void {\n        this.mPendingAddress = address;\n        this.mPendingCallCall = true;\n        this.mPendingListenCall = false;\n    }\n\n    private ProcessCall(address: string): void {\n        this.mState = CallState.WaitingForOutgoingCall;\n        this.mNetwork.Connect(address);\n        this.ClearPending();\n    }\n\n    private PendingListen(address: string): void {\n        this.mPendingAddress = address;\n        this.mPendingCallCall = false;\n        this.mPendingListenCall = true;\n    }\n    private ProcessListen(address: string): void{\n        SLog.Log(\"Listen at \" + address);\n        this.mServerInactive = false;\n        this.mState = CallState.RequestingAddress;\n        this.mNetwork.StartServer(address);\n        this.ClearPending();\n    }\n    private DoPending(): void\n    {\n        if (this.mPendingCallCall) {\n            this.ProcessCall(this.mPendingAddress);\n        } else if (this.mPendingListenCall) {\n            this.ProcessListen(this.mPendingAddress);\n        }\n        this.ClearPending();\n    }\n    private ClearPending(): void {\n        this.mPendingAddress = null;\n        this.mPendingCallCall = null;\n        this.mPendingListenCall = null;\n    }\n\n    private CheckDisposed():void\n    {\n        if (this.mIsDisposed)\n            throw new InvalidOperationException(\"Object is disposed. No method calls possible.\");\n    }\n\n\n    private EnsureConfiguration(): void {\n        if (this.mState == CallState.Initialized) {\n            SLog.Log(\"Use default configuration\");\n            this.Configure(new MediaConfig());\n\n        }\n        else {\n\n        }\n    }\n\n    private TriggerCallEvent(args: CallEventArgs): void {\n\n        let arr = this.mCallEventHandlers.slice();\n\n        for (let callback of arr) {\n            callback(this, args);\n        }\n    }\n\n    private OnConfigurationComplete(): void {\n        if (this.mIsDisposed)\n            return;\n        this.mState = CallState.Configured;\n\n        SLog.Log(\"Enter state CallState.Configured\");\n        this.TriggerCallEvent(new CallEventArgs(CallEventType.ConfigurationComplete));\n        if (this.mIsDisposed == false)\n            this.DoPending();\n    }\n\n    private OnConfigurationFailed(error: string): void {\n\n        SLog.LogWarning(\"Configuration failed: \" + error);\n        if (this.mIsDisposed)\n            return;\n        this.mState = CallState.Initialized;\n        this.TriggerCallEvent(new ErrorEventArgs(CallEventType.ConfigurationFailed, CallErrorType.Unknown, error));\n        //bugfix: user might dispose the call during the event above\n        if (this.mIsDisposed == false)\n            this.ClearPending();\n    }\n\n    protected DisposeInternal(disposing: boolean): void {\n\n        //nothing to dispose but subclasses overwrite this\n        if (!this.mIsDisposed) {\n            if (disposing) {\n            }\n            this.mIsDisposed = true;\n        }\n    }\n\n    public Dispose() : void\n    {\n        this.DisposeInternal(true);\n    }\n}\n","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport { ConnectionId } from \"../network/index\";\nimport { IFrameData } from \"./RawFrame\";\n\n\nexport interface CallEventHandler {\n    (sender: any, args: CallEventArgs): void;\n}\n\n/// <summary>\n/// Type of the event.\n/// </summary>\nexport enum CallEventType {\n    /// <summary>\n    /// Used if the event value wasn't initialized\n    /// </summary>\n    Invalid = 0,\n\n    /// <summary>\n    /// The call object is successfully connected to the server waiting for another user \n    /// to connect.\n    /// </summary>\n    WaitForIncomingCall = 1,\n\n    /// <summary>\n    /// A call was accepted\n    /// </summary>\n    CallAccepted = 2,\n\n    /// <summary>\n    /// The call ended\n    /// </summary>\n    CallEnded = 3,\n\n    /**\n     * Backwards compatibility. Use MediaUpdate\n     */\n    FrameUpdate = 4,\n\n    /// <summary>\n    /// Text message arrived\n    /// </summary>\n    Message = 5,\n\n    /// <summary>\n    /// Connection failed. Might be due to an server, network error or the address didn't exist\n    /// Using ErrorEventArgs\n    /// </summary>\n    ConnectionFailed = 6,\n\n    /// <summary>\n    /// Listening failed. Address might be in use or due to server/network error\n    /// Using ErrorEventArgs\n    /// </summary>\n    ListeningFailed = 7,\n\n\n    /// <summary>\n    /// Event triggered after the local media was successfully configured. \n    /// If requested the call object will have access to the users camera and/or audio now and\n    /// the local camera frames can be received in events. \n    /// </summary>\n    ConfigurationComplete = 8,\n\n    /// <summary>\n    /// Configuration failed. This happens if the configuration requested features\n    /// the system doesn't support e.g. no camera, camera doesn't support the requested resolution\n    /// or the user didn't allow the website to access the camera/microphone in WebGL mode.\n    /// </summary>\n    ConfigurationFailed = 9,\n\n\n    \n    /// <summary>\n    /// Reliable or unreliable data msg arrived\n    /// </summary>\n    DataMessage = 10,\n\n\n    /** \n     * \n     */\n    MediaUpdate = 20,\n}\nexport class CallEventArgs {\n\n    private mType = CallEventType.Invalid;\n    public get Type(): CallEventType {\n        return this.mType;\n    }\n\n    public constructor(type: CallEventType) {\n        this.mType = type;\n    }\n}\n\nexport class CallAcceptedEventArgs extends CallEventArgs\n{\n    private mConnectionId: ConnectionId = ConnectionId.INVALID;\n    public get ConnectionId(): ConnectionId {\n        return this.mConnectionId;\n    }\n\n    public constructor(connectionId: ConnectionId) {\n        super(CallEventType.CallAccepted);\n        this.mConnectionId = connectionId;\n    }\n}\nexport class CallEndedEventArgs extends CallEventArgs {\n    private mConnectionId: ConnectionId = ConnectionId.INVALID;\n    public get ConnectionId(): ConnectionId{\n        return this.mConnectionId;\n    }\n\n    public constructor(connectionId: ConnectionId) {\n        super(CallEventType.CallEnded);\n        this.mConnectionId = connectionId;\n    }\n}\n\nexport enum CallErrorType {\n    Unknown\n}\n\nexport class ErrorEventArgs extends CallEventArgs {\n    private mErrorMessage: string;\n    public get ErrorMessage(): string {\n        return this.mErrorMessage;\n    }\n\n    private mErrorType: CallErrorType = CallErrorType.Unknown;\n    public get ErrorType(): CallErrorType {\n        return this.mErrorType;\n    }\n\n    public constructor(eventType: CallEventType, type?: CallErrorType, errorMessage?: string) {\n        super(eventType);\n        this.mErrorType = type;\n        this.mErrorMessage = errorMessage;\n\n        if (this.mErrorMessage == null) {\n            switch (eventType) {\n                //use some generic error messages as the underlaying system doesn't report the errors yet.\n                case CallEventType.ConnectionFailed:\n                    this.mErrorMessage = \"Connection failed.\";\n                    break;\n                case CallEventType.ListeningFailed:\n                    this.mErrorMessage = \"Failed to allow incoming connections. Address already in use or server connection failed.\";\n                    break;\n                default:\n                    this.mErrorMessage = \"Unknown error.\";\n                    break;\n\n            }\n        }\n    }\n}\n\nexport class WaitForIncomingCallEventArgs extends CallEventArgs\n{\n    private mAddress: string;\n    public get Address(): string {\n        return this.mAddress;\n    }\n    \n    public constructor(address: string) {\n        super(CallEventType.WaitForIncomingCall);\n        this.mAddress = address;\n    }\n}\n\n\nexport class MessageEventArgs extends CallEventArgs {\n\n    private mConnectionId: ConnectionId = ConnectionId.INVALID;\n    public get ConnectionId(): ConnectionId {\n        return this.mConnectionId;\n    }\n    private mContent: string;\n    public get Content(): string {\n        return this.mContent;\n    }\n    private mReliable: boolean;\n    public get Reliable(): boolean {\n        return this.mReliable;\n    }\n\n    public constructor(id: ConnectionId, message: string, reliable: boolean) {\n        super(CallEventType.Message);\n        this.mConnectionId = id;\n        this.mContent = message;\n        this.mReliable = reliable;\n    }\n}\n\n\nexport class DataMessageEventArgs extends CallEventArgs {\n\n    private mConnectionId: ConnectionId = ConnectionId.INVALID;\n    public get ConnectionId(): ConnectionId {\n        return this.mConnectionId;\n    }\n    private mContent: Uint8Array;\n    public get Content(): Uint8Array {\n        return this.mContent;\n    }\n    private mReliable: boolean;\n    public get Reliable(): boolean {\n        return this.mReliable;\n    }\n\n    public constructor(id: ConnectionId, message: Uint8Array, reliable: boolean) {\n        super(CallEventType.DataMessage);\n        this.mConnectionId = id;\n        this.mContent = message;\n        this.mReliable = reliable;\n    }\n}\n\n/**\n * Replaces the FrameUpdateEventArgs. Instead of\n * giving access to video frames only this gives access to\n * video html tag once it is created.\n * TODO: Add audio + video tracks + flag that indicates added, updated or removed\n * after renegotiation is added.\n */\nexport class MediaUpdatedEventArgs extends CallEventArgs\n{\n    private mConnectionId: ConnectionId = ConnectionId.INVALID;\n    public get ConnectionId(): ConnectionId {\n        return this.mConnectionId;\n    }\n    /// <summary>\n    /// False if the frame is from a local camera. True if it is received from\n    /// via network.\n    /// </summary>\n    public get IsRemote(): boolean {\n        return this.mConnectionId.id != ConnectionId.INVALID.id;\n    }\n\n    private mVideoElement:HTMLVideoElement;\n    public get VideoElement():HTMLVideoElement\n    {\n        return this.mVideoElement;\n    }\n    public constructor(conId: ConnectionId, videoElement:HTMLVideoElement)\n    {\n        super(CallEventType.MediaUpdate);\n        this.mConnectionId = conId;\n        this.mVideoElement = videoElement;\n    }\n}\n\n/// <summary>\n/// Will be replaced with MediaUpdatedEventArgs.\n/// It doesn't make a lot of sense in HTML only\n/// </summary>\nexport class FrameUpdateEventArgs extends CallEventArgs {\n\n    private mFrame: IFrameData;\n\n    /// <summary>\n    /// Raw image data. Note that the byte array contained in RawFrame will be reused\n    /// for the next frames received. Only valid until the next call of ICall.Update\n    /// </summary>\n    public get Frame(): IFrameData {\n        return this.mFrame;\n    }\n\n    private mConnectionId: ConnectionId = ConnectionId.INVALID;\n    public get ConnectionId(): ConnectionId {\n        return this.mConnectionId;\n    }\n    /// <summary>\n    /// False if the frame is from a local camera. True if it is received from\n    /// via network.\n    /// </summary>\n    public get IsRemote(): boolean {\n        return this.mConnectionId.id != ConnectionId.INVALID.id;\n    }\n\n    /// <summary>\n    /// Constructor\n    /// </summary>\n    /// <param name=\"conId\"></param>\n    /// <param name=\"frame\"></param>\n    public constructor(conId: ConnectionId, frame: IFrameData)\n    {\n        super(CallEventType.FrameUpdate);\n        this.mConnectionId = conId;\n        this.mFrame = frame;\n    }\n\n\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport { ConnectionId, IWebRtcNetwork } from \"../network/index\";\nimport { MediaConfig } from \"./MediaConfig\";\nimport { IFrameData } from \"./RawFrame\";\n\nexport enum MediaConfigurationState {\n    Invalid = 0,\n    NoConfiguration = 1,\n    InProgress = 2,\n    Successful = 3,\n    Failed = 4\n}\n\nexport enum MediaEventType\n{\n    Invalid = 0,\n\n    StreamAdded = 20\n}\n\n/**\n * Will replace frame event / configuration system in the future.\n * \n * So far it only delivers HTMLVideoElements once connection and\n * all tracks are ready and it plays.\n * \n * This is all temporary and will be updated soon to handle\n * all events from configuration of local streams to frame updates and\n * renegotation.\n * \n */\nexport class MediaEvent\n{\n    private mEventType = MediaEventType.Invalid;\n    public get EventType()\n    {\n        return this.mEventType;\n    }\n\n    private mConnectionId = ConnectionId.INVALID;\n    public get ConnectionId()\n    {\n        return this.mConnectionId;\n    }\n\n\n    private mArgs:any; \n    public get Args():any\n    {\n        return this.mArgs;\n    }\n\n    public constructor(type:MediaEventType, id: ConnectionId, args:any)\n    {\n        this.mEventType = type;\n        this.mConnectionId = id;\n        this.mArgs = args;\n    }\n}\n/**Interface adds media functionality to IWebRtcNetwork.\n * It is used to ensure compatibility to all other platforms.\n */\nexport interface IMediaNetwork extends IWebRtcNetwork\n{\n    Configure(config: MediaConfig): void;\n    GetConfigurationState(): MediaConfigurationState;\n    GetConfigurationError(): string;\n    ResetConfiguration(): void;\n\n    TryGetFrame(id: ConnectionId): IFrameData;\n    PeekFrame(id: ConnectionId): IFrameData;\n    SetVolume(volume: number, id: ConnectionId): void;\n    HasAudioTrack(id: ConnectionId): boolean;\n    HasVideoTrack(id: ConnectionId): boolean;\n\n    //Only used for browser specific events for now\n    //Not part of the C# api yet.\n    DequeueMediaEvent(): MediaEvent;\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/// <summary>\n/// Configuration for the WebRtcCall class.\n///\n/// Allows to turn on / off video and audio + configure the used servers to initialize the connection and\n/// avoid firewalls.\n/// </summary>\nexport class MediaConfig {\n    private mAudio: boolean = true;\n    public get Audio(): boolean {\n        return this.mAudio;\n    }\n    public set Audio(value: boolean) {\n        this.mAudio = value;\n    }\n\n    private mVideo: boolean = true;\n    public get Video(): boolean {\n        return this.mVideo;\n    }\n    public set Video(value: boolean) {\n        this.mVideo = value;\n    }\n\n\n    private mVideoDeviceName : string = \"\";\n    public get VideoDeviceName(): string {\n        return this.mVideoDeviceName;\n    }\n    public set VideoDeviceName(value: string) {\n        this.mVideoDeviceName = value;\n    }\n\n    private mMinWidth = -1;\n    public get MinWidth(): number {\n        return this.mMinWidth;\n    }\n    public set MinWidth(value: number) {\n        this.mMinWidth = value;\n    }\n\n    private mMinHeight = -1;\n    public get MinHeight(): number {\n        return this.mMinHeight;\n    }\n    public set MinHeight(value: number) {\n        this.mMinHeight = value;\n    }\n\n    private mMaxWidth = -1;\n    public get MaxWidth(): number {\n        return this.mMaxWidth;\n    }\n    public set MaxWidth(value: number) {\n        this.mMaxWidth = value;\n    }\n    private mMaxHeight = -1;\n    public get MaxHeight(): number {\n        return this.mMaxHeight;\n    }\n    public set MaxHeight(value: number) {\n        this.mMaxHeight = value;\n    }\n\n    private mIdealWidth = -1;\n    public get IdealWidth(): number {\n        return this.mIdealWidth;\n    }\n    public set IdealWidth(value: number) {\n        this.mIdealWidth = value;\n    }\n\n    private mIdealHeight = -1;\n    public get IdealHeight(): number {\n        return this.mIdealHeight;\n    }\n    public set IdealHeight(value: number) {\n        this.mIdealHeight = value;\n    }\n\n\n    private mMinFps = -1;\n    public get MinFps(): number {\n        return this.mMinFps;\n    }\n    public set MinFps(value: number) {\n        this.mMinFps = value;\n    }\n\n    private mMaxFps = -1;\n    public get MaxFps(): number {\n        return this.mMaxFps;\n    }\n    public set MaxFps(value: number) {\n        this.mMaxFps = value;\n    }\n\n    private mIdealFps = -1;\n    public get IdealFps(): number {\n        return this.mIdealFps;\n    }\n    public set IdealFps(value: number) {\n        this.mIdealFps = value;\n    }\n\n    private mFrameUpdates = false;\n\n    /** false - frame updates aren't generated. Useful for browser mode\n     *  true  - library will deliver frames as ByteArray\n    */\n    public get FrameUpdates(): boolean {\n        return this.mFrameUpdates;\n    }\n    public set FrameUpdates(value: boolean) {\n        this.mFrameUpdates = value;\n    }\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nexport class NetworkConfig {\n\n    private mIceServers = new Array<RTCIceServer>();\n\n    public get IceServers(): RTCIceServer[] {\n        return this.mIceServers;\n    }\n\n    public set IceServers(value: RTCIceServer[]) {\n        this.mIceServers = value;\n    }\n\n    private mSignalingUrl = \"ws://because-why-not.com:12776\";\n    public get SignalingUrl() {\n        return this.mSignalingUrl;\n    }\n\n    public set SignalingUrl(value: string) {\n        this.mSignalingUrl = value;\n    }\n\n    private mIsConference = false;\n    public get IsConference(): boolean {\n        return this.mIsConference;\n    }\n    public set IsConference(value:boolean) {\n        this.mIsConference = value;\n    }\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport { SLog } from \"../network/Helper\";\nimport { BrowserMediaStream } from \"../media_browser/index\";\n\nexport enum FramePixelFormat {\n    Invalid = 0,\n    Format32bppargb\n}\n\n\n\n\n//replace with interface after typescript 2.0 update (properties in interfaces aren't supported yet)\nexport class IFrameData {\n\n    public get Format(): FramePixelFormat{\n        return FramePixelFormat.Format32bppargb;\n    }\n\n    public get Buffer(): Uint8Array {\n        return null;\n    }\n\n    public get Width(): number {\n        return -1;\n    }\n\n\n    public get Height(): number {\n        return -1;\n    }\n\n    public constructor() { }\n}\n\n//Container for the raw bytes of the current frame + height and width.\n//Format is currently fixed based on the browser getImageData format\nexport class RawFrame extends IFrameData{\n\n    private mBuffer: Uint8Array = null;\n    public get Buffer(): Uint8Array {\n        return this.mBuffer;\n    }\n    \n    private mWidth: number;\n    public get Width(): number {\n        return this.mWidth;\n    }\n\n    private mHeight: number;\n    public get Height(): number {\n        return this.mHeight;\n    }\n\n\n    constructor(buffer: Uint8Array, width: number, height: number) {\n        super();\n        this.mBuffer = buffer;\n        this.mWidth = width;\n        this.mHeight = height;\n    }\n\n}\n\n/**\n * This class is suppose to increase the speed of the java script implementation.\n * Instead of creating RawFrames every Update call (because the real fps are unknown currently) it will\n * only create a lazy frame which will delay the creation of the RawFrame until the user actually tries\n * to access any data.\n * Thus if the game slows down or the user doesn't access any data the expensive copy is avoided.\n */\nexport class LazyFrame extends IFrameData{\n\n    private mFrameGenerator: BrowserMediaStream;\n    public get FrameGenerator() {\n        return this.mFrameGenerator;\n    }\n    private mRawFrame: RawFrame;\n\n\n    public get Buffer(): Uint8Array {\n        this.GenerateFrame();\n        if (this.mRawFrame == null)\n            return null;\n        return this.mRawFrame.Buffer;\n    }\n\n\n    public get Width(): number {\n        this.GenerateFrame();\n        if (this.mRawFrame == null)\n            return -1;\n        return this.mRawFrame.Width;\n    }\n\n\n    public get Height(): number {\n        this.GenerateFrame();\n        if (this.mRawFrame == null)\n            return -1;\n        return this.mRawFrame.Height;\n    }\n\n\n    constructor(frameGenerator: BrowserMediaStream) {\n        super();\n        this.mFrameGenerator = frameGenerator;\n    }\n\n    //Called before access of any frame data triggering the creation of the raw frame data\n    private GenerateFrame() {\n\n        if (this.mRawFrame == null) {\n            try {\n                this.mRawFrame = this.mFrameGenerator.CreateFrame();\n            } catch (exception) {\n                this.mRawFrame = null;\n                SLog.LogWarning(\"frame skipped in GenerateFrame due to exception: \" + JSON.stringify(exception));\n            }\n        }\n    }\n\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nexport * from './AWebRtcCall'\nexport * from './CallEventArgs'\nexport * from './ICall'\nexport * from './IMediaNetwork'\nexport * from './MediaConfig'\nexport * from './NetworkConfig'\nexport * from './RawFrame'","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport { WebRtcNetwork, SLog, ConnectionId, SignalingConfig, IBasicNetwork, LocalNetwork, WebsocketNetwork, WebRtcDataPeer, Queue }\n    from \"../network/index\";\nimport { IMediaNetwork, MediaConfigurationState, MediaEvent, MediaEventType } from \"../media/IMediaNetwork\";\nimport { NetworkConfig } from \"../media/NetworkConfig\";\nimport { MediaConfig } from \"../media/MediaConfig\";\nimport { IFrameData } from \"../media/RawFrame\";\nimport { MediaPeer } from \"./MediaPeer\";\nimport { BrowserMediaStream } from \"./BrowserMediaStream\";\nimport { DeviceApi } from \"./DeviceApi\";\n\n\n/**Avoid using this class directly whenever possible. Use BrowserWebRtcCall instead.\n * BrowserMediaNetwork might be subject to frequent changes to keep up with changes\n * in all other platforms.\n *\n * IMediaNetwork implementation for the browser. The class is mostly identical with the\n * C# version. Main goal is to have an interface that can easily be wrapped to other\n * programming languages and gives access to basic WebRTC features such as receiving\n * and sending audio and video + signaling via websockets.\n *\n * BrowserMediaNetwork can be used to stream a local audio and video track to a group of\n * multiple peers and receive remote tracks. The handling of the peers itself\n * remains the same as WebRtcNetwork.\n * Local tracks are created after calling Configure. This will request access from the\n * user. After the user allowed access GetConfigurationState will return Configured.\n * Every incoming and outgoing peer that is established after this will receive\n * the local audio and video track.\n * So far Configure can only be called once before any peers are connected.\n *\n *\n */\nexport class BrowserMediaNetwork extends WebRtcNetwork implements IMediaNetwork {\n\n    //media configuration set by the user\n    private mMediaConfig: MediaConfig = null;\n    //keeps track of audio / video tracks based on local devices\n    //will be shared with all connected peers.\n    private mLocalStream: BrowserMediaStream = null;\n    private mConfigurationState: MediaConfigurationState = MediaConfigurationState.Invalid;\n    private mConfigurationError: string = null;\n    private mMediaEvents: Queue<MediaEvent> = new Queue<MediaEvent>();\n\n    constructor(config: NetworkConfig) {\n\n        super(BrowserMediaNetwork.BuildSignalingConfig(config.SignalingUrl),\n            BrowserMediaNetwork.BuildRtcConfig(config.IceServers));\n        this.mConfigurationState = MediaConfigurationState.NoConfiguration;\n    }\n\n\n    /**Triggers the creation of a local audio and video track. After this\n     * call the user might get a request to allow access to the requested\n     * devices.\n     *\n     * @param config Detail configuration for audio/video devices.\n     */\n    public Configure(config: MediaConfig): void {\n        this.mMediaConfig = config;\n        this.mConfigurationError = null;\n        this.mConfigurationState = MediaConfigurationState.InProgress;\n\n\n\n        if (config.Audio || config.Video) {\n\n            //ugly part starts -> call get user media data (no typescript support)\n            //different browsers have different calls...\n\n            //check  getSupportedConstraints()???\n            //see https://w3c.github.io/mediacapture-main/getusermedia.html#constrainable-interface\n\n            //set default ideal to very common low 320x240 to avoid overloading weak computers\n            var constraints = {\n                audio: config.Audio\n            } as any;\n\n\n\n            let width = {} as any;\n            let height = {} as any;\n            let video = {} as any;\n            let fps = {} as any;\n\n            if (config.MinWidth != -1)\n                width.min = config.MinWidth;\n\n            if (config.MaxWidth != -1)\n                width.max = config.MaxWidth;\n\n            if (config.IdealWidth != -1)\n                width.ideal = config.IdealWidth;\n\n            if (config.MinHeight != -1)\n                height.min = config.MinHeight;\n\n            if (config.MaxHeight != -1)\n                height.max = config.MaxHeight;\n\n            if (config.IdealHeight != -1)\n                height.ideal = config.IdealHeight;\n\n\n            if (config.MinFps != -1)\n                fps.min = config.MinFps;\n            if (config.MaxFps != -1)\n                fps.max = config.MaxFps;\n            if (config.IdealFps != -1)\n                fps.ideal = config.IdealFps;\n\n\n            //user requested specific device? get it now to properly add it to the\n            //constraints later\n            let deviceId:string = null;\n            if(config.Video && config.VideoDeviceName && config.VideoDeviceName !== \"\")\n            {\n                deviceId = DeviceApi.GetDeviceId(config.VideoDeviceName);\n                SLog.L(\"using device \" + config.VideoDeviceName);\n                if(deviceId !== null)\n                {\n                    //SLog.L(\"using device id \" + deviceId);\n                }\n                else{\n                    SLog.LE(\"Failed to find deviceId for label \" + config.VideoDeviceName);\n                }\n            }\n            //watch out: unity changed behaviour and will now\n            //give 0 / 1 instead of false/true\n            //using === won't work\n            if(config.Video == false)\n            {\n                //video is off\n                video = false;\n            }else {\n                if(Object.keys(width).length > 0){\n                    video.width = width;\n                }\n                if(Object.keys(height).length > 0){\n                    video.height = height;\n                }\n                if(Object.keys(fps).length > 0){\n                    video.frameRate = fps;\n                }\n                if(deviceId !== null){\n                    video.deviceId = {\"exact\":deviceId};\n                }\n\n                //if we didn't add anything we need to set it to true\n                //at least (I assume?)\n                if(Object.keys(video).length == 0){\n                    video = true;\n                }\n            }\n\n\n            constraints.video = video;\n\n            SLog.L(\"calling GetUserMedia. Media constraints: \" + JSON.stringify(constraints));\n            if(navigator && navigator.mediaDevices)\n            {\n                let promise = navigator.mediaDevices.getUserMedia(constraints);\n                promise.then((stream) => { //user gave permission\n\n                        //totally unrelated -> user gave access to devices. use this\n                        //to get the proper names for our DeviceApi\n                        DeviceApi.Update();\n\n                        //call worked -> setup a frame buffer that deals with the rest\n                        this.mLocalStream = new BrowserMediaStream(stream as MediaStream);\n                        this.mLocalStream.InternalStreamAdded = (stream)=>{\n                            this.EnqueueMediaEvent(MediaEventType.StreamAdded, ConnectionId.INVALID, this.mLocalStream.VideoElement);\n                        };\n\n                        //unlike native version this one will happily play the local sound causing an echo\n                        //set to mute\n                        this.mLocalStream.SetMute(true);\n                        this.OnConfigurationSuccess();\n\n                    });\n                promise.catch((err)=> {\n                        //failed due to an error or user didn't give permissions\n                        SLog.LE(err.name + \": \" + err.message);\n                        this.OnConfigurationFailed(err.message);\n                    });\n            }else{\n                //no access to media device -> fail\n                let error = \"Configuration failed. navigator.mediaDevices is unedfined. The browser might not allow media access.\" +\n                \"Is the page loaded via http or file URL? Some browsers only support https!\";\n                SLog.LE(error);\n                this.OnConfigurationFailed(error);\n            }\n        } else {\n            this.OnConfigurationSuccess();\n        }\n    }\n\n\n\n    /**Call this every time a new frame is shown to the user in realtime\n     * applications.\n     *\n     */\n    public Update(): void {\n        super.Update();\n\n        if (this.mLocalStream != null)\n            this.mLocalStream.Update();\n    }\n\n    private EnqueueMediaEvent(type: MediaEventType, id:ConnectionId, args: HTMLVideoElement)\n    {\n        let evt = new MediaEvent(type, id, args);\n        this.mMediaEvents.Enqueue(evt);\n    }\n    public DequeueMediaEvent(): MediaEvent\n    {\n        return this.mMediaEvents.Dequeue();\n    }\n    /**\n     * Call this every frame after interacting with this instance.\n     *\n     * This call might flush buffered messages in the future and clear\n     * events that the user didn't process to avoid buffer overflows.\n     *\n     */\n    public Flush():void{\n        super.Flush();\n        this.mMediaEvents.Clear();\n    }\n\n    /**Poll this after Configure is called to get the result.\n     * Won't change after state is Configured or Failed.\n     *\n     */\n    public GetConfigurationState(): MediaConfigurationState {\n        return this.mConfigurationState;\n    }\n\n    /**Returns the error message if the configure process failed.\n     * This usally either happens because the user refused access\n     * or no device fulfills the configuration given\n     * (e.g. device doesn't support the given resolution)\n     *\n     */\n    public GetConfigurationError(): string {\n        return this.mConfigurationError;\n    }\n\n    /**Resets the configuration state to allow multiple attempts\n     * to call Configure.\n     *\n     */\n    public ResetConfiguration(): void {\n        this.mConfigurationState = MediaConfigurationState.NoConfiguration;\n        this.mMediaConfig = new MediaConfig();\n        this.mConfigurationError = null;\n    }\n    private OnConfigurationSuccess(): void {\n        this.mConfigurationState = MediaConfigurationState.Successful;\n    }\n\n    private OnConfigurationFailed(error: string): void {\n        this.mConfigurationError = error;\n        this.mConfigurationState = MediaConfigurationState.Failed;\n    }\n\n    /**Allows to peek at the current frame.\n     * Added to allow the emscripten C / C# side to allocate memory before\n     * actually getting the frame.\n     *\n     * @param id\n     */\n    public PeekFrame(id: ConnectionId): IFrameData {\n\n        if (id == null)\n            return;\n\n        if (id.id == ConnectionId.INVALID.id) {\n            if (this.mLocalStream != null) {\n                return this.mLocalStream.PeekFrame();\n            }\n        } else {\n            let peer = this.IdToConnection[id.id] as MediaPeer;\n            if (peer != null) {\n                return peer.PeekFrame();\n            }\n            //TODO: iterate over media peers and do the same as above\n        }\n\n        return null;\n    }\n    public TryGetFrame(id: ConnectionId): IFrameData {\n\n        if (id == null)\n            return;\n\n        if (id.id == ConnectionId.INVALID.id) {\n            if (this.mLocalStream != null) {\n                return this.mLocalStream.TryGetFrame();\n            }\n        } else {\n            let peer = this.IdToConnection[id.id] as MediaPeer;\n            if (peer != null) {\n                return peer.TryGetRemoteFrame();\n            }\n            //TODO: iterate over media peers and do the same as above\n        }\n\n        return null;\n    }\n\n    /**\n     * Remote audio control for each peer.\n     *\n     * @param volume 0 - mute and 1 - max volume\n     * @param id peer id\n     */\n    public SetVolume(volume: number, id: ConnectionId): void {\n\n        SLog.L(\"SetVolume called. Volume: \" + volume + \" id: \" + id.id);\n        let peer = this.IdToConnection[id.id] as MediaPeer;\n        if (peer != null) {\n            return peer.SetVolume(volume);\n        }\n    }\n    /** Allows to check if a specific peer has a remote\n     * audio track attached.\n     *\n     * @param id\n     */\n    public HasAudioTrack(id: ConnectionId): boolean {\n        let peer = this.IdToConnection[id.id] as MediaPeer;\n        if (peer != null) {\n            return peer.HasAudioTrack();\n        }\n        return false;\n    }\n    /** Allows to check if a specific peer has a remote\n     * video track attached.\n     *\n     * @param id\n     */\n    public HasVideoTrack(id: ConnectionId): boolean {\n        let peer = this.IdToConnection[id.id] as MediaPeer;\n        if (peer != null) {\n            return peer.HasVideoTrack();\n        }\n        return false;\n    }\n    /**Returns true if no local audio available or it is muted.\n     * False if audio is available (could still not work due to 0 volume, hardware\n     * volume control or a dummy audio input device is being used)\n     */\n    public IsMute(): boolean {\n\n        if(this.mLocalStream != null && this.mLocalStream.Stream != null)\n        {\n            var stream = this.mLocalStream.Stream;\n            var tracks = stream.getAudioTracks();\n            if(tracks.length > 0)\n            {\n                if(tracks[0].enabled)\n                    return false;\n            }\n        }\n        return true;\n    }\n\n    /**Sets the local audio device to mute / unmute it.\n     *\n     * @param value\n     */\n    public SetMute(value: boolean){\n        if(this.mLocalStream != null && this.mLocalStream.Stream != null)\n        {\n            var stream = this.mLocalStream.Stream;\n            var tracks = stream.getAudioTracks();\n            if(tracks.length > 0)\n            {\n                tracks[0].enabled = !value;\n            }\n        }\n    }\n    protected CreatePeer(peerId: ConnectionId, lRtcConfig: RTCConfiguration): WebRtcDataPeer {\n        let peer = new MediaPeer(peerId, lRtcConfig);\n        peer.InternalStreamAdded = this.MediaPeer_InternalMediaStreamAdded;\n        if (this.mLocalStream != null)\n            peer.AddLocalStream(this.mLocalStream.Stream);\n\n        return peer;\n    }\n\n    private MediaPeer_InternalMediaStreamAdded = (peer: MediaPeer, stream:BrowserMediaStream):void =>\n    {\n        this.EnqueueMediaEvent(MediaEventType.StreamAdded, peer.ConnectionId, stream.VideoElement);\n    }\n\n    protected DisposeInternal(): void\n    {\n        super.DisposeInternal();\n        this.DisposeLocalStream();\n    }\n\n    private DisposeLocalStream(): void\n    {\n        if (this.mLocalStream != null) {\n            this.mLocalStream.Dispose();\n            this.mLocalStream = null;\n            SLog.L(\"local buffer disposed\");\n        }\n    }\n\n    private static BuildSignalingConfig(signalingUrl: string): SignalingConfig {\n\n        let signalingNetwork: IBasicNetwork;\n        if (signalingUrl == null || signalingUrl == \"\") {\n            signalingNetwork = new LocalNetwork();\n        } else {\n            signalingNetwork = new WebsocketNetwork(signalingUrl);\n        }\n        return new SignalingConfig(signalingNetwork);\n    }\n\n    private static BuildRtcConfig(servers: RTCIceServer[]): RTCConfiguration{\n\n        let rtcConfig: RTCConfiguration = { iceServers: servers};\n        return rtcConfig;\n    }\n}\n","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport { IFrameData, RawFrame, LazyFrame } from \"../media/RawFrame\";\nimport { SLog } from \"../network/Helper\";\n\n\n\n/**Internal use only. \n * Bundles all functionality related to MediaStream, Tracks and video processing.\n * It creates two HTML elements: Video and Canvas to interact with the video stream\n * and convert the visible frame data to Uint8Array for compatibility with the\n * unity plugin and all other platforms.\n * \n */\nexport class BrowserMediaStream {\n\n    //no double buffering in java script as it forces us to create a new frame each time\n\n    //for debugging. Will attach the HTMLVideoElement used to play the local and remote\n    //video streams to the document.\n    public static DEBUG_SHOW_ELEMENTS = false;\n\n    //TODO: remove this flag. it is now always using lazy frames\n    public static sUseLazyFrames = true;\n    \n\n    //Gives each FrameBuffer and its HTMLVideoElement a fixed id for debugging purposes.\n    public static sNextInstanceId = 1;\n\n    \n\n\n    private mStream: MediaStream;\n    public get Stream() {\n        return this.mStream;\n    }\n    private mBufferedFrame: IFrameData = null;\n\n    private mInstanceId = 0;\n\n    private mVideoElement: HTMLVideoElement;\n    public get VideoElement() {\n        return this.mVideoElement;\n    }\n    private mCanvasElement: HTMLCanvasElement = null;\n    private mIsActive = false;\n\n    //Framerate used as a workaround if\n    //the actual framerate is unknown due to browser restrictions\n    public static DEFAULT_FRAMERATE = 25;\n    private mMsPerFrame = 1.0 / BrowserMediaStream.DEFAULT_FRAMERATE * 1000;\n    private mFrameRateKnown = false;\n\n    //Time the last frame was generated\n    private mLastFrameTime = 0;\n\n    /** Number of the last frame (not yet supported in all browsers)\n     * if it remains at <= 0 then we just generate frames based on\n     * the timer above\n     */\n    private mLastFrameNumber = 0;\n\n    private mHasVideo: boolean = false;\n\n    public InternalStreamAdded: (stream: BrowserMediaStream) => void = null;\n    \n\n\n    constructor(stream: MediaStream) {\n        this.mStream = stream;\n        this.mInstanceId = BrowserMediaStream.sNextInstanceId;\n        BrowserMediaStream.sNextInstanceId++;\n\n        if (this.mStream.getVideoTracks().length > 0)\n        {\n            this.mHasVideo = true;\n            let vtrack = this.mStream.getVideoTracks()[0];\n            let settings = vtrack.getSettings();\n            let fps = settings.frameRate;\n            if(fps)\n            {\n                this.mMsPerFrame = 1.0 / fps * 1000;\n                this.mFrameRateKnown = true;\n            }\n        }\n\n        this.SetupElements();\n    }\n    private CheckFrameRate():void\n    {\n        //in chrome the track itself might miss the framerate but\n        //we still know when it updates trough webkitDecodedFrameCount\n        if(this.mVideoElement && typeof (this.mVideoElement as any).webkitDecodedFrameCount !== \"undefined\")\n        {\n            this.mFrameRateKnown = true;\n        }\n        if(this.mFrameRateKnown === false)\n        {\n            //firefox and co won't tell us the FPS for remote stream\n            SLog.LW(\"Framerate unknown. Using default framerate of \" + BrowserMediaStream.DEFAULT_FRAMERATE);\n            \n        }\n    }\n    public SetupElements() {\n\n        this.mVideoElement = this.SetupVideoElement();\n        //TOOD: investigate bug here\n        //In some cases onloadedmetadata is never called. This might happen due to a \n        //bug in firefox or might be related to a device / driver error\n        //So far it only happens randomly (maybe 1 in 10 tries) on a single test device and only\n        //with 720p. (video device \"BisonCam, NB Pro\" on MSI laptop)\n        SLog.L(\"video element created. video tracks: \" + this.mStream.getVideoTracks().length);\n        this.mVideoElement.onloadedmetadata = (e) => {\n\n            //we might have shutdown everything by now already\n            if(this.mVideoElement == null)\n                return;\n\n                var playPromise = this.mVideoElement.play();\n\n                if (typeof playPromise !== \"undefined\")\n                {\n                    playPromise.then(function() {\n                        //all good\n                    }).catch(function(error) {\n                        //so far we can't handle this error automatically. Some situation this might trigger\n                        //Chrome & Firefox: User only receives audio but doesn't send it & the call was initiated without the user pressing a button.\n                        //Safari: This seems to trigger always on safari unless the user manually allows autoplay\n                        SLog.LE(\"Replay of video failed. This error is likely caused due to autoplay restrictions of the browser. Try allowing autoplay.\");\n                        console.error(error);\n                    });\n                }\n            if(this.InternalStreamAdded != null)\n                this.InternalStreamAdded(this);\n\n            this.CheckFrameRate();\n            \n\t\t\tSLog.L(\"Resolution: \" + this.mVideoElement.videoWidth + \"x\" + this.mVideoElement.videoHeight);\n            //now create canvas after the meta data of the video are known\n            if (this.mHasVideo) {\n                this.mCanvasElement = this.SetupCanvas();\n\n                //canvas couldn't be created. set video to false\n                if (this.mCanvasElement == null)\n                    this.mHasVideo = false;\n            } else {\n                this.mCanvasElement = null;\n            }\n            this.mIsActive = true;\n        };\n        //set the src value and trigger onloadedmetadata above\n        try {\n            //newer method. not yet supported everywhere\n            let element : any = this.mVideoElement;\n            element.srcObject = this.mStream;\n        }\n        catch (error)\n        {\n            //old way of doing it. won't work anymore in firefox and possibly other browsers\n            this.mVideoElement.src = window.URL.createObjectURL(this.mStream);\n        }\n    }\n\n\n    /** Returns the current frame number.\n     *  Treat a return value of 0 or smaller as unknown.\n     * (Browsers might have the property but \n     * always return 0)\n     */\n    private GetFrameNumber() : number\n    {\n        let frameNumber;\n        if(this.mVideoElement)\n        {\n            //to find out if we got a new frame\n            //chrome has webkitDecodedFrameCount\n            //firefox mozDecodedFrames, mozParsedFrames,  mozPresentedFrames seems to be always 0 so far\n            //mozPaintedFrames turned out useless as it only updates if the tag is visible\n            //no idea about all others\n            //\n            frameNumber = (this.mVideoElement as any).webkitDecodedFrameCount\n                //|| this.mVideoElement.currentTime can't be used updates every call\n                || -1;\n        }else{\n            frameNumber = -1;\n        }\n        return frameNumber;\n    }\n\n    //TODO: Buffering\n    public TryGetFrame(): IFrameData\n    {\n        //make sure we get the newest frame\n        this.EnsureLatestFrame();\n\n        //remove the buffered frame if any\n        var result = this.mBufferedFrame;\n        this.mBufferedFrame = null;\n        \n        return result;\n    }\n    public SetMute(mute: boolean): void {\n        this.mVideoElement.muted = mute;\n    }\n    public PeekFrame(): IFrameData {\n        this.EnsureLatestFrame();\n        return this.mBufferedFrame;\n    }\n\n    /** Ensures we have the latest frame ready\n     * for the next PeekFrame / TryGetFrame calls\n     */\n    private EnsureLatestFrame():boolean\n    {\n        if (this.HasNewerFrame()) {\n            this.FrameToBuffer();\n            return true;\n        }\n        return false;\n    }\n\n    /** checks if the html tag has a newer frame available\n     * (or if 1/30th of a second passed since last frame if\n     * this info isn't available)\n     */\n    private HasNewerFrame():boolean\n    {\n        if (this.mIsActive \n            && this.mHasVideo \n            && this.mCanvasElement != null)\n            {\n                if(this.mLastFrameNumber > 0)\n                {\n                    //we are getting frame numbers. use those to \n                    //check if we have a new one\n                    if(this.GetFrameNumber() > this.mLastFrameNumber)\n                    {\n                        return true;\n                    }\n                }\n                else\n                {\n                    //many browsers do not share the frame info\n                    //so far we just generate 30 FPS as a work around\n                    let now = new Date().getTime();\n                    let div = now - this.mLastFrameTime;\n                    if (div >= this.mMsPerFrame) {\n                    {\n                        return true;\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    \n    public Update(): void {\n        //moved to avoid creating buffered frames if not needed\n        //this.EnsureLatestFrame();\n    }\n\n    public DestroyCanvas(): void {\n        if (this.mCanvasElement != null && this.mCanvasElement.parentElement != null) {\n            this.mCanvasElement.parentElement.removeChild(this.mCanvasElement);\n        }\n    }\n    public Dispose(): void {\n\n        this.mIsActive = false;\n        this.DestroyCanvas();\n        if (this.mVideoElement != null && this.mVideoElement.parentElement != null) {\n            this.mVideoElement.parentElement.removeChild(this.mVideoElement);\n        }\n\n        //track cleanup is probably not needed but\n        //it might help ensure it properly stops\n        //in case there are other references out there\n        var tracks = this.mStream.getTracks();\n        for (var i = 0; i < tracks.length; i++) {\n            tracks[i].stop();\n        }\n        \n        this.mStream = null;\n        this.mVideoElement = null;\n        this.mCanvasElement = null;\n    }\n\n    public CreateFrame(): RawFrame {\n\n        this.mCanvasElement.width = this.mVideoElement.videoWidth;\n        this.mCanvasElement.height = this.mVideoElement.videoHeight;\n        let ctx = this.mCanvasElement.getContext(\"2d\");\n\n        var fillBackgroundFirst = true;\n        if (fillBackgroundFirst) {\n            ctx.clearRect(0, 0, this.mCanvasElement.width, this.mCanvasElement.height);\n        }\n        ctx.drawImage(this.mVideoElement, 0, 0);\n \n        try {\n            //risk of security exception in firefox\n            let imgData = ctx.getImageData(0, 0, this.mCanvasElement.width, this.mCanvasElement.height);\n            var imgRawData = imgData.data;\n            var array = new Uint8Array(imgRawData.buffer);\n            return new RawFrame(array, this.mCanvasElement.width, this.mCanvasElement.height);\n        } catch (exception) {\n\n            //show white frame for now\n            var array = new Uint8Array(this.mCanvasElement.width * this.mCanvasElement.height * 4);\n            array.fill(255, 0, array.length - 1);\n            let res =  new RawFrame(array, this.mCanvasElement.width, this.mCanvasElement.height);\n\n            //attempted workaround for firefox bug / suspected cause: \n            // * root cause seems to be an internal origin-clean flag within the canvas. If set to false reading from the\n            //   canvas triggers a security exceptions. This is usually used if the canvas contains data that isn't \n            //   suppose to be accessible e.g. a picture from another domain\n            // * while moving the image to the canvas the origin-clean flag seems to be set to false but only \n            //   during the first few frames. (maybe a race condition within firefox? A higher CPU workload increases the risk)\n            // * the canvas will work and look just fine but calling getImageData isn't allowed anymore\n            // * After a few frames the video is back to normal but the canvas will still have the flag set to false\n            // \n            //Solution:\n            // * Recreate the canvas if the exception is triggered. During the next few frames firefox should get its flag right\n            //   and then stop causing the error. It might recreate the canvas multiple times until it finally works as we\n            //   can't detect if the video element will trigger the issue until we tried to access the data\n            SLog.LogWarning(\"Firefox workaround: Refused access to the remote video buffer. Retrying next frame...\");\n            this.DestroyCanvas();\n            this.mCanvasElement = this.SetupCanvas();\n            return res;\n        }\n    }\n\n    private FrameToBuffer(): void\n    {\n        this.mLastFrameTime = new Date().getTime();\n        this.mLastFrameNumber = this.GetFrameNumber();\n        this.mBufferedFrame = new LazyFrame(this);\n    }\n\n\n\n\n    private SetupVideoElement(): HTMLVideoElement {\n\n        var videoElement: HTMLVideoElement= document.createElement(\"video\");\n        //width/doesn't seem to be important\n        videoElement.width = 320;\n        videoElement.height = 240;\n        videoElement.controls = true;\n        videoElement.id = \"awrtc_mediastream_video_\" + this.mInstanceId;\n        //videoElement.muted = true;\n        if (BrowserMediaStream.DEBUG_SHOW_ELEMENTS)\n            document.body.appendChild(videoElement);\n\n        return videoElement;\n    }\n\n    private SetupCanvas(): HTMLCanvasElement {\n\n        if (this.mVideoElement == null || this.mVideoElement.videoWidth <= 0 ||\n            this.mVideoElement.videoHeight <= 0)\n            return null;\n\n        var canvas: HTMLCanvasElement= document.createElement(\"canvas\");\n        canvas.width = this.mVideoElement.videoWidth;\n        canvas.height = this.mVideoElement.videoHeight;\n        canvas.id = \"awrtc_mediastream_canvas_\" + this.mInstanceId;\n\n        if (BrowserMediaStream.DEBUG_SHOW_ELEMENTS)\n            document.body.appendChild(canvas);\n        return canvas;\n    }\n\n    public SetVolume(volume: number): void {\n        if (this.mVideoElement == null) {\n            return;\n        }\n        if (volume < 0)\n            volume = 0;\n        if (volume > 1)\n            volume = 1;\n        this.mVideoElement.volume = volume;\n    }\n\n    public HasAudioTrack(): boolean {\n        if (this.mStream != null && this.mStream.getAudioTracks() != null\n            && this.mStream.getAudioTracks().length > 0) {\n            return true;\n        }\n        return false;\n    }\n    public HasVideoTrack(): boolean {\n        if (this.mStream != null && this.mStream.getVideoTracks() != null\n            && this.mStream.getVideoTracks().length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    //for debugging purposes this is in here\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport { AWebRtcCall } from \"../media/AWebRtcCall\";\nimport { NetworkConfig } from \"../media/NetworkConfig\";\nimport { IMediaNetwork } from \"../media/IMediaNetwork\";\nimport { BrowserMediaNetwork } from \"./BrowserMediaNetwork\";\n\n/**Browser version of the C# version of WebRtcCall. \n * \n * See ICall interface for detailed documentation. \n * BrowserWebRtcCall mainly exists to allow other versions \n * in the future that might build on a different IMediaNetwork\n * interface (Maybe something running inside Webassembly?).\n */\nexport class BrowserWebRtcCall extends AWebRtcCall {\n    public constructor(config: NetworkConfig) {\n        super(config);\n        this.Initialize(this.CreateNetwork());\n    }\n\n    private CreateNetwork(): IMediaNetwork {\n\n        return new BrowserMediaNetwork(this.mNetworkConfig);\n    }\n    protected DisposeInternal(disposing: boolean): void {\n        super.DisposeInternal(disposing);\n        if (disposing) {\n            if (this.mNetwork != null)\n                this.mNetwork.Dispose();\n            this.mNetwork = null;\n        }\n    }\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport { SLog } from \"../network/index\";\n\nexport class DeviceInfo\n{\n    public deviceId:string = null;\n    public defaultLabel:string = null;\n    public label:string = null;\n    public isLabelGuessed:boolean = true;\n}\n\nexport interface DeviceApiOnChanged {\n    (): void;\n}\n\nexport class DeviceApi\n{\n    private static sLastUpdate = 0;\n    public static get LastUpdate() :number\n    {\n        return DeviceApi.sLastUpdate;\n    }\n    public static get HasInfo()\n    {\n        return DeviceApi.sLastUpdate > 0;\n    }\n\n    private static sIsPending = false;\n    public static get IsPending(){\n        return DeviceApi.sIsPending;\n    }\n\n    private static sLastError:string = null;\n    private static get LastError()\n    {\n        return this.sLastError;\n    }\n\n\n    private static sDeviceInfo: { [id: string] : DeviceInfo; } = {};\n    private static sVideoDeviceCounter = 1;\n    private static sAccessStream:MediaStream = null;\n\n\n    private static sUpdateEvents: Array<DeviceApiOnChanged> = [];\n    public static AddOnChangedHandler(evt: DeviceApiOnChanged)\n    {\n        DeviceApi.sUpdateEvents.push(evt);\n    }\n    public static RemOnChangedHandler(evt: DeviceApiOnChanged)\n    {\n        let index = DeviceApi.sUpdateEvents.indexOf(evt);\n        if(index >= 0)\n            DeviceApi.sUpdateEvents.splice(index, 1);\n    }\n\n    private static TriggerChangedEvent()\n    {\n        for(let v of DeviceApi.sUpdateEvents)\n        {\n            try{\n                v();\n            }catch(e)\n            {\n                SLog.LE(\"Error in DeviceApi user event handler: \" + e);\n                console.exception(e);\n            }\n        }\n    }\n\n    private static InternalOnEnum = (devices:MediaDeviceInfo[])=>\n    {\n        DeviceApi.sIsPending = false;\n        DeviceApi.sLastUpdate = new Date().getTime();\n\n        let newDeviceInfo: { [id: string] : DeviceInfo; } = {};\n        for(let info of devices)\n        {\n            if(info.kind != \"videoinput\")\n                continue;\n            let newInfo = new DeviceInfo();\n            newInfo.deviceId  = info.deviceId;\n\n            let knownInfo:DeviceInfo= null;\n            if(newInfo.deviceId in DeviceApi.Devices)\n            {\n                //known device. reuse the default label\n                knownInfo = DeviceApi.Devices[newInfo.deviceId];\n            }\n\n\n            //check if we gave this device a default label already\n            //this is used to identify it via a user readable name in case\n            //we update multiple times with proper labels / default labels\n            if(knownInfo != null)\n            {\n                newInfo.defaultLabel = knownInfo.defaultLabel;\n            }else\n            {\n                newInfo.defaultLabel = info.kind  + \" \" + DeviceApi.sVideoDeviceCounter;;\n                DeviceApi.sVideoDeviceCounter++;\n            }\n\n            //check if we know a proper label or got one this update\n            if(knownInfo != null && knownInfo.isLabelGuessed == false)\n            {\n                //already have one\n                newInfo.label = knownInfo.label;\n                newInfo.isLabelGuessed = false;\n            }else if(info.label)\n            {\n                //got a new one\n                newInfo.label = info.label;\n                newInfo.isLabelGuessed = false;\n            }else{\n                //no known label -> just use the default one\n                newInfo.label = newInfo.defaultLabel;\n                newInfo.isLabelGuessed = true;\n            }\n            \n            newDeviceInfo[newInfo.deviceId] = newInfo;\n        }\n\n        DeviceApi.sDeviceInfo = newDeviceInfo;\n\n        if(DeviceApi.sAccessStream)\n        {\n            var tracks = DeviceApi.sAccessStream.getTracks();\n            for (var i = 0; i < tracks.length; i++) {\n                tracks[i].stop();\n            }\n            DeviceApi.sAccessStream = null;\n        }\n        DeviceApi.TriggerChangedEvent();\n    }\n\n    public static get Devices()\n    {\n        return DeviceApi.sDeviceInfo;\n    }\n    public static Reset()\n    {\n        DeviceApi.sUpdateEvents = [];\n        DeviceApi.sLastUpdate = 0;\n        DeviceApi.sDeviceInfo = {};\n        DeviceApi.sVideoDeviceCounter = 1;\n        DeviceApi.sAccessStream = null;\n        DeviceApi.sLastError = null;\n        DeviceApi.sIsPending = false;\n    }\n\n    private static InternalOnErrorCatch = (err:DOMError)=>\n    {\n        let txt :string = err.toString();\n        DeviceApi.InternalOnErrorString(txt);\n    }\n    private static InternalOnErrorString = (err:string)=>\n    {\n        DeviceApi.sIsPending = false;\n        DeviceApi.sLastError = err;\n        SLog.LE(err);\n        DeviceApi.TriggerChangedEvent();\n    }\n\n    private static InternalOnStream = (stream:MediaStream)=>\n    {\n        DeviceApi.sAccessStream = stream;\n        DeviceApi.Update();\n    }\n\n\n    /**Updates the device list based on the current\n     * access. Gives the devices numbers if the name isn't known.\n     */\n    public static Update():void\n    {\n        DeviceApi.sLastError = null;\n        if(DeviceApi.IsApiAvailable())\n        {\n            DeviceApi.sIsPending = true;\n            navigator.mediaDevices.enumerateDevices()\n            .then(DeviceApi.InternalOnEnum)\n            .catch(DeviceApi.InternalOnErrorCatch);\n        }else{\n            DeviceApi.InternalOnErrorString(\"Can't access mediaDevices or enumerateDevices\");\n        }\n    }\n    /**Checks if the API is available in the browser.\n     * false - browser doesn't support this API\n     * true - browser supports the API (might still refuse to give\n     * us access later on)\n     */\n    public static IsApiAvailable():boolean\n    {\n        if(navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices)\n            return true;\n        return false;\n    }\n    /**Asks the user for access first to get the full\n     * device names.\n     */\n    public static RequestUpdate():void\n    {\n        DeviceApi.sLastError = null;\n        if(DeviceApi.IsApiAvailable())\n        {\n            DeviceApi.sIsPending = true;\n            let constraints = {video:true};\n            navigator.mediaDevices.getUserMedia(constraints)\n                .then(DeviceApi.InternalOnStream)\n                .catch(DeviceApi.InternalOnErrorCatch);\n        }else{\n            DeviceApi.InternalOnErrorString(\"Can't access mediaDevices or enumerateDevices\");\n        }\n    }\n\n\n    public static GetDeviceId(label:string):string {\n\n        let devs = DeviceApi.Devices;\n        for (var key in devs) {\n            let dev = devs[key];\n            if(dev.label == label || dev.defaultLabel == label || dev.deviceId == label){\n\n                return dev.deviceId; \n            }\n        }\n        return null;\n    }\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport { WebRtcDataPeer, SLog } from \"../network/index\";\nimport { BrowserMediaStream } from \"./BrowserMediaStream\";\nimport { IFrameData } from \"../media/RawFrame\";\n\n//TODO: Not part of typescript as it is obsolete but\n//chrome might still need this\nexport interface RTCMediaStreamEvent extends Event {\n    stream: MediaStream;\n}\n\nexport interface RTCPeerConnectionObsolete extends RTCPeerConnection\n{\n    onaddstream: ((this: RTCPeerConnection, streamEvent: RTCMediaStreamEvent) => any) | null;\n    addStream(stream: MediaStream): void;\n}\n\n\nexport class MediaPeer extends WebRtcDataPeer\n{\n    private mRemoteStream: BrowserMediaStream = null;\n    //quick workaround to allow html user to get the HTMLVideoElement once it is\n    //created. Might be done via events later to make wrapping to unity/emscripten possible\n    public InternalStreamAdded: (peer:MediaPeer, stream: BrowserMediaStream) => void = null;\n    \n    //true - will use obsolete onstream / add stream\n    //false - will use ontrack / addtrack (seems to work fine now even on chrome)\n    public static sUseObsolete = false;\n\n    \n    protected OnSetup(): void {\n        super.OnSetup();\n        //TODO: test in different browsers if boolean works now\n        //this is unclear in the API. according to typescript they are boolean, in native code they are int\n        //and some browser failed in the past if boolean was used ... \n        this.mOfferOptions = { \"offerToReceiveAudio\": true, \"offerToReceiveVideo\": true };\n        \n        if(MediaPeer.sUseObsolete) {\n            SLog.LW(\"Using obsolete onaddstream as not all browsers support ontrack\");\n            (this.mPeer as RTCPeerConnectionObsolete).onaddstream = (streamEvent: RTCMediaStreamEvent) => { this.OnAddStream(streamEvent); };\n        }\n        else{\n            this.mPeer.ontrack = (ev:RTCTrackEvent)=>{this.OnTrack(ev);}\n        }\n    }\n    protected OnCleanup() {\n        super.OnCleanup();\n        if (this.mRemoteStream != null) {\n            this.mRemoteStream.Dispose();\n            this.mRemoteStream = null;\n        }\n    }\n    private OnAddStream(streamEvent: RTCMediaStreamEvent) {\n        this.SetupStream(streamEvent.stream);\n    }\n\n    private OnTrack(ev:RTCTrackEvent){\n\n        if(ev && ev.streams && ev.streams.length > 0)\n        {\n            //this is getting called twice if audio and video is active\n            if(this.mRemoteStream == null)\n                this.SetupStream(ev.streams[0]);\n        }else{\n            SLog.LE(\"Unexpected RTCTrackEvent: \" + JSON.stringify(ev));\n        }\n    }\n\n    private SetupStream(stream:MediaStream)\n    {\n        this.mRemoteStream = new BrowserMediaStream(stream);\n        //trigger events once the stream has its meta data available\n        this.mRemoteStream.InternalStreamAdded = (stream) =>{\n            if(this.InternalStreamAdded != null)\n            {\n                this.InternalStreamAdded(this, stream);\n            }\n        };\n    }\n\n    public TryGetRemoteFrame(): IFrameData\n    {\n        if (this.mRemoteStream == null)\n            return null;\n        return this.mRemoteStream.TryGetFrame();\n    }\n\n    public PeekFrame(): IFrameData {\n        if (this.mRemoteStream == null)\n            return null;\n        return this.mRemoteStream.PeekFrame();\n    }\n\n    public AddLocalStream(stream: MediaStream) {\n\n    \n        if(MediaPeer.sUseObsolete) {\n            (this.mPeer as RTCPeerConnectionObsolete).addStream(stream);\n        }\n        else{\n            for(let v of stream.getTracks())\n            {\n                this.mPeer.addTrack(v, stream);\n            }\n        }\n\n    }\n\n    public Update() {\n        super.Update();\n\n        if (this.mRemoteStream != null) {\n            this.mRemoteStream.Update();\n        }\n    }\n\n    public SetVolume(volume: number): void {\n        if (this.mRemoteStream != null)\n            this.mRemoteStream.SetVolume(volume);\n    }\n\n    public HasAudioTrack(): boolean {\n        if (this.mRemoteStream != null)\n            return this.mRemoteStream.HasAudioTrack();\n        return false;\n    }\n    public HasVideoTrack(): boolean {\n        if (this.mRemoteStream != null)\n            return this.mRemoteStream.HasVideoTrack();\n        return false;\n    }\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nexport * from './BrowserMediaNetwork'\nexport * from './BrowserWebRtcCall'\nexport * from './BrowserMediaStream'\nexport * from './MediaPeer'\nexport * from './DeviceApi'\n","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/**Contains some helper classes to keep the typescript implementation\n * similar to the C# implementation.\n * \n */\n\nexport class Queue<T> {\n    private mArr: Array<T> = new Array<T>();\n    constructor() {\n    }\n\n    public Enqueue(val: T) {\n        this.mArr.push(val);\n    }\n\n    public TryDequeue(outp: Output<T> ): boolean{\n        \n        var res = false\n\n        if (this.mArr.length > 0) {\n            outp.val = this.mArr.shift();\n            res = true;\n        }\n        return res;\n    }\n\n    public Dequeue(): T {\n        if (this.mArr.length > 0) {\n            return this.mArr.shift();\n        } else {\n            return null;\n        }\n    }\n    public Peek(): T {\n        if (this.mArr.length > 0) {\n            return this.mArr[0];\n        } else {\n            return null;\n        }\n    }\n    public Count(): number{\n        return this.mArr.length;\n    }\n\n    public Clear():void\n    {\n        this.mArr = new Array<T>();\n    }\n}\n\nexport class List<T> {\n    private mArr: Array<T> = new Array<T>();\n    public get Internal() : Array<T>\n    {\n        return this.mArr;\n    }\n    constructor() {\n    }\n\n    public Add(val: T) {\n        this.mArr.push(val);\n    }\n\n\n    public get Count(): number {\n        return this.mArr.length;\n    }\n}\n\nexport class Output<T>\n{\n    public val : T;\n}\nexport class Debug {\n    public static Log(s: any) {\n        SLog.Log(s);\n    }\n    public static LogError(s: any) {\n        SLog.LogError(s);\n    }\n    public static LogWarning(s: any) {\n        SLog.LogWarning(s);\n    }\n}\n\nexport abstract class Encoder {\n\n    public abstract GetBytes(text: string): Uint8Array;\n    public abstract GetString(buffer: Uint8Array): string;\n}\n\nexport class UTF16Encoding extends Encoder{\n    constructor() {\n        super();\n    }\n    public GetBytes(text: string): Uint8Array {\n        return this.stringToBuffer(text);\n    }\n    public GetString(buffer: Uint8Array): string {\n        return this.bufferToString(buffer);\n    }\n\n\n    private bufferToString(buffer: Uint8Array): string {\n        let arr = new Uint16Array(buffer.buffer, buffer.byteOffset, buffer.byteLength / 2);\n        return String.fromCharCode.apply(null, arr);\n    }\n\n    private stringToBuffer(str: string): Uint8Array {\n        let buf = new ArrayBuffer(str.length * 2);\n        let bufView = new Uint16Array(buf);\n        for (var i = 0, strLen = str.length; i < strLen; i++) {\n            bufView[i] = str.charCodeAt(i);\n        }\n\n        let result = new Uint8Array(buf);\n        return result;\n    }\n}\nexport class Encoding {\n\n    public static get UTF16() {\n        return new UTF16Encoding();\n    }\n\n    constructor() {\n\n    }\n\n}\n\nexport class Random {\n\n    public static getRandomInt(min, max): number {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n}\n\nexport class Helper {\n    public static tryParseInt(value : string): number {  \n        try {\n            if (/^(\\-|\\+)?([0-9]+)$/.test(value)) {\n                let result = Number(value);\n                if (isNaN(result) == false)\n                    return result;\n            }\n\n        } catch ( e) {\n        }\n        return null;\n    }\n}\nexport enum SLogLevel\n{\n    None = 0,\n    Errors = 1,\n    Warnings = 2,\n    Info = 3\n}\n//Simplified logger\nexport class SLog {\n\n    private static sLogLevel: SLogLevel = SLogLevel.Warnings;\n\n    public static SetLogLevel(level: SLogLevel)\n    {\n        SLog.sLogLevel = level;\n    }\n    public static RequestLogLevel(level: SLogLevel)\n    {\n        if(level > SLog.sLogLevel)\n            SLog.sLogLevel = level;\n    }\n\n\n    public static L(msg: any, tag?:string): void {\n        SLog.Log(msg, tag);\n    }\n    public static LW(msg: any, tag?:string): void {\n        SLog.LogWarning(msg, tag);\n    }\n    public static LE(msg: any, tag?:string): void {\n        SLog.LogError(msg, tag);\n    }\n    public static Log(msg: any, tag?:string): void {\n        if(!tag)\n            tag = \"\";\n        if(SLog.sLogLevel >= SLogLevel.Info)\n            console.log(msg, tag);\n    }\n    public static LogWarning(msg: any, tag?:string): void {\n        if(!tag)\n            tag = \"\";\n        if(SLog.sLogLevel >= SLogLevel.Warnings)\n            console.warn(msg, tag);\n    }\n\n    public static LogError(msg: any, tag?:string) {\n        if(!tag)\n            tag = \"\";\n        if(SLog.sLogLevel >= SLogLevel.Errors)\n            console.error(msg, tag);\n    }\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/** Abstract interfaces and serialization to keep different\n * versions compatible to each other.\n * \n * Watch out before changing anything in this file. Content is reused\n * between webclient, signaling server and needs to remain compatible to\n * the C# implementation.\n */\n\nimport { SLog } from \"./Helper\";\n\nexport enum NetEventType {\n    Invalid = 0,\n    UnreliableMessageReceived = 1,\n    ReliableMessageReceived = 2,\n    ServerInitialized = 3,//confirmation that the server was started. other people will be able to connect\n    ServerInitFailed = 4,//server couldn't be started\n    ServerClosed = 5,//server was closed. no new incoming connections\n    NewConnection = 6,//new incoming or outgoing connection established\n    ConnectionFailed = 7,//outgoing connection failed\n    Disconnected = 8,//a connection was disconnected\n    FatalError = 100, //not yet used\n    Warning = 101,//not yet used\n    Log = 102, //not yet used\n\n    /// <summary>\n    /// This value and higher are reserved for other uses. \n    /// Should never get to the user and should be filtered out.\n    /// </summary>\n    ReservedStart = 200,\n    /// <summary>\n    /// Reserved.\n    /// Used by protocols that forward NetworkEvents\n    /// </summary>\n    MetaVersion = 201,\n    /// <summary>\n    /// Reserved.\n    /// Used by protocols that forward NetworkEvents.\n    /// </summary>\n    MetaHeartbeat = 202\n}\nexport enum NetEventDataType {\n    Null = 0,\n    ByteArray = 1, //leading 32 bit byte length + byte array\n    UTF16String = 2, //leading 32 bit length (in utf16 chunks)  + UTF 16 \n}\n\nexport class NetworkEvent {\n\n    private type: NetEventType;\n    private connectionId: ConnectionId;\n    private data: any;\n\n    constructor(t: NetEventType, conId: ConnectionId, data: any) {\n        this.type = t;\n        this.connectionId = conId;\n        this.data = data;\n    }\n\n    public get RawData(): any {\n        return this.data;\n    }\n\n    public get MessageData(): Uint8Array {\n        if (typeof this.data != \"string\")\n            return this.data;\n        return null;\n    }\n\n    public get Info(): string {\n        if (typeof this.data == \"string\")\n            return this.data;\n        return null;\n    }\n\n    public get Type(): NetEventType {\n        return this.type;\n    }\n    public get ConnectionId(): ConnectionId {\n        return this.connectionId;\n    }\n\n    //for debugging only\n    public toString(): string {\n        let output = \"NetworkEvent[\";\n        output += \"NetEventType: (\";\n        output += NetEventType[this.type];\n        output += \"), id: (\";\n        output += this.connectionId.id;\n        output += \"), Data: (\";\n        if (typeof this.data == \"string\") {\n            output += this.data;\n        }\n        output += \")]\";\n\n        return output;\n    }\n\n    public static parseFromString(str: string): NetworkEvent {\n\n        let values = JSON.parse(str);\n\n\n        let data: any;\n        if (values.data == null) {\n            data = null;\n        } else if (typeof values.data == \"string\") {\n            data = values.data;\n        } else if (typeof values.data == \"object\") {\n\n            //json represents the array as an object containing each index and the\n            //value as string number ... improve that later\n            let arrayAsObject = values.data;\n            var length = 0;\n            for (var prop in arrayAsObject) {\n                //if (arrayAsObject.hasOwnProperty(prop)) { //shouldnt be needed\n                length++;\n                //}\n            }\n            let buffer = new Uint8Array(Object.keys(arrayAsObject).length);\n            for (let i = 0; i < buffer.length; i++)\n                buffer[i] = arrayAsObject[i];\n            data = buffer;\n        } else {\n            SLog.LogError(\"network event can't be parsed: \" + str);\n        }\n        var evt = new NetworkEvent(values.type, values.connectionId, data);\n        return evt;\n    }\n\n    public static toString(evt: NetworkEvent): string {\n        return JSON.stringify(evt);\n    }\n    public static fromByteArray(arrin: Uint8Array): NetworkEvent {\n        //old node js versions seem to not return proper Uint8Arrays but\n        //buffers -> make sure it is a Uint8Array\n        let arr : Uint8Array = new Uint8Array(arrin)\n\n        let type: NetEventType = arr[0]; //byte\n        let dataType: NetEventDataType = arr[1]; //byte\n        let id: number = new Int16Array(arr.buffer, arr.byteOffset + 2, 1)[0]; //short\n\n        \n        let data: any = null;\n        if (dataType == NetEventDataType.ByteArray) {\n\n            let length: number = new Uint32Array(arr.buffer, arr.byteOffset + 4, 1)[0]; //uint\n            let byteArray = new Uint8Array(arr.buffer, arr.byteOffset + 8, length);\n            data = byteArray;\n\n        } else if (dataType == NetEventDataType.UTF16String) {\n\n            let length: number = new Uint32Array(arr.buffer, arr.byteOffset + 4, 1)[0]; //uint\n            let uint16Arr = new Uint16Array(arr.buffer, arr.byteOffset + 8, length);\n\n            let str: string = \"\";\n            for (let i = 0; i < uint16Arr.length; i++) {\n                str += String.fromCharCode(uint16Arr[i]);\n            }\n            data = str;\n        } else if (dataType == NetEventDataType.Null) {\n            //message has no data\n        }\n        else\n        {\n            throw new Error('Message has an invalid data type flag: ' + dataType);\n        }\n\n        let conId: ConnectionId = new ConnectionId(id);\n        let result: NetworkEvent = new NetworkEvent(type, conId, data);\n        return result;\n    }\n    public static toByteArray(evt: NetworkEvent): Uint8Array {\n\n        let dataType: NetEventDataType;\n        let length = 4; //4 bytes are always needed\n\n        //getting type and length\n        if (evt.data == null) {\n            dataType = NetEventDataType.Null;\n        } else if (typeof evt.data == \"string\") {\n            dataType = NetEventDataType.UTF16String;\n            let str: string = evt.data;\n            length += str.length * 2 + 4;\n        } else {\n            dataType = NetEventDataType.ByteArray;\n            let byteArray: Uint8Array = evt.data;\n            length += 4 + byteArray.length;\n        }\n\n        //creating the byte array\n        let result = new Uint8Array(length);\n        result[0] = evt.type;;\n        result[1] = dataType;\n\n        let conIdField = new Int16Array(result.buffer, result.byteOffset + 2, 1);\n        conIdField[0] = evt.connectionId.id;\n\n        if (dataType == NetEventDataType.ByteArray) {\n\n            let byteArray: Uint8Array = evt.data;\n            let lengthField = new Uint32Array(result.buffer, result.byteOffset + 4, 1);\n            lengthField[0] = byteArray.length;\n            for (let i = 0; i < byteArray.length; i++) {\n                result[8 + i] = byteArray[i];\n            }\n        } else if (dataType == NetEventDataType.UTF16String) {\n\n            let str: string = evt.data;\n            let lengthField = new Uint32Array(result.buffer, result.byteOffset + 4, 1);\n            lengthField[0] = str.length;\n\n            let dataField = new Uint16Array(result.buffer, result.byteOffset + 8, str.length);\n            for (let i = 0; i < dataField.length; i++) {\n                dataField[i] = str.charCodeAt(i);\n            }\n\n        }\n        return result;\n    }\n}\n\nexport class ConnectionId {\n\n    public static INVALID: ConnectionId = new ConnectionId(-1);\n\n    id: number;\n\n    constructor(nid: number) {\n        this.id = nid;\n    }\n\n\n}\n/// <summary>\n/// Interface to a network that doesn't enforce storing any states.\n/// \n/// Anything more is reusable between multiple different networks.\n/// </summary>\nexport interface INetwork {\n    /// <summary>\n    /// This will return the incoming network events. Call this method and handle the incommen events until it returns false.\n    /// </summary>\n    /// <param name=\"evt\"></param>\n    /// <returns>Returns true if the parameter evt contains a new event. False if there are no events to process left.</returns>\n    Dequeue(): NetworkEvent;\n\n    Peek(): NetworkEvent;\n\n    /// <summary>\n    /// Sends buffered data.\n    /// Might also clear all unused events from the queue!\n    /// </summary>\n    Flush(): void;\n\n    /// <summary>\n    /// Sends the content if a byte array to the given connection.\n    /// </summary>\n    /// <param name=\"id\">The id of the recipient</param>\n    /// <param name=\"data\">Byte array containing the data to send</param>\n    /// <param name=\"offset\">The index in data where the network should start to send</param>\n    /// <param name=\"length\">Length in bytes you want to send</param>\n    /// <param name=\"reliable\">True to send a reliable message(tcp style) and false to send unreliable (udp style)</param>\n    SendData(id: ConnectionId, data: Uint8Array, /*offset: number, length: number,*/ reliable: boolean): boolean\n\n    /// <summary>\n    /// Disconnects the given connection\n    /// </summary>\n    /// <param name=\"id\">Id of the connection to disconnect.</param>\n    Disconnect(id: ConnectionId): void;\n\n    /// <summary>\n    /// Disconnects all connection and shutsdown the server if started.\n    /// Dequeue will still return the confirmation messages such as Disconnected event for each connection.\n    /// \n    /// </summary>\n    Shutdown(): void;\n\n    /// <summary>\n    /// Call this every frame if you intend to read incoming messages using Dequeue. This will make\n    /// sure all data is read received by the network.\n    /// </summary>\n    Update(): void;\n\n    Dispose(): void;\n}\n\n/// <summary>\n/// Shared interface for WebRtcNetwork and UnityNetwork.\n/// \n/// Keep in mind that in the current version the network can only act as a server (StartServer method) or \n/// as a client (via Connect method).\n/// </summary>\nexport interface IBasicNetwork extends INetwork {\n\n    /// <summary>\n    /// Starts a new server. After the server is started the Dequeue method will return a\n    /// ServerInitialized event with the address in the Info field.\n    /// \n    /// If the server fails to start it will return a ServerInitFailed event. If the\n    /// server is closed due to an error or the Shutdown method a ServerClosed event\n    /// will be triggered.\n    /// </summary>\n    StartServer(address?: string): void;\n    StopServer(): void\n\n    /// <summary>\n    /// Connects to a given address or roomname.\n    /// \n    /// This call will result in one of those 2 events in response:\n    /// * NewConnection if the connection was established\n    /// * ConnectionFailed if the connection failed.\n    /// \n    /// \n    /// </summary>\n    /// <param name=\"address\">A string that identifies the target.</param>\n    /// <returns>Returns the Connection id the established connection will have (only supported by WebRtcNetwork).</returns>\n    Connect(address: string): ConnectionId;\n}\nexport interface IWebRtcNetwork extends IBasicNetwork {\n    GetBufferedAmount(id: ConnectionId, reliable:boolean): number;\n}\n//export {NetEventType, NetworkEvent, ConnectionId, INetwork, IBasicNetwork};\n\n","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport {ConnectionId, NetworkEvent, NetEventType} from \"./index\"\nimport { Queue } from \"./Helper\";\n\ninterface IIdNetworkDictionary {\n    [id: number]: LocalNetwork;\n}\ninterface IAddressNetworkDictionary {\n    [address: string]: LocalNetwork;\n}\n\n/**Helper to simulate the WebsocketNetwork or WebRtcNetwork\n * within a local application without\n * any actual network components.\n *\n * This implementation might lack some features.\n */\nexport class LocalNetwork{\n    private static sNextId:number = 1;\n    private static mServers = {} as IAddressNetworkDictionary;\n\n    private mId:number;\n    private mNextNetworkId = new ConnectionId(1);\n    private mServerAddress : string = null;\n    private mEvents = new Queue<NetworkEvent>();\n    private mConnectionNetwork = {} as IIdNetworkDictionary;\n\n    private mIsDisposed = false;\n\n    public constructor() {\n\n        this.mId = LocalNetwork.sNextId;\n        LocalNetwork.sNextId++;\n    }\n\n    public get IsServer() {\n        return this.mServerAddress != null;\n    }\n\n\n    public StartServer(serverAddress: string = null): void\n    {\n        if (serverAddress == null)\n            serverAddress = \"\" + this.mId;\n\n        if (serverAddress in LocalNetwork.mServers) {\n            this.Enqueue(NetEventType.ServerInitFailed, ConnectionId.INVALID, serverAddress);\n            return;\n        }\n\n        LocalNetwork.mServers[serverAddress] = this;\n        this.mServerAddress = serverAddress;\n\n        this.Enqueue(NetEventType.ServerInitialized, ConnectionId.INVALID, serverAddress);\n    }\n    public StopServer() : void\n    {\n        if (this.IsServer) {\n            this.Enqueue(NetEventType.ServerClosed, ConnectionId.INVALID, this.mServerAddress);\n            delete LocalNetwork.mServers[this.mServerAddress];\n            this.mServerAddress = null;\n        }\n    }\n\n    public Connect(address: string): ConnectionId\n    {\n        var connectionId = this.NextConnectionId();\n\n        var sucessful = false;\n        if (address in LocalNetwork.mServers) {\n            let server = LocalNetwork.mServers[address];\n            if (server != null) {\n                server.ConnectClient(this);\n                //add the server as local connection\n                this.mConnectionNetwork[connectionId.id] = LocalNetwork.mServers[address];\n                this.Enqueue(NetEventType.NewConnection, connectionId, null);\n                sucessful = true;\n            }\n        }\n\n        if (sucessful == false) {\n            console.log(\"!!!herehere connect..\");\n            this.Enqueue(NetEventType.ConnectionFailed, connectionId, \"Couldn't connect to the given server with id \" + address);\n        }\n\n        return connectionId;\n    }\n\n    public  Shutdown() : void\n    {\n        for(var id in this.mConnectionNetwork) //can be changed while looping?\n        {\n            this.Disconnect(new ConnectionId(+id));\n        }\n        //this.mConnectionNetwork.Clear();\n        this.StopServer();\n    }\n\n    public Dispose() : void{\n        if (this.mIsDisposed == false) {\n            this.Shutdown();\n        }\n    }\n\n    public SendData(userId: ConnectionId, data: Uint8Array, reliable: boolean): boolean\n    {\n\n        if (userId.id in this.mConnectionNetwork)\n        {\n                let net = this.mConnectionNetwork[userId.id];\n                net.ReceiveData(this, data,  reliable);\n                return true;\n        }\n        return false;\n    }\n\n    public Update(): void\n    {\n        //work around for the GarbageCollection bug\n        //usually weak references are removed during garbage collection but that\n        //fails sometimes as others weak references get null to even though\n        //the objects still exist!\n        this.CleanupWreakReferences();\n    }\n\n    public Dequeue(): NetworkEvent\n    {\n        return this.mEvents.Dequeue();\n    }\n    public Peek(): NetworkEvent\n    {\n        return this.mEvents.Peek();\n    }\n\n\n    public Flush(): void\n    {\n\n    }\n\n    public Disconnect(id: ConnectionId): void\n    {\n        if (id.id in this.mConnectionNetwork) {\n            let other = this.mConnectionNetwork[id.id];\n            if (other != null) {\n                other.InternalDisconnectNetwork(this);\n                this.InternalDisconnect(id);\n            }\n            else {\n                //this is suppose to never happen but it does\n                //if a server is destroyed by the garbage collector the client\n                //weak reference appears to be NULL even though it still exists\n                //bug?\n                this.CleanupWreakReferences();\n            }\n        }\n    }\n\n\n    private FindConnectionId(network: LocalNetwork): ConnectionId\n    {\n        for(var kvp in this.mConnectionNetwork)\n        {\n            let network = this.mConnectionNetwork[kvp];\n            if (network != null) {\n                return new ConnectionId(+kvp);\n            }\n        }\n        return ConnectionId.INVALID;\n    }\n\n\n    private NextConnectionId(): ConnectionId\n    {\n        let res = this.mNextNetworkId;\n        this.mNextNetworkId = new ConnectionId(res.id + 1);\n        return res;\n    }\n\n\n    private ConnectClient(client: LocalNetwork): void\n    {\n        //if (this.IsServer == false)\n        //    throw new InvalidOperationException();\n\n        let nextId = this.NextConnectionId();\n        //server side only\n        this.mConnectionNetwork[nextId.id] = client;\n        this.Enqueue(NetEventType.NewConnection, nextId, null);\n    }\n\n    private Enqueue(type: NetEventType, id: ConnectionId, data: any): void\n    {\n        let ev = new NetworkEvent(type, id, data);\n        this.mEvents.Enqueue(ev);\n    }\n\n    private ReceiveData(network: LocalNetwork, data: Uint8Array, reliable : boolean): void\n    {\n        let userId = this.FindConnectionId(network);\n\n        let buffer = new Uint8Array(data.length);\n        for (let i = 0; i < buffer.length; i++) {\n            buffer[i] = data[i];\n        }\n\n\n        let type = NetEventType.UnreliableMessageReceived;\n        if (reliable)\n            type = NetEventType.ReliableMessageReceived;\n        this.Enqueue(type, userId, buffer);\n    }\n    private InternalDisconnect(id: ConnectionId): void\n    {\n        if (id.id in this.mConnectionNetwork) {\n            this.Enqueue(NetEventType.Disconnected, id, null);\n            delete this.mConnectionNetwork[id.id];\n        }\n    }\n\n    private InternalDisconnectNetwork(ln: LocalNetwork): void\n    {\n        //if it can't be found it will return invalid which is ignored in internal disconnect\n        this.InternalDisconnect(this.FindConnectionId(ln));\n    }\n\n    private CleanupWreakReferences(): void\n    {\n        //foreach(var kvp in mConnectionNetwork.Keys.ToList())\n        //{\n        //    var val = mConnectionNetwork[kvp];\n        //    if (val.Get() == null) {\n        //        InternalDisconnect(kvp);\n        //    }\n        //}\n    }\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n//import {ConnectionId, NetworkEvent, NetEventType, IBasicNetwork} from './INetwork'\nimport {\n    SignalingInfo, SignalingConfig, WebRtcPeerState, WebRtcDataPeer,\n    NetworkEvent, NetEventType, ConnectionId, IBasicNetwork}  from \"./index\"\nimport { Queue, SLog, Output } from \"./Helper\";\n\nexport enum WebRtcNetworkServerState {\n    Invalid,\n    Offline,\n    Starting,\n    Online\n}\n/// <summary>\n/// Native version of WebRtc\n///\n/// Make sure to use Shutdown before unity quits! (unity will probably get stuck without it)\n///\n///\n/// </summary>\nexport class WebRtcNetwork implements IBasicNetwork {\n\n    private mTimeout = 60000;\n\n    private mInSignaling: { [id: number]: WebRtcDataPeer } = {}\n    private mNextId: ConnectionId = new ConnectionId(1);\n    private mSignaling: SignalingConfig = null;\n    private mEvents: Queue<NetworkEvent> = new Queue<NetworkEvent>();\n    private mIdToConnection: { [id: number]: WebRtcDataPeer } = {};\n    protected get IdToConnection() {\n        return this.mIdToConnection;\n    }\n    //must be the same as the hashmap and later returned read only (avoids copies)\n    private mConnectionIds: Array<ConnectionId> = new Array<ConnectionId>();\n    //only for internal use\n    public GetConnections(): Array<ConnectionId> {\n        return this.mConnectionIds;\n    }\n\n    private mServerState = WebRtcNetworkServerState.Offline;\n    private mRtcConfig: RTCConfiguration;\n    private mSignalingNetwork: IBasicNetwork;\n    private mLogDelegate: (s: string) => void;\n    private mIsDisposed = false;\n\n//just for debugging / testing\n    public SetLog(logDel: (s: string) => void) {\n        this.mLogDelegate = logDel;\n    }\n\n    //public\n    public constructor(signalingConfig: SignalingConfig, lRtcConfig: RTCConfiguration) {\n        this.mSignaling = signalingConfig;\n        this.mSignalingNetwork = this.mSignaling.GetNetwork();\n        this.mRtcConfig = lRtcConfig;\n    }\n\n    public StartServer(): void;\n    public StartServer(address: string): void;\n    public StartServer(address?: string): void {\n        this.StartServerInternal(address);\n    }\n\n    protected StartServerInternal(address?: string): void {\n        this.mServerState = WebRtcNetworkServerState.Starting;\n        this.mSignalingNetwork.StartServer(address);\n    }\n\n    public StopServer(): void {\n        if (this.mServerState == WebRtcNetworkServerState.Starting) {\n            this.mSignalingNetwork.StopServer();\n\n            //removed. the underlaying sygnaling network should set those values\n            //this.mServerState = WebRtcNetworkServerState.Offline;\n            //this.mEvents.Enqueue(new NetworkEvent(NetEventType.ServerInitFailed, ConnectionId.INVALID, null));\n        }\n        else if (this.mServerState == WebRtcNetworkServerState.Online) {\n            //dont wait for confirmation\n            this.mSignalingNetwork.StopServer();\n            //removed. the underlaying sygnaling network should set those values\n            //this.mServerState = WebRtcNetworkServerState.Offline;\n            //this.mEvents.Enqueue(new NetworkEvent(NetEventType.ServerClosed, ConnectionId.INVALID, null));\n\n        }\n    }\n\n    public Connect(address: string): ConnectionId {\n        return this.AddOutgoingConnection(address);\n    }\n\n    public Update(): void {\n        this.CheckSignalingState();\n        this.UpdateSignalingNetwork();\n        this.UpdatePeers();\n    }\n\n    public Dequeue(): NetworkEvent {\n        if (this.mEvents.Count() > 0)\n            return this.mEvents.Dequeue();\n        return null;\n    }\n\n    public Peek(): NetworkEvent {\n\n        if (this.mEvents.Count() > 0)\n            return this.mEvents.Peek();\n        return null;\n    }\n\n    public Flush(): void {\n        this.mSignalingNetwork.Flush();\n    }\n\n    public SendData(id: ConnectionId, data: Uint8Array/*, offset : number, length : number*/, reliable: boolean): boolean {\n        if (id == null || data == null || data.length == 0)\n            return;\n        let peer = this.mIdToConnection[id.id];\n        if (peer) {\n            return peer.SendData(data,/* offset, length,*/ reliable);\n\n        } else {\n            SLog.LogWarning(\"unknown connection id\");\n            return false;\n        }\n    }\n    public GetBufferedAmount(id: ConnectionId, reliable: boolean): number {\n        let peer = this.mIdToConnection[id.id];\n        if (peer) {\n            return peer.GetBufferedAmount(reliable);\n\n        } else {\n            SLog.LogWarning(\"unknown connection id\");\n            return -1;\n        }\n    }\n\n\n    public Disconnect(id: ConnectionId): void {\n        let peer = this.mIdToConnection[id.id];\n        if (peer) {\n            this.HandleDisconnect(id);\n        }\n    }\n\n    public Shutdown(): void {\n        for (var id of this.mConnectionIds) {\n            this.Disconnect(id);\n        }\n        this.StopServer();\n        this.mSignalingNetwork.Shutdown();\n    }\n\n\n    protected DisposeInternal() {\n        if (this.mIsDisposed == false) {\n            this.Shutdown();\n            this.mIsDisposed = true;\n        }\n    }\n\n    public Dispose(): void {\n        this.DisposeInternal();\n    }\n\n//protected\n    protected CreatePeer(peerId: ConnectionId, rtcConfig: RTCConfiguration): WebRtcDataPeer\n    {\n        let peer = new WebRtcDataPeer(peerId, rtcConfig);\n        return peer;\n    }\n//private\n    private CheckSignalingState() {\n        let connected = new Array<ConnectionId>();\n        let failed = new Array<ConnectionId>();\n\n        //update the signaling channels\n        for (let key in this.mInSignaling) {\n\n            let peer = this.mInSignaling[key];\n            peer.Update();\n            let timeAlive = peer.SignalingInfo.GetCreationTimeMs();\n\n            let msg = new Output<string>();\n            while (peer.DequeueSignalingMessage(msg)) {\n                let buffer = this.StringToBuffer(msg.val);\n                this.mSignalingNetwork.SendData(new ConnectionId(+key), buffer, true);\n            }\n\n            if (peer.GetState() == WebRtcPeerState.Connected) {\n                connected.push(peer.SignalingInfo.ConnectionId);\n            }\n            else if (peer.GetState() == WebRtcPeerState.SignalingFailed || timeAlive > this.mTimeout) {\n                failed.push(peer.SignalingInfo.ConnectionId);\n            }\n        }\n\n\n        for (var v of connected) {\n            this.ConnectionEstablished(v);\n        }\n\n        for (var v of failed) {\n            this.SignalingFailed(v);\n        }\n    }\n\n    private UpdateSignalingNetwork(): void {\n        //update the signaling system\n        this.mSignalingNetwork.Update();\n\n\n        let evt: NetworkEvent;\n\n        while ((evt = this.mSignalingNetwork.Dequeue()) != null) {\n            if (evt.Type == NetEventType.ServerInitialized) {\n\n                this.mServerState = WebRtcNetworkServerState.Online;\n                this.mEvents.Enqueue(new NetworkEvent(NetEventType.ServerInitialized, ConnectionId.INVALID, evt.RawData));\n\n            } else if (evt.Type == NetEventType.ServerInitFailed) {\n\n\n                this.mServerState = WebRtcNetworkServerState.Offline;\n                this.mEvents.Enqueue(new NetworkEvent(NetEventType.ServerInitFailed, ConnectionId.INVALID, evt.RawData));\n\n            } else if (evt.Type == NetEventType.ServerClosed) {\n\n                this.mServerState = WebRtcNetworkServerState.Offline;\n                this.mEvents.Enqueue(new NetworkEvent(NetEventType.ServerClosed, ConnectionId.INVALID, evt.RawData));\n\n            } else if (evt.Type == NetEventType.NewConnection) {\n\n                //check if new incoming connection or an outgoing was established\n\n                let peer = this.mInSignaling[evt.ConnectionId.id];\n                if (peer) {\n                    peer.StartSignaling();\n                } else {\n                    this.AddIncomingConnection(evt.ConnectionId);\n                }\n\n            } else if (evt.Type == NetEventType.ConnectionFailed) {\n\n                //Outgoing connection failed\n                this.SignalingFailed(evt.ConnectionId);\n\n            } else if (evt.Type == NetEventType.Disconnected) {\n\n\n                let peer = this.mInSignaling[evt.ConnectionId.id];\n                if (peer) {\n                    peer.SignalingInfo.SignalingDisconnected();\n                }\n\n                //if signaling was completed this isn't a problem\n                //SignalingDisconnected(evt.ConnectionId);\n\n                //do nothing. either webrtc has enough information to connect already\n                //or it will wait forever for the information -> after 30 sec we give up\n            } else if (evt.Type == NetEventType.ReliableMessageReceived) {\n\n                let peer = this.mInSignaling[evt.ConnectionId.id];\n                if (peer) {\n                    let msg = this.BufferToString(evt.MessageData);\n                    peer.AddSignalingMessage(msg);\n                } else {\n                    SLog.LogWarning(\"Signaling message from unknown connection received\");\n                }\n            }\n        }\n    }\n\n    private UpdatePeers(): void {\n        //every peer has a queue storing incoming messages to avoid multi threading problems -> handle it now\n        let disconnected = new Array<ConnectionId>();\n        for (var key in this.mIdToConnection) {\n            var peer: WebRtcDataPeer = this.mIdToConnection[key];\n            peer.Update();\n\n            let ev = new Output<NetworkEvent>();\n\n            while (peer.DequeueEvent(/*out*/ ev)) {\n                this.mEvents.Enqueue(ev.val);\n            }\n\n            if (peer.GetState() == WebRtcPeerState.Closed) {\n                disconnected.push(peer.ConnectionId);\n            }\n        }\n\n        for (let key of disconnected) {\n            this.HandleDisconnect(key);\n        }\n    }\n\n    private AddOutgoingConnection(address: string): ConnectionId {\n        let signalingConId = this.mSignalingNetwork.Connect(address);\n        SLog.L(\"new outgoing connection\");\n        let info = new SignalingInfo(signalingConId, false, Date.now());\n        let peer = this.CreatePeer(this.NextConnectionId(), this.mRtcConfig);\n        peer.SetSignalingInfo(info);\n        this.mInSignaling[signalingConId.id] = peer;\n        return peer.ConnectionId;\n    }\n\n    private AddIncomingConnection(signalingConId: ConnectionId): ConnectionId {\n        SLog.L(\"new incoming connection\");\n        let info = new SignalingInfo(signalingConId, true, Date.now());\n        let peer = this.CreatePeer(this.NextConnectionId(), this.mRtcConfig);\n        peer.SetSignalingInfo(info);\n        this.mInSignaling[signalingConId.id] = peer;\n        //passive way of starting signaling -> send out random number. if the other one does the same\n        //the one with the highest number starts signaling\n        peer.NegotiateSignaling();\n        return peer.ConnectionId;\n    }\n\n    private ConnectionEstablished(signalingConId: ConnectionId): void {\n        let peer = this.mInSignaling[signalingConId.id];\n\n        delete this.mInSignaling[signalingConId.id];\n        this.mSignalingNetwork.Disconnect(signalingConId);\n\n        this.mConnectionIds.push(peer.ConnectionId);\n        this.mIdToConnection[peer.ConnectionId.id] = peer;\n        this.mEvents.Enqueue(new NetworkEvent(NetEventType.NewConnection, peer.ConnectionId, null));\n    }\n\n    private SignalingFailed(signalingConId: ConnectionId): void {\n        let peer = this.mInSignaling[signalingConId.id];\n        // if (peer) {\n        //     console.log(\"!!!herehere signalingfailed..\");\n        //     //connection was still believed to be in signaling -> notify the user of the event\n        //     delete this.mInSignaling[signalingConId.id];\n        //     this.mEvents.Enqueue(new NetworkEvent(NetEventType.ConnectionFailed, peer.ConnectionId, null));\n\n        //     if (peer.SignalingInfo.IsSignalingConnected()) {\n        //         this.mSignalingNetwork.Disconnect(signalingConId);\n        //     }\n        //     peer.Dispose();\n        // }\n    }\n\n    private HandleDisconnect(id: ConnectionId): void {\n        let peer = this.mIdToConnection[id.id];\n        if (peer) {\n            peer.Dispose();\n        }\n        //??? this looks buggy. the connection id could be a reference with the same id and would not be recognized\n        let index = this.mConnectionIds.indexOf(id);\n        if (index != -1) {\n            this.mConnectionIds.splice(index, 1);\n        }\n        delete this.mIdToConnection[id.id];\n        let ev = new NetworkEvent(NetEventType.Disconnected, id, null);\n        this.mEvents.Enqueue(ev);\n    }\n\n    private NextConnectionId(): ConnectionId {\n        let id = new ConnectionId(this.mNextId.id);\n        this.mNextId.id++;\n        return id;\n    }\n\n    private StringToBuffer(str: string): Uint8Array {\n        let buf = new ArrayBuffer(str.length * 2);\n        let bufView = new Uint16Array(buf);\n        for (var i = 0, strLen = str.length; i < strLen; i++) {\n            bufView[i] = str.charCodeAt(i);\n        }\n\n        let result = new Uint8Array(buf);\n        return result;\n    }\n\n    private BufferToString(buffer: Uint8Array): string {\n        let arr = new Uint16Array(buffer.buffer, buffer.byteOffset, buffer.byteLength / 2);\n        return String.fromCharCode.apply(null, arr);\n    }\n\n}\n","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport {IBasicNetwork, ConnectionId, NetworkEvent, NetEventType} from \"./index\"\nimport { Queue, Helper, SLog, Debug, Output, Random } from \"./Helper\";\n\nexport class SignalingConfig {\n    private mNetwork: IBasicNetwork;\n\n    constructor(network: IBasicNetwork) {\n        this.mNetwork = network;\n    }\n    public GetNetwork(): IBasicNetwork {\n        return this.mNetwork;\n    }\n\n}\n\nexport class SignalingInfo {\n\n    private mSignalingConnected: boolean;\n    public IsSignalingConnected(): boolean\n    {\n        return this.mSignalingConnected;\n    }\n    private mConnectionId: ConnectionId;\n    public get ConnectionId() : ConnectionId\n    {\n        return this.mConnectionId;\n    }\n\n    private mIsIncoming: boolean;\n    public IsIncoming(): boolean\n    {\n        return this.mIsIncoming;\n    }\n\n\n    private mCreationTime: number;\n\n    public GetCreationTimeMs(): number\n    {\n        return Date.now() - this.mCreationTime;\n    }\n\n    public constructor(id: ConnectionId, isIncoming: boolean, timeStamp : number)\n    {\n        this.mConnectionId = id;\n        this.mIsIncoming = isIncoming;\n        this.mCreationTime = timeStamp;\n        this.mSignalingConnected = true;\n    }\n    public SignalingDisconnected(): void\n    {\n        this.mSignalingConnected = false;\n    }\n}\nexport enum WebRtcPeerState {\n    Invalid,\n    Created, //freshly created peer. didn't start to connect yet but can receive message to trigger it\n    Signaling, //webrtc started the process of connecting 2 peers\n    SignalingFailed, //connection failed to be established -> either cleanup/close or try again (not yet possible)\n    Connected, //connection is running\n    Closing, //Used before Close call to block reaction to webrtc events coming back\n    Closed //either Closed call finished or closed remotely or Cleanup/Dispose finished -> peer connection is destroyed and all resources are released\n}\nexport enum WebRtcInternalState {\n    None, //nothing happened yet\n    Signaling, //Create Offer or CreateAnswer successfully called (after create callbacks)\n    SignalingFailed, //Signaling failed\n    Connected, //all channels opened\n    Closed //at least one channel was closed\n}\nexport abstract class AWebRtcPeer {\n\n    private mState = WebRtcPeerState.Invalid;\n    public GetState(): WebRtcPeerState {\n        return this.mState;\n    }\n\n    //only written during webrtc callbacks\n    private mRtcInternalState = WebRtcInternalState.None;\n\n    protected mPeer: RTCPeerConnection;\n\n    private mIncomingSignalingQueue: Queue<string> = new Queue<string>();\n    private mOutgoingSignalingQueue: Queue<string> = new Queue<string>();\n\n\n    //Used to negotiate who starts the signaling if 2 peers listening\n    //at the same time\n    private mDidSendRandomNumber = false;\n    private mRandomNumerSent = 0;\n\n\n    protected mOfferOptions: RTCOfferOptions = { \"offerToReceiveAudio\": false, \"offerToReceiveVideo\": false };\n\n\n\n    constructor(rtcConfig: RTCConfiguration) {\n        this.SetupPeer(rtcConfig);\n        //remove this. it will trigger this call before the subclasses\n        //are initialized\n        this.OnSetup();\n        this.mState = WebRtcPeerState.Created;\n    }\n\n    protected abstract OnSetup(): void;\n    protected abstract OnStartSignaling(): void;\n    protected abstract OnCleanup(): void;\n\n    private SetupPeer(rtcConfig: RTCConfiguration): void {\n\n        this.mPeer = new RTCPeerConnection(rtcConfig);\n        this.mPeer.onicecandidate = (ev: RTCPeerConnectionIceEvent) => { this.OnIceCandidate(ev); };\n        this.mPeer.oniceconnectionstatechange = (ev: Event) => { this.OnIceConnectionChange(); };\n        this.mPeer.onnegotiationneeded = (ev: Event) => { this.OnRenegotiationNeeded(); };\n        this.mPeer.onsignalingstatechange = (ev: Event) => { this.OnSignalingChange(); };\n\n    }\n\n\n    protected DisposeInternal(): void {\n        this.Cleanup();\n    }\n\n    public Dispose(): void {\n\n        if (this.mPeer != null) {\n            this.DisposeInternal();\n        }\n    }\n\n    private Cleanup(): void {\n        //closing webrtc could cause old events to flush out -> make sure we don't call cleanup\n        //recursively\n        if (this.mState == WebRtcPeerState.Closed || this.mState == WebRtcPeerState.Closing) {\n            return;\n        }\n\n        this.mState = WebRtcPeerState.Closing;\n\n        this.OnCleanup();\n\n        if (this.mPeer != null)\n            this.mPeer.close();\n\n        //js version still receives callbacks after this. would make it\n        //impossible to get the state\n        //this.mReliableDataChannel = null;\n        //this.mUnreliableDataChannel = null;\n        //this.mPeer = null;\n\n        this.mState = WebRtcPeerState.Closed;\n    }\n\n    public Update(): void {\n\n        if (this.mState != WebRtcPeerState.Closed && this.mState != WebRtcPeerState.Closing && this.mState != WebRtcPeerState.SignalingFailed)\n            this.UpdateState();\n\n        if (this.mState == WebRtcPeerState.Signaling || this.mState == WebRtcPeerState.Created)\n            this.HandleIncomingSignaling();\n    }\n\n    private UpdateState(): void {\n        //will only be entered if the current state isn't already one of the ending states (closed, closing, signalingfailed)\n\n        if (this.mRtcInternalState == WebRtcInternalState.Closed) {\n            //if webrtc switched to the closed state -> make sure everything is destroyed.\n\n            //webrtc closed the connection. update internal state + destroy the references\n            //to webrtc\n            this.Cleanup();\n            //mState will be Closed now as well\n        } else if (this.mRtcInternalState == WebRtcInternalState.SignalingFailed) {\n            //if webrtc switched to a state indicating the signaling process failed ->  set the whole state to failed\n            //this step will be ignored if the peers are destroyed already to not jump back from closed state to failed\n            this.mState = WebRtcPeerState.SignalingFailed;\n        } else if (this.mRtcInternalState == WebRtcInternalState.Connected) {\n            this.mState = WebRtcPeerState.Connected;\n        }\n    }\n\n    public HandleIncomingSignaling(): void {\n\n        //handle the incoming messages all at once\n        while (this.mIncomingSignalingQueue.Count() > 0) {\n            let msgString: string = this.mIncomingSignalingQueue.Dequeue();\n\n            let randomNumber = Helper.tryParseInt(msgString);\n            if (randomNumber != null) {\n                //was a random number for signaling negotiation\n\n                //if this peer uses negotiation as well then\n                //this would be true\n                if (this.mDidSendRandomNumber) {\n                    //no peer is set to start signaling -> the one with the bigger number starts\n\n                    if (randomNumber < this.mRandomNumerSent) {\n                        //own diced number was bigger -> start signaling\n                        SLog.L(\"Signaling negotiation complete. Starting signaling.\");\n                        this.StartSignaling();\n                    } else if (randomNumber == this.mRandomNumerSent) {\n                        //same numbers. restart the process\n                        this.NegotiateSignaling();\n                    } else {\n                        //wait for other peer to start signaling\n                        SLog.L(\"Signaling negotiation complete. Waiting for signaling.\");\n                    }\n                } else {\n                    //ignore. this peer starts signaling automatically and doesn't use this\n                    //negotiation\n                }\n            }\n            else {\n                //must be a webrtc signaling message using default json formatting\n\n                let msg: any = JSON.parse(msgString);\n                if (msg.sdp) {\n\n                    let sdp: RTCSessionDescription = new RTCSessionDescription(msg as RTCSessionDescriptionInit);\n                    if (sdp.type == 'offer') {\n                        this.CreateAnswer(sdp);\n                        //setTimeout(() => {  }, 5000);\n\n                    }\n                    else {\n                        //setTimeout(() => { }, 5000);\n                        this.RecAnswer(sdp);\n                    }\n                } else {\n                    let ice: RTCIceCandidate = new RTCIceCandidate(msg);\n                    if (ice != null) {\n                        let promise = this.mPeer.addIceCandidate(ice);\n                        promise.then(() => {/*success*/ });\n                        promise.catch((error: DOMError) => { Debug.LogError(error); });\n\n                    }\n                }\n            }\n\n        }\n    }\n\n    public AddSignalingMessage(msg: string): void {\n        Debug.Log(\"incoming Signaling message \" + msg);\n        this.mIncomingSignalingQueue.Enqueue(msg);\n    }\n\n    public DequeueSignalingMessage(/*out*/  msg: Output<string>): boolean {\n\n        //lock might be not the best way to deal with this\n        //lock(mOutgoingSignalingQueue)\n        {\n            if (this.mOutgoingSignalingQueue.Count() > 0) {\n                msg.val = this.mOutgoingSignalingQueue.Dequeue();\n                return true;\n            }\n            else {\n                msg.val = null;\n                return false;\n            }\n        }\n    }\n\n    private EnqueueOutgoing(msg: string): void {\n        //lock(mOutgoingSignalingQueue)\n        {\n            Debug.Log(\"Outgoing Signaling message \" + msg);\n            this.mOutgoingSignalingQueue.Enqueue(msg);\n        }\n    }\n\n\n    public StartSignaling(): void {\n\n        this.OnStartSignaling();\n        this.CreateOffer();\n    }\n    public NegotiateSignaling(): void {\n\n        let nb = Random.getRandomInt(0, 2147483647);\n        this.mRandomNumerSent = nb;\n        this.mDidSendRandomNumber = true;\n        this.EnqueueOutgoing(\"\" + nb);\n    }\n\n    private CreateOffer(): void {\n        Debug.Log(\"CreateOffer\");\n\n\n\n\n        let createOfferPromise = this.mPeer.createOffer(this.mOfferOptions);\n        createOfferPromise.then((desc: RTCSessionDescription) => {\n            let msg: string = JSON.stringify(desc);\n\n            let setDescPromise = this.mPeer.setLocalDescription(desc);\n            setDescPromise.then(() => {\n                this.RtcSetSignalingStarted();\n                this.EnqueueOutgoing(msg);\n            });\n            setDescPromise.catch((error: DOMError) => {\n                Debug.LogError(error);\n                this.RtcSetSignalingFailed();\n            });\n        });\n        createOfferPromise.catch((error: DOMError) => {\n            Debug.LogError(error);\n            this.RtcSetSignalingFailed();\n        });\n\n    }\n\n    private CreateAnswer(offer: RTCSessionDescription): void {\n        Debug.Log(\"CreateAnswer\");\n        let remoteDescPromise = this.mPeer.setRemoteDescription(offer);\n        remoteDescPromise.then(() => {\n            let createAnswerPromise = this.mPeer.createAnswer();\n            createAnswerPromise.then((desc: RTCSessionDescription) => {\n                let msg: string = JSON.stringify(desc);\n\n                let localDescPromise = this.mPeer.setLocalDescription(desc);\n                localDescPromise.then(() => {\n                    this.RtcSetSignalingStarted();\n                    this.EnqueueOutgoing(msg);\n                });\n                localDescPromise.catch((error: DOMError) => {\n                    Debug.LogError(error);\n                    this.RtcSetSignalingFailed();\n                });\n\n            });\n            createAnswerPromise.catch( (error: DOMError) => {\n                Debug.LogError(error);\n                this.RtcSetSignalingFailed();\n            });\n\n        });\n        remoteDescPromise.catch((error: DOMError) => {\n            Debug.LogError(error);\n            this.RtcSetSignalingFailed();\n        });\n    }\n\n\n    private RecAnswer(answer: RTCSessionDescription): void {\n        Debug.Log(\"RecAnswer\");\n        let remoteDescPromise = this.mPeer.setRemoteDescription(answer);\n        remoteDescPromise.then(() => {\n            //all done\n        });\n        remoteDescPromise.catch((error: DOMError) => {\n            Debug.LogError(error);\n            this.RtcSetSignalingFailed();\n        });\n\n    }\n\n    private RtcSetSignalingStarted(): void {\n        if (this.mRtcInternalState == WebRtcInternalState.None) {\n            this.mRtcInternalState = WebRtcInternalState.Signaling;\n        }\n    }\n    protected RtcSetSignalingFailed(): void {\n        this.mRtcInternalState = WebRtcInternalState.SignalingFailed;\n    }\n\n    protected RtcSetConnected(): void {\n        if (this.mRtcInternalState == WebRtcInternalState.Signaling)\n            this.mRtcInternalState = WebRtcInternalState.Connected;\n    }\n    protected RtcSetClosed(): void {\n        if (this.mRtcInternalState == WebRtcInternalState.Connected)\n            this.mRtcInternalState = WebRtcInternalState.Closed;\n    }\n\n\n\n    private OnIceCandidate(ev: RTCPeerConnectionIceEvent): void {\n        if (ev && ev.candidate) {\n            let candidate = ev.candidate;\n            let msg: string = JSON.stringify(candidate);\n            this.EnqueueOutgoing(msg);\n        }\n    }\n\n    private OnIceConnectionChange(): void {\n        Debug.Log(this.mPeer.iceConnectionState);\n        if (this.mPeer.iceConnectionState == \"failed\") {\n            if(this.mState == WebRtcPeerState.Signaling)\n            {\n                this.RtcSetSignalingFailed();\n            }else if(this.mState == WebRtcPeerState.Connected)\n            {\n                this.RtcSetClosed();\n            }\n        }\n    }\n\n    private OnIceGatheringChange(/*new_state: RTCIceGatheringState*/): void {\n        Debug.Log(this.mPeer.iceGatheringState);\n    }\n\n    private OnRenegotiationNeeded(): void\n    { }\n\n    private OnSignalingChange(/*new_state: RTCSignalingState*/): void {\n        Debug.Log(this.mPeer.signalingState);\n        if (this.mPeer.signalingState == \"closed\") {\n            this.RtcSetClosed();\n        }\n    }\n}\n\nexport class WebRtcDataPeer extends AWebRtcPeer {\n\n    private mConnectionId: ConnectionId;\n    public get ConnectionId(): ConnectionId {\n        return this.mConnectionId;\n    }\n\n    private mInfo: SignalingInfo = null;\n    public get SignalingInfo(): SignalingInfo {\n        return this.mInfo;\n    }\n    public SetSignalingInfo(info: SignalingInfo) {\n        this.mInfo = info;\n    }\n\n    private mEvents: Queue<NetworkEvent> = new Queue<NetworkEvent>();\n\n\n    private static sLabelReliable: string = \"reliable\";\n    private static sLabelUnreliable: string = \"unreliable\";\n    private mReliableDataChannelReady: boolean = false;\n    private mUnreliableDataChannelReady: boolean = false;\n\n    private mReliableDataChannel: RTCDataChannel;\n    private mUnreliableDataChannel: RTCDataChannel;\n\n\n    public constructor(id: ConnectionId, rtcConfig: RTCConfiguration) {\n        super(rtcConfig);\n        this.mConnectionId = id;\n    }\n\n    protected OnSetup():void {\n        // this.mPeer.ondatachannel = (ev: Event) => { this.OnDataChannel((ev as any).channel); };\n    }\n\n    protected OnStartSignaling(): void {\n        // let configReliable: RTCDataChannelInit = {} as RTCDataChannelInit;\n        // this.mReliableDataChannel = this.mPeer.createDataChannel(WebRtcDataPeer.sLabelReliable, configReliable);\n        // this.RegisterObserverReliable();\n\n        // let configUnreliable: RTCDataChannelInit = {} as RTCDataChannelInit;\n        // configUnreliable.maxRetransmits = 0;\n        // configUnreliable.ordered = false;\n        // this.mUnreliableDataChannel = this.mPeer.createDataChannel(WebRtcDataPeer.sLabelUnreliable, configUnreliable);\n        // this.RegisterObserverUnreliable();\n    }\n\n    protected OnCleanup(): void {\n        if (this.mReliableDataChannel != null)\n            this.mReliableDataChannel.close();\n\n        if (this.mUnreliableDataChannel != null)\n            this.mUnreliableDataChannel.close();\n\n        //dont set to null. handlers will be called later\n    }\n\n    private RegisterObserverReliable(): void {\n        this.mReliableDataChannel.onmessage = (event: MessageEvent) => { this.ReliableDataChannel_OnMessage(event); };\n        this.mReliableDataChannel.onopen = (event: Event) => { this.ReliableDataChannel_OnOpen(); };\n        this.mReliableDataChannel.onclose = (event: Event) => { this.ReliableDataChannel_OnClose(); };\n        this.mReliableDataChannel.onerror = (event: Event) => { this.ReliableDataChannel_OnError(\"\"); }; //should the event just be a string?\n    }\n\n    private RegisterObserverUnreliable(): void {\n        this.mUnreliableDataChannel.onmessage = (event: MessageEvent) => { this.UnreliableDataChannel_OnMessage(event); };\n        this.mUnreliableDataChannel.onopen = (event: Event) => { this.UnreliableDataChannel_OnOpen(); };\n        this.mUnreliableDataChannel.onclose = (event: Event) => { this.UnreliableDataChannel_OnClose(); };\n        this.mUnreliableDataChannel.onerror = (event: Event) => { this.UnreliableDataChannel_OnError(\"\"); };//should the event just be a string?\n    }\n\n\n    public SendData(data: Uint8Array,/* offset : number, length : number,*/ reliable: boolean): boolean {\n        //let buffer: ArrayBufferView = data.subarray(offset, offset + length) as ArrayBufferView;\n        let buffer: ArrayBufferView = data as ArrayBufferView;\n        let MAX_SEND_BUFFER = 1024 * 1024;\n        //chrome bug: If the channels is closed remotely trough disconnect\n        //then the local channel can appear open but will throw an exception\n        //if send is called\n        let sentSuccessfully = false;\n        try {\n            if (reliable) {\n                if (this.mReliableDataChannel.readyState === \"open\")\n                {\n                    //bugfix: WebRTC seems to simply close the data channel if we send\n                    //too much at once. avoid this from now on by returning false\n                    //if the buffer gets too full\n                    if((this.mReliableDataChannel.bufferedAmount + buffer.byteLength) < MAX_SEND_BUFFER)\n                    {\n                        this.mReliableDataChannel.send(buffer);\n                        sentSuccessfully = true;\n                    }\n                }\n            }\n            else {\n                if (this.mUnreliableDataChannel.readyState === \"open\")\n                {\n                    if((this.mUnreliableDataChannel.bufferedAmount + buffer.byteLength) < MAX_SEND_BUFFER)\n                    {\n                        this.mUnreliableDataChannel.send(buffer);\n                        sentSuccessfully = true;\n                    }\n                }\n            }\n        } catch (e) {\n            SLog.LogError(\"Exception while trying to send: \" + e);\n        }\n        return sentSuccessfully;\n    }\n    public GetBufferedAmount(reliable: boolean): number {\n\n        let result = -1;\n        try {\n            if (reliable) {\n                if (this.mReliableDataChannel.readyState === \"open\")\n                {\n                    result = this.mReliableDataChannel.bufferedAmount;\n                }\n            }\n            else {\n                if (this.mUnreliableDataChannel.readyState === \"open\")\n                {\n                    result = this.mUnreliableDataChannel.bufferedAmount;\n                }\n            }\n        } catch (e) {\n            SLog.LogError(\"Exception while trying to access GetBufferedAmount: \" + e);\n        }\n        return result;\n    }\n\n    public DequeueEvent(/*out*/ ev: Output<NetworkEvent>): boolean {\n        //lock(mEvents)\n        {\n            if (this.mEvents.Count() > 0) {\n                ev.val = this.mEvents.Dequeue();\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private Enqueue(ev: NetworkEvent): void {\n        //lock(mEvents)\n        {\n            this.mEvents.Enqueue(ev);\n        }\n\n    }\n\n\n\n    public OnDataChannel(data_channel: RTCDataChannel): void {\n        let newChannel = data_channel;\n        if (newChannel.label == WebRtcDataPeer.sLabelReliable) {\n            this.mReliableDataChannel = newChannel;\n            this.RegisterObserverReliable();\n        }\n        else if (newChannel.label == WebRtcDataPeer.sLabelUnreliable) {\n            this.mUnreliableDataChannel = newChannel;\n            this.RegisterObserverUnreliable();\n        }\n        else {\n            Debug.LogError(\"Datachannel with unexpected label \" + newChannel.label);\n        }\n\n    }\n\n    private RtcOnMessageReceived(event: MessageEvent, reliable: boolean): void {\n        let eventType = NetEventType.UnreliableMessageReceived;\n        if (reliable) {\n            eventType = NetEventType.ReliableMessageReceived;\n        }\n\n        //async conversion to blob/arraybuffer here\n        if (event.data instanceof ArrayBuffer) {\n\n            let buffer = new Uint8Array(event.data);\n            this.Enqueue(new NetworkEvent(eventType, this.mConnectionId, buffer));\n\n        } else if (event.data instanceof Blob) {\n            var connectionId = this.mConnectionId;\n            var fileReader = new FileReader();\n            var self: WebRtcDataPeer = this;\n            fileReader.onload = function () {\n                //need to use function as this pointer is needed to reference to the data\n                let data = this.result as ArrayBuffer;\n                let buffer = new Uint8Array(data);\n                self.Enqueue(new NetworkEvent(eventType, self.mConnectionId, buffer));\n            };\n            fileReader.readAsArrayBuffer(event.data);\n\n        } else {\n            Debug.LogError(\"Invalid message type. Only blob and arraybuffer supported: \" + event.data);\n        }\n    }\n\n\n    private ReliableDataChannel_OnMessage(event: MessageEvent): void {\n        Debug.Log(\"ReliableDataChannel_OnMessage \");\n        this.RtcOnMessageReceived(event, true);\n    }\n\n    private ReliableDataChannel_OnOpen(): void {\n        Debug.Log(\"mReliableDataChannelReady\");\n        this.mReliableDataChannelReady = true;\n        if (this.IsRtcConnected()) {\n            this.RtcSetConnected();\n            Debug.Log(\"Fully connected\");\n        }\n    }\n\n    private ReliableDataChannel_OnClose(): void {\n        this.RtcSetClosed();\n    }\n\n    private ReliableDataChannel_OnError(errorMsg: string) : void\n    {\n        Debug.LogError(errorMsg);\n        this.RtcSetClosed();\n    }\n\n    private UnreliableDataChannel_OnMessage(event: MessageEvent): void {\n        Debug.Log(\"UnreliableDataChannel_OnMessage \");\n        this.RtcOnMessageReceived(event, false);\n    }\n\n    private UnreliableDataChannel_OnOpen(): void {\n        Debug.Log(\"mUnreliableDataChannelReady\");\n        this.mUnreliableDataChannelReady = true;\n        if (this.IsRtcConnected()) {\n            this.RtcSetConnected();\n            Debug.Log(\"Fully connected\");\n        }\n    }\n\n    private UnreliableDataChannel_OnClose(): void {\n        this.RtcSetClosed();\n    }\n\n    private UnreliableDataChannel_OnError(errorMsg: string): void {\n        Debug.LogError(errorMsg);\n        this.RtcSetClosed();\n    }\n\n    private IsRtcConnected(): boolean {\n        return this.mReliableDataChannelReady && this.mUnreliableDataChannelReady;\n    }\n\n\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nimport {ConnectionId, NetworkEvent, NetEventType, IBasicNetwork} from './INetwork'\nimport { SLog } from './Helper';\n\nexport enum WebsocketConnectionStatus {\n    Uninitialized,\n    NotConnected,\n    Connecting,\n    Connected,\n    Disconnecting //server will shut down, all clients disconnect, ...\n}\n\nexport enum WebsocketServerStatus {\n    Offline,\n    Starting,\n    Online,\n    ShuttingDown\n}\n\n\n//TODO: handle errors if the socket connection failed\n//+ send back failed events for connected / serverstart events that are buffered\nexport class WebsocketNetwork implements IBasicNetwork  {\n\n    public static readonly LOGTAG = \"WebsocketNetwork\";\n\n    //websocket.\n    private mSocket: WebSocket;\n\n    //currents status. will be updated based on update call\n    private mStatus = WebsocketConnectionStatus.Uninitialized;\n    public getStatus() { return this.mStatus;};\n\n    //queue to hold buffered outgoing messages\n    private mOutgoingQueue = new Array<NetworkEvent>();\n\n    //buffer for incoming messages\n    private mIncomingQueue = new Array<NetworkEvent>();\n\n    //Status of the server for incoming connections\n    private mServerStatus = WebsocketServerStatus.Offline;\n\n    //outgoing connections (just need to be stored to allow to send out a failed message\n    //if the whole signaling connection fails\n    private mConnecting = new Array<number>();\n    private mConnections = new Array<number>();\n\n    //next free connection id\n    private mNextOutgoingConnectionId = new ConnectionId(1);\n\n    /// <summary>\n    /// Version of the protocol implemented here\n    /// </summary>\n    public static readonly PROTOCOL_VERSION = 2;\n\n    /// <summary>\n    /// Minimal protocol version that is still supported.\n    /// V 1 servers won't understand heartbeat and version\n    /// messages but would just log an unknown message and\n    /// continue normally.\n    /// </summary>\n    public static readonly PROTOCOL_VERSION_MIN = 1;\n\n    /// <summary>\n    /// Assume 1 until message received\n    /// </summary>\n    private mRemoteProtocolVersion = 1;\n\n    private mUrl: string = null;\n    private mConfig: WebsocketNetwork.Configuration;\n    private mLastHeartbeat: number;\n    private mHeartbeatReceived = true;\n\n    private mIsDisposed = false;\n\n\n    public constructor(url: string, configuration?:WebsocketNetwork.Configuration) {\n        this.mUrl = url;\n        this.mStatus = WebsocketConnectionStatus.NotConnected;\n\n        this.mConfig = configuration;\n        if(!this.mConfig)\n            this.mConfig = new WebsocketNetwork.Configuration();\n        this.mConfig.Lock();\n    }\n    private WebsocketConnect(): void {\n\n        this.mStatus = WebsocketConnectionStatus.Connecting;\n        this.mSocket = new WebSocket(this.mUrl);\n        this.mSocket.binaryType = \"arraybuffer\";\n        this.mSocket.onopen = () => { this.OnWebsocketOnOpen(); }\n        this.mSocket.onerror = (error) => { this.OnWebsocketOnError(error); };\n        this.mSocket.onmessage = (e) => { this.OnWebsocketOnMessage(e); };\n        this.mSocket.onclose = (e) => { this.OnWebsocketOnClose(e); };\n    }\n    private WebsocketCleanup() : void {\n        this.mSocket.onopen = null;\n        this.mSocket.onerror = null;\n        this.mSocket.onmessage = null;\n        this.mSocket.onclose = null;\n        if (this.mSocket.readyState == this.mSocket.OPEN\n            || this.mSocket.readyState == this.mSocket.CONNECTING) {\n\n            this.mSocket.close();\n        }\n        this.mSocket = null;\n    }\n    private EnsureServerConnection(): void\n    {\n        if (this.mStatus == WebsocketConnectionStatus.NotConnected) {\n                //no server\n                //no connection about to be established\n                //no current connections\n                //-> disconnect the server connection\n            this.WebsocketConnect();\n        }\n    }\n    private UpdateHeartbeat():void{\n\n        if(this.mStatus == WebsocketConnectionStatus.Connected && this.mConfig.Heartbeat > 0)\n        {\n            let diff = Date.now() - this.mLastHeartbeat;\n            if(diff > (this.mConfig.Heartbeat * 1000))\n            {\n                //We trigger heatbeat timeouts only for protocol V2\n                //protocol 1 can receive the heatbeats but\n                //won't send a reply\n                //(still helpful to trigger TCP ACK timeout)\n                if(this.mRemoteProtocolVersion > 1\n                     && this.mHeartbeatReceived == false)\n                {\n                    this.TriggerHeartbeatTimeout();\n                    return;\n                }\n                this.mLastHeartbeat = Date.now();\n                this.mHeartbeatReceived = false;\n                this.SendHeartbeat();\n            }\n        }\n    }\n    private TriggerHeartbeatTimeout(){\n        SLog.L(\"Closing due to heartbeat timeout. Server didn't respond in time.\", WebsocketNetwork.LOGTAG);\n        this.Cleanup();\n    }\n    private CheckSleep() : void\n    {\n        if (this.mStatus == WebsocketConnectionStatus.Connected\n            && this.mServerStatus == WebsocketServerStatus.Offline\n            && this.mConnecting.length == 0\n            && this.mConnections.length == 0) {\n            //no server\n            //no connection about to be established\n            //no current connections\n            //-> disconnect the server connection\n            this.Cleanup();\n        }\n    }\n\n    private OnWebsocketOnOpen() {\n\n        SLog.L('onWebsocketOnOpen', WebsocketNetwork.LOGTAG);\n        this.mStatus = WebsocketConnectionStatus.Connected;\n        this.mLastHeartbeat = Date.now();\n        this.SendVersion();\n    }\n    private OnWebsocketOnClose(event: CloseEvent) {\n        SLog.L('Closed: ' + JSON.stringify(event), WebsocketNetwork.LOGTAG);\n\n        if(event.code != 1000)\n        {\n            SLog.LE(\"Websocket closed with code: \" + event.code + \" \" + event.reason);\n        }\n\n        //ignore closed event if it was caused due to a shutdown (as that means we cleaned up already)\n        if (this.mStatus == WebsocketConnectionStatus.Disconnecting\n            || this.mStatus == WebsocketConnectionStatus.NotConnected)\n            return;\n        this.Cleanup();\n        this.mStatus = WebsocketConnectionStatus.NotConnected;\n    }\n    private OnWebsocketOnMessage(event) {\n        if (this.mStatus == WebsocketConnectionStatus.Disconnecting\n            || this.mStatus == WebsocketConnectionStatus.NotConnected)\n            return;\n        //browsers will have ArrayBuffer in event.data -> change to byte array\n        let msg = new Uint8Array(event.data);\n        this.ParseMessage(msg);\n    }\n    private OnWebsocketOnError(error) {\n        //the error event doesn't seem to have any useful information?\n        //browser is expected to call OnClose after this\n        SLog.LE('WebSocket Error ' + error);\n    }\n    /// <summary>\n    /// called during Disconnecting state either trough server connection failed or due to Shutdown\n    ///\n    /// Also used to switch to sleeping mode. In this case there connection isn't used as\n    /// server and doesn't have any connections (established or connecting) thus\n    /// only WebsocketCleanup is in effect.\n    ///\n    /// WebsocketNetwork has to be still usable after this call like a newly\n    /// created connections (except with events in the message queue)\n    /// </summary>\n    private Cleanup(): void {\n\n        //check if this was done already (or we are in the process of cleanup already)\n        if (this.mStatus == WebsocketConnectionStatus.Disconnecting\n            || this.mStatus == WebsocketConnectionStatus.NotConnected)\n            return;\n\n        this.mStatus = WebsocketConnectionStatus.Disconnecting;\n\n        //throw connection failed events for each connection in mConnecting\n        for (let conId of this.mConnecting) {\n            //all connection it tries to establish right now fail due to shutdown\n            console.log(\"!!! herehere cleanup...\")\n            this.EnqueueIncoming(\n                new NetworkEvent(NetEventType.ConnectionFailed, new ConnectionId(conId), null));\n        }\n        this.mConnecting = new Array<number>();\n\n        //throw disconnect events for all NewConnection events in the outgoing queue\n        //ignore messages and everything else\n        for (let conId of this.mConnections) {\n            //all connection it tries to establish right now fail due to shutdown\n            this.EnqueueIncoming(\n                new NetworkEvent(NetEventType.Disconnected, new ConnectionId(conId), null));\n        }\n        this.mConnections = new Array<number>();\n\n        if (this.mServerStatus == WebsocketServerStatus.Starting) {\n\n            //if server was Starting -> throw failed event\n            this.EnqueueIncoming(\n                new NetworkEvent(NetEventType.ServerInitFailed, ConnectionId.INVALID, null));\n        } else if (this.mServerStatus == WebsocketServerStatus.Online) {\n\n            //if server was Online -> throw close event\n            this.EnqueueIncoming(\n                new NetworkEvent(NetEventType.ServerClosed, ConnectionId.INVALID, null));\n        } else if (this.mServerStatus == WebsocketServerStatus.ShuttingDown) {\n\n\n            //if server was ShuttingDown -> throw close event (don't think this can happen)\n            this.EnqueueIncoming(\n                new NetworkEvent(NetEventType.ServerClosed, ConnectionId.INVALID, null));\n        }\n        this.mServerStatus = WebsocketServerStatus.Offline;\n\n\n        this.mOutgoingQueue = new Array<NetworkEvent>();\n\n\n        this.WebsocketCleanup();\n        this.mStatus = WebsocketConnectionStatus.NotConnected;\n    }\n\n    private EnqueueOutgoing(evt: NetworkEvent): void {\n        this.mOutgoingQueue.push(evt);\n    }\n    private EnqueueIncoming(evt: NetworkEvent): void {\n        this.mIncomingQueue.push(evt);\n    }\n    private TryRemoveConnecting(id: ConnectionId): void {\n        var index = this.mConnecting.indexOf(id.id);\n        if (index != -1) {\n            this.mConnecting.splice(index, 1);\n        }\n    }\n    private TryRemoveConnection(id: ConnectionId): void {\n        var index = this.mConnections.indexOf(id.id);\n        if (index != -1) {\n            this.mConnections.splice(index, 1);\n        }\n    }\n\n    private ParseMessage(msg:Uint8Array):void{\n        if(msg.length == 0)\n        {\n\n        }else if(msg[0] == NetEventType.MetaVersion)\n        {\n            if (msg.length > 1)\n            {\n                this.mRemoteProtocolVersion = msg[1];\n            }\n            else\n            {\n                SLog.LW(\"Received an invalid MetaVersion header without content.\");\n            }\n\n        }else if(msg[0] == NetEventType.MetaHeartbeat)\n        {\n            this.mHeartbeatReceived = true;\n        }else\n        {\n            let evt = NetworkEvent.fromByteArray(msg);\n            this.HandleIncomingEvent(evt);\n        }\n    }\n    private HandleIncomingEvent(evt: NetworkEvent) {\n\n        if (evt.Type == NetEventType.NewConnection) {\n            //removing connecting info\n            this.TryRemoveConnecting(evt.ConnectionId);\n\n            //add connection\n            this.mConnections.push(evt.ConnectionId.id);\n        } else if (evt.Type == NetEventType.ConnectionFailed) {\n\n            //remove connecting info\n            this.TryRemoveConnecting(evt.ConnectionId);\n        } else if (evt.Type == NetEventType.Disconnected) {\n\n            //remove from connections\n            this.TryRemoveConnection(evt.ConnectionId);\n\n        } else if (evt.Type == NetEventType.ServerInitialized)\n        {\n            this.mServerStatus = WebsocketServerStatus.Online;\n\n        } else if (evt.Type == NetEventType.ServerInitFailed)\n        {\n            this.mServerStatus = WebsocketServerStatus.Offline;\n\n        } else if (evt.Type == NetEventType.ServerClosed)\n        {\n            this.mServerStatus = WebsocketServerStatus.ShuttingDown;\n            //any cleaning up to do?\n            this.mServerStatus = WebsocketServerStatus.Offline;\n        }\n\n        this.EnqueueIncoming(evt);\n    }\n\n    private HandleOutgoingEvents(): void {\n\n        while (this.mOutgoingQueue.length > 0) {\n            var evt = this.mOutgoingQueue.shift();\n            this.SendNetworkEvent(evt);\n        }\n    }\n\n\n\n    private SendHeartbeat() : void\n    {\n        let msg = new Uint8Array(1);\n        msg[0] = NetEventType.MetaHeartbeat;\n        this.InternalSend(msg);\n    }\n\n    private SendVersion() :void\n    {\n        let msg = new Uint8Array(2);\n        msg[0] = NetEventType.MetaVersion;\n        msg[1] = WebsocketNetwork.PROTOCOL_VERSION;\n        this.InternalSend(msg);\n    }\n\n    private SendNetworkEvent(evt: NetworkEvent):void\n    {\n        var msg = NetworkEvent.toByteArray(evt);\n        this.InternalSend(msg);\n    }\n\n    private InternalSend(msg: Uint8Array): void\n    {\n        this.mSocket.send(msg);\n    }\n\n    private NextConnectionId(): ConnectionId {\n        var result = this.mNextOutgoingConnectionId;\n        this.mNextOutgoingConnectionId = new ConnectionId(this.mNextOutgoingConnectionId.id + 1);\n        return result;\n    }\n\n    private GetRandomKey(): string {\n\n        var result = \"\";\n        for (var i = 0; i < 7; i++) {\n            result += String.fromCharCode(65 + Math.round(Math.random() * 25));\n        }\n        return result;\n    }\n\n\n\n    //interface implementation\n\n    public Dequeue(): NetworkEvent {\n        if (this.mIncomingQueue.length > 0)\n            return this.mIncomingQueue.shift();\n        return null;\n    }\n    public Peek(): NetworkEvent {\n        if (this.mIncomingQueue.length > 0)\n            return this.mIncomingQueue[0];\n        return null;\n    }\n    public Update(): void {\n\n        this.UpdateHeartbeat();\n        this.CheckSleep();\n    }\n\n    public Flush(): void {\n        //ideally we buffer everything and then flush when it is connected as\n        //websockets aren't suppose to be used for realtime communication anyway\n        if (this.mStatus == WebsocketConnectionStatus.Connected)\n            this.HandleOutgoingEvents();\n    }\n    public SendData(id: ConnectionId, data: Uint8Array, /*offset: number, length: number,*/ reliable: boolean): boolean {\n        if (id == null || data == null || data.length == 0)\n            return;\n        var evt: NetworkEvent;\n        if (reliable) {\n            evt = new NetworkEvent(NetEventType.ReliableMessageReceived, id, data);\n        } else {\n            evt = new NetworkEvent(NetEventType.UnreliableMessageReceived, id, data);\n        }\n\n        this.EnqueueOutgoing(evt);\n        return true;\n    }\n    public Disconnect(id: ConnectionId): void {\n        var evt = new NetworkEvent(NetEventType.Disconnected, id, null);\n        this.EnqueueOutgoing(evt);\n    }\n    public Shutdown(): void {\n        this.Cleanup();\n        this.mStatus = WebsocketConnectionStatus.NotConnected;\n    }\n\n    public Dispose() {\n        if (this.mIsDisposed == false) {\n            this.Shutdown();\n            this.mIsDisposed = true;\n        }\n    }\n\n\n    public StartServer(): void;\n    public StartServer(address: string): void;\n    public StartServer(address?: string): void {\n        if (address == null) {\n            address = \"\" + this.GetRandomKey();\n        }\n\n        if (this.mServerStatus == WebsocketServerStatus.Offline) {\n\n            this.EnsureServerConnection();\n            this.mServerStatus = WebsocketServerStatus.Starting;\n            //TODO: address is a string but ubytearray is defined. will fail if binary\n            this.EnqueueOutgoing(new NetworkEvent(NetEventType.ServerInitialized, ConnectionId.INVALID, address));\n\n        } else {\n\n            this.EnqueueIncoming(new NetworkEvent(NetEventType.ServerInitFailed, ConnectionId.INVALID, address));\n\n        }\n    }\n\n    public StopServer(): void {\n        this.EnqueueOutgoing(new NetworkEvent(NetEventType.ServerClosed, ConnectionId.INVALID, null));\n    }\n    public Connect(address: string): ConnectionId {\n\n        this.EnsureServerConnection();\n        var newConId = this.NextConnectionId();\n        this.mConnecting.push(newConId.id);\n        var evt = new NetworkEvent(NetEventType.NewConnection, newConId, address);\n        this.EnqueueOutgoing(evt);\n\n        return newConId;\n    }\n}\n\n\nexport namespace WebsocketNetwork{\n\n    export class Configuration{\n        mHeartbeat:number = 30;\n\n        get Heartbeat():number\n        {\n            return this.mHeartbeat;\n        }\n        set Heartbeat(value:number){\n            if(this.mLocked)\n            {\n                throw new Error(\"Can't change configuration once used.\");\n            }\n            this.mHeartbeat = value;\n        }\n\n        mLocked = false;\n\n        Lock():void\n        {\n            this.mLocked = true;\n        }\n    }\n}\n\n\n//Below tests only. Move out later\n\nfunction bufferToString(buffer: Uint8Array): string {\n    let arr = new Uint16Array(buffer.buffer, buffer.byteOffset, buffer.byteLength / 2);\n    return String.fromCharCode.apply(null, arr);\n}\n\nfunction stringToBuffer(str: string): Uint8Array {\n    let buf = new ArrayBuffer(str.length * 2);\n    let bufView = new Uint16Array(buf);\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n    }\n\n    let result = new Uint8Array(buf);\n    return result;\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nexport * from './INetwork'\nexport * from './Helper'\nexport * from './WebRtcPeer'\nexport * from './WebRtcNetwork'\nexport * from './WebsocketNetwork'\nexport * from './LocalNetwork'","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/**This file contains the mapping between the awrtc_browser library and\n * Unitys WebGL support. Not needed for regular use.\n */\nimport {SLog, WebRtcNetwork, SignalingConfig, NetworkEvent, ConnectionId, LocalNetwork, WebsocketNetwork} from \"../network/index\"\nimport { MediaConfigurationState, NetworkConfig, MediaConfig } from \"../media/index\";\nimport { BrowserMediaStream, BrowserMediaNetwork, DeviceApi, BrowserWebRtcCall } from \"../media_browser/index\";\n\n\nvar CAPI_InitMode = {\n    //Original mode. Devices will be unknown after startup\n    Default: 0,\n    //Waits for the desvice info to come in\n    //names might be missing though (browser security thing)\n    WaitForDevices: 1,\n    //Asks the user for camera / audio access to be able to\n    //get accurate device information\n    RequestAccess: 2\n  };\n\nvar CAPI_InitState = {\n    Uninitialized: 0,\n    Initializing: 1,\n    Initialized: 2,\n    Failed: 3\n  };\nvar gCAPI_InitState = CAPI_InitState.Uninitialized;\n\nexport function CAPI_InitAsync(initmode) \n{\n    console.debug(\"CAPI_InitAsync mode: \" + initmode);\n    gCAPI_InitState = CAPI_InitState.Initializing;\n    let hasDevApi = DeviceApi.IsApiAvailable();\n    if( hasDevApi && initmode == CAPI_InitMode.WaitForDevices)\n    {\n        DeviceApi.Update();\n    }else if(hasDevApi && initmode == CAPI_InitMode.RequestAccess)\n    {\n        DeviceApi.RequestUpdate();\n    }else{\n        //either no device access available or not requested. Switch\n        //to init state immediately without device info\n        gCAPI_InitState = CAPI_InitState.Initialized;\n        if(hasDevApi == false)\n        {\n            console.debug(\"Initialized without accessible DeviceAPI\");\n        }\n    }\n}\nexport function CAPI_PollInitState() \n{\n    //keep checking if the DeviceApi left pending state\n    //Once completed init is finished.\n    //Later we might do more here\n    if(DeviceApi.IsPending == false && gCAPI_InitState == CAPI_InitState.Initializing)\n    {\n        gCAPI_InitState = CAPI_InitState.Initialized;\n        console.debug(\"Init completed.\");\n    }\n    return gCAPI_InitState;\n}\n\n/**\n * \n * @param loglevel \n * None = 0,\n * Errors = 1,\n * Warnings = 2,\n * Verbose = 3\n */\nexport function CAPI_SLog_SetLogLevel(loglevel:number)\n{\n    if(loglevel < 0 || loglevel > 3)\n    {\n        SLog.LogError(\"Invalid log level \" + loglevel);\n        return;\n    }\n    SLog.SetLogLevel(loglevel);\n}\n\n\n\nvar gCAPI_WebRtcNetwork_Instances: { [id: number]: WebRtcNetwork }= {};\nvar gCAPI_WebRtcNetwork_InstancesNextIndex = 1;\n\n\nexport function CAPI_WebRtcNetwork_IsAvailable() {\n    //used by C# component to check if this plugin is loaded.\n    //can only go wrong due to programming error / packaging\n    if(WebRtcNetwork && WebsocketNetwork)\n        return true;\n    return false;\n}\n\n\nexport function CAPI_WebRtcNetwork_IsBrowserSupported() \n{\n    if (RTCPeerConnection && RTCDataChannel)\n        return true;\n\n    return false;\n}\n\n\nexport function CAPI_WebRtcNetwork_Create(lConfiguration: string) {\n    var lIndex = gCAPI_WebRtcNetwork_InstancesNextIndex;\n    gCAPI_WebRtcNetwork_InstancesNextIndex++;\n\n    var signaling_class = \"LocalNetwork\";\n    var signaling_param: any = null;\n    var iceServers: RTCIceServer[];\n\n    if (lConfiguration == null || typeof lConfiguration !== 'string' || lConfiguration.length === 0) {\n\n        SLog.LogError(\"invalid configuration. Returning -1! Config: \" + lConfiguration);\n        return -1;\n    }\n    else {\n        \n        var conf = JSON.parse(lConfiguration);\n\n        if (conf) {\n\n            if (conf.signaling) {\n                signaling_class = conf.signaling.class;\n                signaling_param = conf.signaling.param;\n            }\n            if (conf.iceServers) {\n                iceServers = conf.iceServers;\n            }\n            SLog.L(signaling_class);\n            //this seems to be broken after switch to modules\n            //let signalingNetworkClass = window[signaling_class];\n            //let signalingNetworkClass =  new (<any>window)[\"awrtc.LocalNetwork\"];\n            //console.debug(signalingNetworkClass);\n            let signalingNetworkClass : any;\n            if(signaling_class === \"LocalNetwork\")\n            {\n                signalingNetworkClass = LocalNetwork;\n            }else{\n                signalingNetworkClass = WebsocketNetwork;\n            }\n\n            let signalingConfig = new SignalingConfig(new signalingNetworkClass(signaling_param));\n\n            \n            let rtcConfiguration: RTCConfiguration = { iceServers: iceServers };\n\n            gCAPI_WebRtcNetwork_Instances[lIndex] = new WebRtcNetwork(signalingConfig, rtcConfiguration);\n        } else {\n            SLog.LogWarning(\"Parsing configuration failed. Configuration: \" + lConfiguration);\n            return -1;\n        }\n    }\n    //gCAPI_WebRtcNetwork_Instances[lIndex].OnLog = function (lMsg) {\n    //    console.debug(lMsg);\n    //};\n    return lIndex;\n}\n\nexport function CAPI_WebRtcNetwork_Release(lIndex: number) {\n    if (lIndex in gCAPI_WebRtcNetwork_Instances) {\n        gCAPI_WebRtcNetwork_Instances[lIndex].Dispose();\n        delete gCAPI_WebRtcNetwork_Instances[lIndex];\n    }\n}\n\nexport function CAPI_WebRtcNetwork_Connect(lIndex: number, lRoom: string) {\n    return gCAPI_WebRtcNetwork_Instances[lIndex].Connect(lRoom);\n}\n\nexport function CAPI_WebRtcNetwork_StartServer(lIndex: number, lRoom: string) {\n    gCAPI_WebRtcNetwork_Instances[lIndex].StartServer(lRoom);\n}\nexport function CAPI_WebRtcNetwork_StopServer(lIndex: number) {\n    gCAPI_WebRtcNetwork_Instances[lIndex].StopServer();\n}\nexport function CAPI_WebRtcNetwork_Disconnect(lIndex: number, lConnectionId: number) {\n    gCAPI_WebRtcNetwork_Instances[lIndex].Disconnect(new ConnectionId(lConnectionId));\n}\n\nexport function CAPI_WebRtcNetwork_Shutdown(lIndex: number) {\n    gCAPI_WebRtcNetwork_Instances[lIndex].Shutdown();\n}\n\nexport function CAPI_WebRtcNetwork_Update(lIndex: number) {\n    gCAPI_WebRtcNetwork_Instances[lIndex].Update();\n}\n\nexport function CAPI_WebRtcNetwork_Flush(lIndex: number) {\n    gCAPI_WebRtcNetwork_Instances[lIndex].Flush();\n}\n\nexport function CAPI_WebRtcNetwork_SendData(lIndex: number, lConnectionId: number, lUint8ArrayData: Uint8Array, lReliable: boolean) {\n    gCAPI_WebRtcNetwork_Instances[lIndex].SendData(new ConnectionId(lConnectionId), lUint8ArrayData, lReliable);\n}\n\n//helper for emscripten\nexport function CAPI_WebRtcNetwork_SendDataEm(lIndex: number, lConnectionId: number, lUint8ArrayData: Uint8Array, lUint8ArrayDataOffset: number, lUint8ArrayDataLength: number, lReliable: boolean) {\n    //console.debug(\"SendDataEm: \" + lReliable + \" length \" + lUint8ArrayDataLength + \" to \" + lConnectionId);\n    var arrayBuffer = new Uint8Array(lUint8ArrayData.buffer, lUint8ArrayDataOffset, lUint8ArrayDataLength);\n    return gCAPI_WebRtcNetwork_Instances[lIndex].SendData(new ConnectionId(lConnectionId), arrayBuffer, lReliable);\n}\n\nexport function CAPI_WebRtcNetwork_GetBufferedAmount(lIndex: number, lConnectionId: number, lReliable: boolean) {\n    return gCAPI_WebRtcNetwork_Instances[lIndex].GetBufferedAmount(new ConnectionId(lConnectionId), lReliable);\n}\n\n\nexport function CAPI_WebRtcNetwork_Dequeue(lIndex: number): NetworkEvent {\n    return gCAPI_WebRtcNetwork_Instances[lIndex].Dequeue();\n}\nexport function CAPI_WebRtcNetwork_Peek(lIndex: number): NetworkEvent {\n    return gCAPI_WebRtcNetwork_Instances[lIndex].Peek();\n}\n\n/**Allows to peek into the next event to figure out its length and allocate\n * the memory needed to store it before calling\n *      CAPI_WebRtcNetwork_DequeueEm\n * \n * @param {type} lIndex\n * @returns {Number}\n */\nexport function CAPI_WebRtcNetwork_PeekEventDataLength(lIndex) {\n    var lNetEvent = gCAPI_WebRtcNetwork_Instances[lIndex].Peek();\n    return CAPI_WebRtcNetwork_CheckEventLength(lNetEvent);\n}\n//helper\nexport function CAPI_WebRtcNetwork_CheckEventLength(lNetEvent: NetworkEvent) {\n    if (lNetEvent == null) {\n        //invalid event\n        return -1;\n    } else if (lNetEvent.RawData == null) {\n        //no data\n        return 0;\n    } else if (typeof lNetEvent.RawData === \"string\") {\n        //no user strings are allowed thus we get away with counting the characters\n        //(ASCII only!)\n        return lNetEvent.RawData.length;\n    } else //message event types 1 and 2 only? check for it?\n    {\n        //its not null and not a string. can only be a Uint8Array if we didn't\n        //mess something up in the implementation\n\n        return lNetEvent.RawData.length;\n    }\n}\nexport function CAPI_WebRtcNetwork_EventDataToUint8Array(data: any, dataUint8Array: Uint8Array, dataOffset: number, dataLength: number) {\n    //data can be null, string or Uint8Array\n    //return value will be the length of data we used\n    if (data == null) {\n        return 0;\n    } else if ((typeof data) === \"string\") {\n        //in case we don't get a large enough array we need to cut off the string\n        var i = 0;\n        for (i = 0; i < data.length && i < dataLength; i++) {\n            dataUint8Array[dataOffset + i] = data.charCodeAt(i);\n        }\n        return i;\n    }\n    else {\n        var i = 0;\n        //in case we don't get a large enough array we need to cut off the string\n        for (i = 0; i < data.length && i < dataLength; i++) {\n            dataUint8Array[dataOffset + i] = data[i];\n        }\n        return i;\n    }\n}\n\n//Version for emscripten or anything that doesn't have a garbage collector.\n// The memory for everything needs to be allocated before the call.\n\nexport function CAPI_WebRtcNetwork_DequeueEm(lIndex: number, lTypeIntArray: Int32Array, lTypeIntIndex: number, lConidIntArray: Int32Array, lConidIndex: number, lDataUint8Array: Uint8Array, lDataOffset: number, lDataLength: number, lDataLenIntArray: Int32Array, lDataLenIntIndex: number) {\n    var nEvt = CAPI_WebRtcNetwork_Dequeue(lIndex);\n    if (nEvt == null)\n        return false;\n\n    lTypeIntArray[lTypeIntIndex] = nEvt.Type;\n    lConidIntArray[lConidIndex] = nEvt.ConnectionId.id;\n\n    //console.debug(\"event\" + nEvt.netEventType);\n    var length = CAPI_WebRtcNetwork_EventDataToUint8Array(nEvt.RawData, lDataUint8Array, lDataOffset, lDataLength);\n    lDataLenIntArray[lDataLenIntIndex] = length; //return the length if so the user knows how much of the given array is used\n\n    return true;\n}\nexport function CAPI_WebRtcNetwork_PeekEm(lIndex: number, lTypeIntArray: Int32Array, lTypeIntIndex: number, lConidIntArray: Int32Array, lConidIndex: number, lDataUint8Array: Uint8Array, lDataOffset: number, lDataLength: number, lDataLenIntArray: Int32Array, lDataLenIntIndex: number) {\n    var nEvt = CAPI_WebRtcNetwork_Peek(lIndex);\n    if (nEvt == null)\n        return false;\n\n    lTypeIntArray[lTypeIntIndex] = nEvt.Type;\n    lConidIntArray[lConidIndex] = nEvt.ConnectionId.id;\n\n    //console.debug(\"event\" + nEvt.netEventType);\n    var length = CAPI_WebRtcNetwork_EventDataToUint8Array(nEvt.RawData, lDataUint8Array, lDataOffset, lDataLength);\n    lDataLenIntArray[lDataLenIntIndex] = length; //return the length if so the user knows how much of the given array is used\n\n    return true;\n}\n\n\n\nexport function CAPI_MediaNetwork_IsAvailable() : boolean{\n\n    if(BrowserMediaNetwork && BrowserWebRtcCall)\n        return true;\n    return false;\n}\n\nexport function CAPI_MediaNetwork_HasUserMedia() : boolean{\n    if(navigator && navigator.mediaDevices)\n        return true;\n    return false;\n}\n\nexport function CAPI_MediaNetwork_Create(lJsonConfiguration):number {\n    \n    let config = new NetworkConfig();\n    config = JSON.parse(lJsonConfiguration);\n\n    let mediaNetwork = new BrowserMediaNetwork(config);\n\n    var lIndex = gCAPI_WebRtcNetwork_InstancesNextIndex;\n    gCAPI_WebRtcNetwork_InstancesNextIndex++;\n\n    gCAPI_WebRtcNetwork_Instances[lIndex] = mediaNetwork;\n    return lIndex;\n}\n\n\n\n\n\n\n\n//Configure(config: MediaConfig): void;\nexport function CAPI_MediaNetwork_Configure(lIndex:number, audio: boolean, video: boolean,\n    minWidth: number, minHeight: number,\n    maxWidth: number, maxHeight: number,\n    idealWidth: number, idealHeight: number,\n    minFps: number, maxFps: number, idealFps: number, deviceName: string = \"\"){\n\n    let config: MediaConfig = new MediaConfig();\n    config.Audio = audio;\n    config.Video = video;\n    config.MinWidth = minWidth;\n    config.MinHeight = minHeight;\n    config.MaxWidth = maxWidth;\n    config.MaxHeight = maxHeight;\n    config.IdealWidth = idealWidth;\n    config.IdealHeight = idealHeight;\n\n    config.MinFps = minFps;\n    config.MaxFps = maxFps;\n    config.IdealFps = idealFps;\n\n    config.VideoDeviceName = deviceName;\n\n    config.FrameUpdates = true;\n    \n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    mediaNetwork.Configure(config);\n\n}\n//GetConfigurationState(): MediaConfigurationState;\nexport function CAPI_MediaNetwork_GetConfigurationState(lIndex: number): number{\n    \n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    return mediaNetwork.GetConfigurationState() as number;\n}\n\n//Note: not yet glued to the C# version!\n//GetConfigurationError(): string;\nexport function CAPI_MediaNetwork_GetConfigurationError(lIndex: number): string {\n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    return mediaNetwork.GetConfigurationError();\n\n}\n\n//ResetConfiguration(): void;\nexport function CAPI_MediaNetwork_ResetConfiguration(lIndex: number) : void {\n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    return mediaNetwork.ResetConfiguration();\n}\n\n//TryGetFrame(id: ConnectionId): RawFrame;\nexport function CAPI_MediaNetwork_TryGetFrame(lIndex: number, lConnectionId: number,\n            lWidthInt32Array: Int32Array, lWidthIntArrayIndex: number, \n            lHeightInt32Array: Int32Array, lHeightIntArrayIndex: number,\n            lBufferUint8Array: Uint8Array, lBufferUint8ArrayOffset: number, lBufferUint8ArrayLength: number): boolean\n{\n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    let frame = mediaNetwork.TryGetFrame(new ConnectionId(lConnectionId));\n\n    if (frame == null || frame.Buffer == null) {\n        return false;\n    } else {\n\n\n        //TODO: copy frame over\n        lWidthInt32Array[lWidthIntArrayIndex] = frame.Width;\n        lHeightInt32Array[lHeightIntArrayIndex] = frame.Height;\n\n        for (let i = 0; i < lBufferUint8ArrayLength && i < frame.Buffer.length; i++) {\n            lBufferUint8Array[lBufferUint8ArrayOffset + i] = frame.Buffer[i];\n        }\n        return true;\n    }\n}\n\n//Returns the frame buffer size or -1 if no frame is available\nexport function CAPI_MediaNetwork_TryGetFrameDataLength(lIndex: number, connectionId: number) : number {\n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    let frame = mediaNetwork.PeekFrame(new ConnectionId(connectionId));\n\n    let length: number = -1;\n    //added frame.Buffer != null as the frame might be a LazyFrame just creating a copy of the html video element\n    //in the moment frame.Buffer is called. if this fails for any reasion it might return null despite\n    //the frame object itself being available\n    if (frame != null && frame.Buffer != null) {\n        length = frame.Buffer.length;\n    }\n\n    //SLog.L(\"data length:\" + length);\n    return length;\n}\nexport function CAPI_MediaNetwork_SetVolume(lIndex: number, volume: number, connectionId: number) : void {\n\n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    mediaNetwork.SetVolume(volume, new ConnectionId(connectionId));\n}\n\nexport function CAPI_MediaNetwork_HasAudioTrack(lIndex: number, connectionId: number): boolean\n{\n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    return mediaNetwork.HasAudioTrack(new ConnectionId(connectionId));\n}\nexport function CAPI_MediaNetwork_HasVideoTrack(lIndex: number, connectionId: number): boolean {\n\n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    return mediaNetwork.HasVideoTrack(new ConnectionId(connectionId));\n}\n\nexport function CAPI_MediaNetwork_SetMute(lIndex: number, value: boolean)\n{\n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    mediaNetwork.SetMute(value);\n}\n\nexport function CAPI_MediaNetwork_IsMute(lIndex: number)\n{\n    let mediaNetwork = gCAPI_WebRtcNetwork_Instances[lIndex] as BrowserMediaNetwork;\n    return mediaNetwork.IsMute();\n}\n\n\nexport function CAPI_DeviceApi_Update():void\n{\n    DeviceApi.Update();\n}\nexport function CAPI_DeviceApi_RequestUpdate():void\n{\n    DeviceApi.RequestUpdate();\n}\nexport function CAPI_DeviceApi_LastUpdate():number\n{\n    return DeviceApi.LastUpdate;\n}\n\nexport function CAPI_DeviceApi_Devices_Length():number{\n    return Object.keys(DeviceApi.Devices).length;\n}\nexport function CAPI_DeviceApi_Devices_Get(index:number):string{\n    let keys = Object.keys(DeviceApi.Devices);\n    if(keys.length > index)\n    {\n        let key = keys[index];\n        return DeviceApi.Devices[key].label;\n    }\n    else\n    {\n        SLog.LE(\"Requested device with index \" + index + \" does not exist.\");\n        return \"\";\n    }\n}","/*\nCopyright (c) 2019, because-why-not.com Limited\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nexport * from \"./CAPI\"\n"],"sourceRoot":""}